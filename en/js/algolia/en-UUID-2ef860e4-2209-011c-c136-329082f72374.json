[{"title":"Securities", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"securities.html", "body":"The FA Platform allows you to record operations with different kinds of securities such as equities, bonds, or fund units as well as derivatives and FX contracts. To work with bonds, see Debt instruments (bonds). To work with complex securities like derivatives and FX contracts in FA, see Derivatives and FX contracts. For a list of security types in FA, see Standard security types."},
{"title":"Securities", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":2, "url":"securities.html", "body":"You can create new securities or update existing ones in the Security window. See Security window in FA Back reference for details on adding information for securities. You can also search for and view securities saved in the system in the Securities view (see Securities view in FA Back reference)."},
{"title":"Securities", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":3, "url":"securities.html", "body":"You can also import securities in files or from a market data provider. To fetch security information from market data providers, see Get security data and Get extended security data. For importing securities in files, see File formats for importing securities and security prices in FA Back reference."},
{"title":"Securities", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":4, "url":"securities.html", "body":"Security market prices can also be entered manually, fetched from a market data provider, or imported in files (see Manage market prices)."},
{"title":"Securities", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":5, "url":"securities.html", "body":"You can track and analyze security indicators such as duration, modified duration, convexity, and YTM for securities. For this, you need to define the key figures. See Security key figures for more information."},
{"title":"Securities", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":6, "url":"securities.html", "body":"To read about security configurations in the system, see Security preferences."},
{"title":"Related links", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"authority-reporting.html#related-links-10", "body":"Authority reporting in FA Back reference"},
{"title":"Import payment response files for Direct Debit from the bank", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-direct-debit-payment-response-files--from-bank-.html", "body":"When Direct Debit payment files has been sent to the bank, the bank will send response files which need to be import ta FA."},
{"title":"Steps to import response files", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-direct-debit-payment-response-files--from-bank-.html#steps-to-import-response-files", "body":"Go to Tools - Import file - Payment material."},
{"title":"Steps to import response files", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-direct-debit-payment-response-files--from-bank-.html#steps-to-import-response-files", "body":"Select the radio button CAMT.053 or PAIN.002, Click Choose File, select the file you want to import and click Upload and then Confirm upload."},
{"title":"Check imported Pain.002 files", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-direct-debit-payment-response-files--from-bank-.html#check-imported-pain-002-files", "body":"Check imported Pain.002 files"},
{"title":"Rejected payment", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-direct-debit-payment-response-files--from-bank-.html#rejected-payment", "body":"If file was technically correct, but a payment was rejected, the rejected payment can be found by going to Transactions view - Direct Debit - Payment-Rejected. The view will list all rejected payments and from the transactions Internal Info the reject reason can be found."},
{"title":"Rejected payment", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-direct-debit-payment-response-files--from-bank-.html#rejected-payment", "body":"It can also be seen from Tasks view. Clicking the task will give the details and file can be found."},
{"title":"File rejected", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-direct-debit-payment-response-files--from-bank-.html#file-rejected", "body":"If the file was technically incorrect and rejected by the bank, it can be seen by going to Task view. Clicking the task will give more details."},
{"title":"Check imported Camt.053\/054 files", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-direct-debit-payment-response-files--from-bank-.html#check-imported-camt-053-054-files", "body":"Successful Direct Debit payments gets matched, and the transaction tag Payment-Sent is changed to Payment-Matched, and transaction status is changed from Not finished to Accepted."},
{"title":"Check imported Camt.053\/054 files", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-direct-debit-payment-response-files--from-bank-.html#check-imported-camt-053-054-files", "body":"Successful payments can also be found by going to Tasks view. Clicking the task will give more details."},
{"title":"Check imported Camt.053\/054 files", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-direct-debit-payment-response-files--from-bank-.html#check-imported-camt-053-054-files", "body":"If you want to automate the file transfer to and from the bank, check Automate file transfer for Mandate and Direct Debit payments documentation."},
{"title":"Payment reader (CAMT.053)", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"payment-reader--camt-053---pain-002-.html", "body":"Payment reader (CAMT.053)"},
{"title":"Overview", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"payment-reader--camt-053---pain-002-.html#overview-15", "body":"When new money arrives to account, money can be matched to an existing trade order \/ transaction or account in FA. The system can create a new transaction or modify transaction details."},
{"title":"Automatically create a deposit from payment material", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"payment-reader--camt-053---pain-002-.html#automatically-create-a-deposit-from-payment-material", "body":"If you give the customer a reference of what to use when paying, FA can automatically create a deposit to the customer's portfolio."},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351", "body":"The client has used a reference (PAYMENT_DEPOSIT ID in portfolio’s ID tab) when paying the deposit."},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":2, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351", "body":"The bank has sent a CAMT 053 file."},
{"title":"Transaction reconciliation", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"payment-reader--camt-053---pain-002-.html#transaction-reconciliation-15-276351", "body":"When the transaction in FA has been recorded with reference, the payment reader can reconcile the individual payments and mark these as “Matched“."},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":1, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351-1", "body":"The client has used a reference (Reference in the transaction) when paying the deposit."},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":2, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351-1", "body":"The bank has sent a CAMT.053 file."},
{"title":"Scheduling", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":1, "url":"scheduling.html", "body":"You can configure FA processes to run at specific times. The scheduling is done with Cron expressions."},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":1, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"To create and manage schedules, open Tools → Administer → Scheduled functions in the top menu. After selecting a scheduled process, you can see the Cron schedule specified for it. This means a regular execution time has been set for the process."},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":2, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"To add a new schedule:"},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":3, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"Click the Add button and fill in the fields:"},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":4, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"Cron schedule"},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":5, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"The process schedule specified using Cron syntax (see Cron schedules). The next execution time is shown when a valid Cron schedule is entered."},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":6, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"Configuration"},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":7, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"The configuration used for the schedule."},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":8, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"Saved views"},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":9, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"The saved view, if it’s relevant for the process you are scheduling. The saved view can be e.g. saved transaction view if you are scheduling a functionality that runs against a list of transactions."},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":10, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"Click Save to save the schedules. Alternatively, you can click Remove to delete a schedule."},
{"title":"Create, edit and remove schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":11, "url":"scheduling.html#create--edit-and-remove-schedules", "body":"Click the Run button to test your configurations. The functionality is run with the configuration set and saved view you specified."},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":1, "url":"scheduling.html#cron-schedules", "body":"The schedules are specified in the Cron syntax. The basic principles are:"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":2, "url":"scheduling.html#cron-schedules", "body":"The schedules are specified in the following order, with space separating each component:"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":3, "url":"scheduling.html#cron-schedules", "body":"Seconds"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":4, "url":"scheduling.html#cron-schedules", "body":"Minutes"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":5, "url":"scheduling.html#cron-schedules", "body":"Hours"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":6, "url":"scheduling.html#cron-schedules", "body":"Day-of-month"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":7, "url":"scheduling.html#cron-schedules", "body":"Month"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":8, "url":"scheduling.html#cron-schedules", "body":"Day-of-week"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":9, "url":"scheduling.html#cron-schedules", "body":"Year (optional)"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":10, "url":"scheduling.html#cron-schedules", "body":"Asterisk ( * ) can be used to specify any value (for example, * as the Day-of-month component indicates that the schedule is run every day of the month)."},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":11, "url":"scheduling.html#cron-schedules", "body":"Question mark (?) can be used in day-of-month and day-of-week fields to specify “no specific value”."},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":12, "url":"scheduling.html#cron-schedules", "body":"Some examples of different kinds of schedules:"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":13, "url":"scheduling.html#cron-schedules", "body":"Daily at 15:00:"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":14, "url":"scheduling.html#cron-schedules", "body":"0 0 15 * * ?"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":15, "url":"scheduling.html#cron-schedules", "body":"On the first second of the first minute of the 15th hour, every day of month and every month, regardless of the day-of-week"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":16, "url":"scheduling.html#cron-schedules", "body":"Every Friday at 12:30:"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":17, "url":"scheduling.html#cron-schedules", "body":"0 30 12 ? * FRI"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":18, "url":"scheduling.html#cron-schedules", "body":"Every weekday (Monday through Friday) at 08:10:20"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":19, "url":"scheduling.html#cron-schedules", "body":"20 10 08 ? * MON-FRI"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":20, "url":"scheduling.html#cron-schedules", "body":"On the first day of every month at 21:00"},
{"title":"Cron schedules", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":21, "url":"scheduling.html#cron-schedules", "body":"0 0 21 1 * ?"},
{"title":"Install FA Client Portal", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":1, "url":"install-fa-client-portal.html", "body":"You can install FA Client Portal from Optional packages. After the installation, set up the user access:"},
{"title":"Install FA Client Portal", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":2, "url":"install-fa-client-portal.html", "body":"Provide users with access to the app. To do this, assign the correct user role to users who are supposed to access FA Client Portal. If you do not have such a role available in FA Admin Console, User management view, ask FA to create one for you."},
{"title":"Install FA Client Portal", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":3, "url":"install-fa-client-portal.html", "body":"Provide users with access to data. For each user, add a linked contact whose portfolios they can see."},
{"title":"Install FA Client Portal", "document":["FA Admin guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Admin guide"], "lvl0": ["Document"]}, "pos":4, "url":"install-fa-client-portal.html", "body":"Contact FA customer support to set up test and production URLs for FA Client Portal."},
{"title":"FA Developer Guide", "document":[], "pos":1, "url":"fa-developer-guide.html", "body":"FA Developer Guide"},
{"title":"FA Developer Guide", "document":[], "pos":2, "url":"fa-developer-guide.html", "body":"You can tailor FA system and applications to suit your business needs. In this document, you can learn about the ways to customize FA:"},
{"title":"FA Developer Guide", "document":[], "pos":3, "url":"fa-developer-guide.html", "body":"Automation and workflows allow you to automate your tasks with business rules and design workflows runnable in FA system. Business rules are managed in FA Back. Workflows are created in FA Developer app."},
{"title":"FA Developer Guide", "document":[], "pos":4, "url":"fa-developer-guide.html", "body":"Extending UI and data fields allows you to add fields for storing the data, calculate custom values in FA and use these figures in reports or view them as columns in Analytics+. Custom profiles and analytics fields are defined in FA Back."},
{"title":"FA Developer Guide", "document":[], "pos":5, "url":"fa-developer-guide.html", "body":"Integrations allow you to manipulate data from FA Back or route data from and to the FA platform. API integrations are built with GraphiQL in FA Developer app. File integrations are handled in the FA Developer app."},
{"title":"FA Developer Guide", "document":[], "pos":6, "url":"fa-developer-guide.html", "body":"Reporting tools allow you to create customized reports and data analyses based on the data available in the FA system. Report development and data analysis are carried out in FA Developer app."},
{"title":"FA Developer Guide", "document":[], "pos":7, "url":"fa-developer-guide.html", "body":"Customizing FA Client Portal allows you to make changes to FA Client Portal – an open-source app for your clients to view and manage their investments."},
{"title":"FA Developer Guide", "document":[], "pos":8, "url":"fa-developer-guide.html", "body":"Along with the written instructions in the sections listed above, you can find more information in the video recordings of developer webinars organized by FA experts: see the Webinar recordings section."},
{"title":"FA Developer app", "document":[], "pos":1, "url":"fa-developer-guide.html#idm46709276634272", "body":"FA Developer app"},
{"title":"FA Developer app", "document":[], "pos":2, "url":"fa-developer-guide.html#idm46709276634272", "body":"FA Developer app gathers services for the third-party developers who work with FA:"},
{"title":"FA Developer app", "document":[], "pos":3, "url":"fa-developer-guide.html#idm46709276634272", "body":"GraphQL API — GraphiQL client to query FA over FA GraphQL APIs."},
{"title":"FA Developer app", "document":[], "pos":4, "url":"fa-developer-guide.html#idm46709276634272", "body":"Reports — jsreport designer to develop and test report templates."},
{"title":"FA Developer app", "document":[], "pos":5, "url":"fa-developer-guide.html#idm46709276634272", "body":"Workflows — Flowable modeler to design workflows runnable within FA and Form.io designer to create interactive forms that can be embedded in processes in third-party applications."},
{"title":"FA Developer app", "document":[], "pos":6, "url":"fa-developer-guide.html#idm46709276634272", "body":"Integrations — Camel platform to create and manage file-based integrations with other systems."},
{"title":"FA Developer app", "document":[], "pos":7, "url":"fa-developer-guide.html#idm46709276634272", "body":"Notebooks — Jupyter notebooks to manipulate and analyze data from FA and external parties, as well as to store and share your work securely."},
{"title":"FA Developer app", "document":[], "pos":8, "url":"fa-developer-guide.html#idm46709276634272", "body":"Authentication — Keycloak folders to manage and deploy FA custom login themes and other authentication-related customizations."},
{"title":"FA Developer app", "document":[], "pos":9, "url":"fa-developer-guide.html#idm46709276634272", "body":"FA Developer app is available at the URL https:\/\/<instance>.fasolutions.com\/developer (replace <instance> with the name of your environment). The access to each of the services is controlled by user roles. Depending on your role, you might have access to only some of the services."},
{"title":"Automation and workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"automation-and-workflows.html", "body":"You can tailor FA system to your business needs and improve efficiency by automating recurring tasks, from simple transaction status changes to complex workflows that involve fetching data from external sources and report generation. Use the following tools to automate your tasks:"},
{"title":"Automation and workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"automation-and-workflows.html", "body":"Business rules. A business rule automatically triggers consequences if an object is modified in FA and the modification meets the conditions defined in the rule. For example, you can set a rule to change trade order status when a trade order receives a tag indicating successful validation. FA Back incorporates Drools business rule engine that allows you to deploy custom rules by uploading Excel-based decision tables. To learn more about how to create decision tables, see Business rules."},
{"title":"Automation and workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"automation-and-workflows.html", "body":"Custom workflows. Custom workflows let you eliminate unnecessary manual steps. For example, an onboarding workflow can automatically prompt the client for information, validate it, and, upon successful validation, create a new contact in FA. Custom worflows are designed using Flowable process engine. To learn more about creating custom workflows, see Workflows."},
{"title":"Business rules", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"decision-tables.html", "body":"Rules are a powerful way to customize the behavior of FA. Rules can be used to trigger event-based actions when certain criteria are fulfilled for contacts, portfolios, transactions, trade orders and securities. You can, for example, automatically calculate transaction fees, change trade orders status, initiate payments etc. The basic idea of a rule is to check the target and its attributes and based on the conditions, trigger a consequence."},
{"title":"Business rules", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"decision-tables.html", "body":"FA Platform contains a business rule engine called Drools engine. You can create rules dynamically into FA Platform using Excel-based decision tables. Authored decision tables can be deployed from FA’s decision table administration and created using Microsoft Excel."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"decision-tables.html#getting-started-22", "body":"To define business rules using the Excel based decision tables, you need to have access FA Decision table administration."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"decision-tables.html#getting-started-22", "body":"Main steps to create a decision table are:"},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"decision-tables.html#getting-started-22", "body":"Create the decision table definition in XLSX format."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"decision-tables.html#getting-started-22", "body":"Upload the decision table to FA from FA Back's Decision table administration view and click Reload rules from document bank to deploy it."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"decision-tables.html#getting-started-22", "body":"After you have reloaded the decision table it will immediately take effect in FA Back if it doesn't contain any errors."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"decision-tables.html#getting-started-22", "body":"To create your first decision table, follow the instructions in Create, deploy and verify a decision table."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"decision-tables.html#getting-started-22", "body":"Check out our sample decision tables: Portfolio decision tables, Contact decision tables, Security decision tables, Transaction and trade order decision tables."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"decision-tables.html#getting-started-22", "body":"You can also download a generic template for creating a new decision table with guiding comments. It imports the Contact, Portfolio, Security, Transaction classes, as well as the classes needed for profiles and key figures:"},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"decision-tables.html#getting-started-22", "body":"custom_genericDS.xlsx"},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"decision-tables.html#related-links-22", "body":"Learn more about Drools:"},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"decision-tables.html#related-links-22", "body":"Learn Drools: Part I article in the DZone's Technical Library"},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"decision-tables.html#related-links-22", "body":"Drools documentation"},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"decision-tables.html#related-links-22", "body":"Spreadsheet decision tables in Drools documentation "},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"decision-tables-naming-convention.html", "body":"Use the following file naming convention when you save the decision table file: <prefix_component_use_case.xlsx>. The file name consists of:"},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"decision-tables-naming-convention.html", "body":"Prefix that shows if it is fa (standard, done by FA’s product development, available to all) or custom (client specific) decision table."},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"decision-tables-naming-convention.html", "body":"Component (tradeOrder \/ transaction \/ contact \/ portfolio \/ fund)."},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"decision-tables-naming-convention.html", "body":"The use case for the rule (for example, calculate fees, set tag.)"},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"decision-tables-naming-convention.html", "body":"Example 1: fa_transactions_fees.xlsx"},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"decision-tables-naming-convention.html", "body":"Example 2: custom_contacts_classification.xlsx"},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"decision-tables-naming-convention.html", "body":"File names should be short but descriptive."},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"decision-tables-naming-convention.html", "body":"Avoid special characters or spaces in a file name."},
{"title":"Decision tables naming convention", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"decision-tables-naming-convention.html", "body":"Use capital letters and underscores instead of periods, spaces or slashes."},
{"title":"Conditions and actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"syntax-in-conditions-and-actions.html", "body":"Conditions and actions"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"syntax-in-conditions-and-actions.html#idm46709276554016", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"syntax-in-conditions-and-actions.html#idm46709276554016", "body":"You can use variables in decision tables, for example, $, \"$1\", $t."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Condition field"},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"The table below describes the syntax to use in the decision table's CONDITION field with some simple examples (where $t references a transaction in FA)."},
{"title":"Action field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"syntax-in-conditions-and-actions.html#idm46709276539360", "body":"Action field"},
{"title":"Action field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"syntax-in-conditions-and-actions.html#idm46709276539360", "body":"The table below describes the syntax to use in the decision table's Action field with some simple examples (where $t references a transaction in FA)."},
{"title":"Create, deploy and verify a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html", "body":"Create, deploy and verify a decision table"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490928", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490928", "body":"This tutorial provides instructions for how to create a decision table, deploy it in FA Back and verify that it works as intended. The decision table checks if the contact status is active and sets the tag \"ActiveContact\" if the condition is true. It also checks if the tag already is set, if it already exists no tag is set."},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Step 1 - Create a decision table"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Download the Excel template:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Decision table template"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Fields 1-5 are prefilled, fields 6-16 need to be filled in with the parameters\/code described below."},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Name of the decision table"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Simple Contact Decision Table"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Packages that are being imported"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"fi.fasolutions.mod.portfoliomanagement.domain.*,org.apache.commons.math.util.MathUtils,org.apache.commons.lang.StringUtils"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"States whether code should be read sequentially or not"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"TRUE"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"States if loops should be allowed or not"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"FALSE"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"States the variables to be included:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"fi.fasolutions.mod.portfoliomanagement.service.Services services"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"States the object that the decision table should be applied to (contacts, portfolios, securities, transactions etc). Note: The object must stretch over all condition columns."},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"$c:Contact"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"The first condition to be applied:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"status == \"$1\""},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"The second condition to be applied:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"hasNotTag(\"$1\")"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"The action to be executed if the conditions are true:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":22, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"$c.setTag(\"$1\")"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":23, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"A short description of the first condition"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":24, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Contact status must be active"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":25, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"A short description of the second condition"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":26, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Contact can not have tag \"ActiveContact\""},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":27, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"A short description of the action"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":28, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Set tag \"ActiveContact\" on contact if conditions are true"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":29, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"A description of the whole decision table"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":30, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Set tag \"ActiveContact\" if contact status is active and if the tag is not already set"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":31, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"The value that \"$1\" is referring to in the first condition:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":32, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"A"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":33, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"The value that \"$1\" is referring to in the second condition:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":34, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"ActiveContact"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":35, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"The value that \"$1\" is referring to in the action:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":36, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"ActiveContact"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":37, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"Now you can save the decision table. You can also download the final version of the decision table here:"},
{"title":"Step 1 - Create a decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":38, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#idm46709276490736", "body":"custom_contact_setTagByStatus.xlsx"},
{"title":"Step 2 - Deploy the decision table in FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-2---deploy-the-decision-table-in-fa-back", "body":"In FA Back, go to Tools → Administer → Decision tables and upload the decision table."},
{"title":"Step 2 - Deploy the decision table in FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-2---deploy-the-decision-table-in-fa-back", "body":"Click Preview all. The decision table is evaluated and converted to Drools code that appears in the box to the right."},
{"title":"Step 2 - Deploy the decision table in FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-2---deploy-the-decision-table-in-fa-back", "body":"You have now deployed a decision table that is ready to be verified. Click Done to validate and take into use your decision tables. If there are issues with the syntax, you will be notified and the window remains open. The errors can also be seen in the box on the right. Once any issues are solved, click Done again to close the window."},
{"title":"Step 3 - Verify that the decision table works correctly", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-3---verify-that-the-decision-table-works-correctly", "body":"To verify that the decision table works correctly:"},
{"title":"Step 3 - Verify that the decision table works correctly", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-3---verify-that-the-decision-table-works-correctly", "body":"Add the ActiveContact tag to the contact tags in FA Back. See Preference - Tagsin FA Back reference for more details about adding tags."},
{"title":"Step 3 - Verify that the decision table works correctly", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-3---verify-that-the-decision-table-works-correctly", "body":"Click New > New contact to create a contact and choose Active in the Status field."},
{"title":"Step 3 - Verify that the decision table works correctly", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-3---verify-that-the-decision-table-works-correctly", "body":"Click Save and verify that the ActiveContact tag is set."},
{"title":"Step 3 - Verify that the decision table works correctly", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#step-3---verify-that-the-decision-table-works-correctly", "body":"You have now verified the decision table and it is ready to use."},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"Object modification done in the action is not reflected and visible in the next rule that is run"},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"Modifications done in the rule action is not by default visible to other rules that runs after the current one. If you want this behavior, you need to explicitly tell the rule engine to expose the change by adding update to the last action run in the rule."},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"update($t)"},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"For example:"},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"$t.setTag(\"$1\");$t.setTags($t.getTags());update($t);"},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"Note that unless you define \"no-loop equals true\" in the ruleset or in the rule level, also the rule in question is run again."},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"Rule conditions and actions are mixed"},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"Conditions are accompanied by an object for which the rule is run, while actions are not. Therefore when defining the rule, make sure the $c:Contact, $p:Portfolio, $s:Security or $t:Transaction is only under the condition columns. Actions should not have related objects."},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"tutorial---create,-deploy-and-verify-a-decision-table.html#troubleshooting-25", "body":"Example:"},
{"title":"Set key figures in rules", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-key-figures-in-rules.html", "body":"Contacts, portfolios and securities may have additional time series data stored as key figures. These attributes can be retrieved, set or removed by rules using a handy utility called KeyFigureUtils."},
{"title":"Import", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-key-figures-in-rules.html#import-26", "body":"The KeyFigureUtils and relevant domain objects needs to be imported into the rule table:"},
{"title":"Import", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-key-figures-in-rules.html#import-26", "body":"import fi.fasolutions.mod.portfoliomanagement.util.KeyFigureUtils;\nimport fi.fasolutions.mod.portfoliomanagement.domain.*;\nimport java.text.SimpleDateFormat;"},
{"title":"Usage", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-key-figures-in-rules.html#usage-26", "body":"Usage"},
{"title":"Get a key figure value", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-key-figures-in-rules.html#get-a-key-figure-value", "body":"Example of getting the latest key figure value for key figure <key figure code> for a security $s. If you wish to retrieve a historical key figure value, use the desired date instead of new Date()."},
{"title":"Get a key figure value", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-key-figures-in-rules.html#get-a-key-figure-value", "body":"KeyFigureUtils.getKeyFigureValue($s, \"<key figure code>\", new Date(), services);"},
{"title":"Set key figure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-key-figures-in-rules.html#set-key-figure", "body":"Example of setting a value of 3 on 1.1.2021 for an integer key figure with the code CO2. The type should correspond to the configuration of the key figure in Preference → Content and translations → Key figures and can be Integer, Double, Boolean or String."},
{"title":"Set key figure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-key-figures-in-rules.html#set-key-figure", "body":"KeyFigureUtils.addKeyFigure($s, \"CO2\", new SimpleDateFormat(\"yyyy-MM-dd\").parse(\"2021-01-01\"), 3, services);"},
{"title":"Set key figure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-set-key-figures-in-rules.html#set-key-figure", "body":"The same syntax can also be used to replace an existing value. If the security already had a value for the CO2 key figure on 1.1.2021, the method above would update the value to 3."},
{"title":"Remove key figure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-key-figures-in-rules.html#remove-key-figure", "body":"Example of removing a key figure CO2 value for 1.1.2021 from a security."},
{"title":"Remove key figure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-key-figures-in-rules.html#remove-key-figure", "body":"KeyFigureUtils.removeKeyFigure($s, \"CO2\", new SimpleDateFormat(\"yyyy-MM-dd\").parse(\"2021-01-01\"));"},
{"title":"Set profile values in rules", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-profile-values-in-rules.html", "body":"Contacts, portfolios and securities may have additional data stored into their profile as attributes. These attributes can be get, set or removed in rules using a handy utility called ProfileUtil."},
{"title":"Import", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-profile-values-in-rules.html#import-27", "body":"The ProfileUtil and Profile2 needs to be imported into the rule table:"},
{"title":"Import", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-profile-values-in-rules.html#import-27", "body":"import fi.fasolutions.mod.portfoliomanagement.util.*;\nimport fi.fasolutions.mod.portfoliomanagement.domain.Profile2\n\nor\n\nfi.fasolutions.mod.portfoliomanagement.util.ProfileUtil,fi.fasolutions.mod.portfoliomanagement.domain.Profile2;"},
{"title":"Usage", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-profile-values-in-rules.html#usage-27", "body":"Usage"},
{"title":"Get profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-profile-values-in-rules.html#get-profile-attribute", "body":"Example of getting a profile attribute of type String from a portfolio"},
{"title":"Get profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-profile-values-in-rules.html#get-profile-attribute", "body":"ProfileUtil.getProfileAttribute($p, \"<attributeKey>\", String.class, services)"},
{"title":"Set profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-profile-values-in-rules.html#set-profile-attribute", "body":"Example of setting a profile attribute of type String to a portfolio"},
{"title":"Set profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-profile-values-in-rules.html#set-profile-attribute", "body":"ProfileUtil.setProfileAttribute($p, \"<attributeKey>\", \"<Attribute value>\", services)"},
{"title":"Set profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-set-profile-values-in-rules.html#set-profile-attribute", "body":"If several values need to be set, the first value is set as in the above example, but then the second and following values are set so that the Profile2 object is passed to the method instead of the contact, portfolio or security:"},
{"title":"Set profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-set-profile-values-in-rules.html#set-profile-attribute", "body":"Profile2 profile2 = ProfileUtil.setProfileAttribute($p, \"<first attributeKey>\", \"<First attribute value>\", services)\nprofile2 = ProfileUtil.setProfileAttribute(profile2, \"<second attributeKey>\", \"<Second attribute value>\", services)\nprofile2 = ProfileUtil.setProfileAttribute(profile2, \"<third attributeKey>\", \"<Third attribute value>\", services)"},
{"title":"Remove profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-set-profile-values-in-rules.html#remove-profile-attribute", "body":"Example of removing a profile attribute from a portfolio"},
{"title":"Remove profile attribute", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-set-profile-values-in-rules.html#remove-profile-attribute", "body":"ProfileUtil.removeProfileAttribute($p, \"<attributeKey>\", services)"},
{"title":"Portfolio conditions and actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-conditions-and-actions.html", "body":"Portfolio class methods available in rule conditions and actions are listed below."},
{"title":"Set tags on portfolios depending on portfolio type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio---set-tags-on-portfolios-depending-on-portfolio-type--simple-.html", "body":"This decision table sets a tag on the portfolio if the portfolio type is \"ISK\"."},
{"title":"Set tags on portfolios depending on portfolio type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio---set-tags-on-portfolios-depending-on-portfolio-type--simple-.html", "body":"Condition: Portfolio type must be \"ISK\"."},
{"title":"Set tags on portfolios depending on portfolio type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio---set-tags-on-portfolios-depending-on-portfolio-type--simple-.html", "body":"Action: Set the \"ISK-Portfolio\" tag on the portfolio."},
{"title":"Set tags on portfolios depending on portfolio type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio---set-tags-on-portfolios-depending-on-portfolio-type--simple-.html", "body":"custom_portfolio_setTagByType.xlsx"},
{"title":"Contact conditions and actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"contact-conditions-and-actions.html", "body":"Contact class methods available to rule conditions and actions are listed below."},
{"title":"Set a representative depending on contact type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-a-representative-depending-on-contact-type.html", "body":"This rule sets a certain representative on the contact if the contact type is \"1\" (Customer)."},
{"title":"Set a representative depending on contact type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-a-representative-depending-on-contact-type.html", "body":"Condition: Contact type must be \"1\" which is equal to customer."},
{"title":"Set a representative depending on contact type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-a-representative-depending-on-contact-type.html", "body":"Action: \"FACRM\" is set as the representative. \"FACRM\" is the contact ID for the FA CRM contact."},
{"title":"Set a representative depending on contact type", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-a-representative-depending-on-contact-type.html", "body":"custom_contact_setRepresentativeByType.xlsx"},
{"title":"Security conditions and actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security-conditions-and-actions.html", "body":"Security class methods for the rule condition and action are listed below."},
{"title":"Set tags on securities", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security---set-security-tag--simple-.html", "body":"This decision table sets the \"Tradeable\" tag on securities of a certain security type."},
{"title":"Set tags on securities", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"security---set-security-tag--simple-.html", "body":"This rule has two conditions and one action:"},
{"title":"Set tags on securities", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"security---set-security-tag--simple-.html", "body":"Condition 1: Security type must be of C,CE,D,E,F or O (Collective investment vehicles, Exchange-traded funds, Debt instruments, Equity, Futures, Listed options)."},
{"title":"Set tags on securities", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"security---set-security-tag--simple-.html", "body":"Condition 2: Security doesn't have the \"Tradeable\" tag."},
{"title":"Set tags on securities", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"security---set-security-tag--simple-.html", "body":"Action: Set the \"Tradeable\" tag on the security."},
{"title":"Set tags on securities", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"security---set-security-tag--simple-.html", "body":"custom_security_setTagByType.xlsx"},
{"title":"Transaction and trade order conditions and actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction-and-trade-order-conditions-and-actions.html", "body":"Every time the user creates or modifies a transaction or a trade order, FA runs rules on it. Transaction class methods for the rule condition and action are listed below."},
{"title":"Run pre-trade limits for a trade order", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"run-pre-trade-limits-for-a-trade-order.html", "body":"This decision table triggers pre-trade limit check if the trade order fulfills the conditions."},
{"title":"Run pre-trade limits for a trade order", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"run-pre-trade-limits-for-a-trade-order.html", "body":"Condition 1: It must be a trade order."},
{"title":"Run pre-trade limits for a trade order", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"run-pre-trade-limits-for-a-trade-order.html", "body":"Condition 2: Trade order has the status \"Open\"."},
{"title":"Run pre-trade limits for a trade order", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"run-pre-trade-limits-for-a-trade-order.html", "body":"Condition 3: Trade order doesn't have a \"Compliance\" group tag."},
{"title":"Run pre-trade limits for a trade order", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"run-pre-trade-limits-for-a-trade-order.html", "body":"Action 1: Set the \"Compliance-Checked\" tag."},
{"title":"Run pre-trade limits for a trade order", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"run-pre-trade-limits-for-a-trade-order.html", "body":"Action 2: Run pre-trade limits and show the result in the Trade order window, Internal info field."},
{"title":"Run pre-trade limits for a trade order", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"run-pre-trade-limits-for-a-trade-order.html", "body":"custom_traderOrder_TriggerPretradeLimitsWithTradeOrder"},
{"title":"Set tags on trade orders", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction---set-tags-on-trade-orders--simple-.html", "body":"This decision table checks if open trade orders have the \"Order validation\" tag. If not, it sets \"Order validation-waiting\" tag on the order."},
{"title":"Set tags on trade orders", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction---set-tags-on-trade-orders--simple-.html", "body":"Condition 1: It must be a trade order."},
{"title":"Set tags on trade orders", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction---set-tags-on-trade-orders--simple-.html", "body":"Condition 2: Trade order has the \"Open\" status."},
{"title":"Set tags on trade orders", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction---set-tags-on-trade-orders--simple-.html", "body":"Condition 3: Trade order doesn't have the \"Order validation\" group tag."},
{"title":"Set tags on trade orders", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction---set-tags-on-trade-orders--simple-.html", "body":"Action: Set the \"Order validation-waiting\" tag."},
{"title":"Set tags on trade orders", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction---set-tags-on-trade-orders--simple-.html", "body":"custom_tradeOrder_setTagByStatus.xlsx"},
{"title":"Set Internal info for transaction", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction---set-internal-info-string-to-transaction-depending-on-two-independent-conditions--advanced-.html", "body":"This rule adds a string to transaction's internal info depending on two different conditions. These two conditions can be fulfilled individually, it is enough that one is fulfilled."},
{"title":"Set Internal info for transaction", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction---set-internal-info-string-to-transaction-depending-on-two-independent-conditions--advanced-.html", "body":"Condition alternative 1: The transaction's parent portfolio has a linked model portfolio with the \"LowRisk\" name."},
{"title":"Set Internal info for transaction", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction---set-internal-info-string-to-transaction-depending-on-two-independent-conditions--advanced-.html", "body":"Condition alternative 2: The transaction's parent portfolio has the \"LowRisk\" tag."},
{"title":"Set Internal info for transaction", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction---set-internal-info-string-to-transaction-depending-on-two-independent-conditions--advanced-.html", "body":"Action: Add the \"Risk-Level=Low\" string to the transaction's Internal info field."},
{"title":"Set Internal info for transaction", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction---set-internal-info-string-to-transaction-depending-on-two-independent-conditions--advanced-.html", "body":"custom_transaction_setInternalInfoLowRisk.xlsx"},
{"title":"Calculate fees for transactions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html", "body":"This decision table contains two rules that calculate transaction fee and tax based on the calculated costs."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"The first rule calculates the transaction fee based on the percentage or on a minimum fee in the given currency. If the percentage fee is higher than the minimum fee, the percentage fee is applied, otherwise minimum fee calculated in transaction currency is applied."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Important highlights from the rule sample:"},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Minimum costs can be given in selected currency and the rule uses costInMinFeeCurrency function to convert minimum fee from a given currency to the transaction currency."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"The rule updates the transaction object with the update($t); method after the fee is calculated for the transaction. This enables the second rule to calculate tax based on the costs set by the first rule."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Alternative 1:"},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Condition 1: Transaction doesn't have the \"FeeCalculation-Manual\" tag."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Condition 2: Security type is \"E\" (Equity)."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Condition 3: Transaction type is either \"B\" or \"S\"."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Action 1: Set the transaction fee to 0,5% with a minimum of 200 USD."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Action 2: Set the FeeCalculation-Automatic tag on the transaction."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Alternative 2:"},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Condition 1: Transaction doesn't have the \"FeeCalculation-Manual\" tag."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Condition 2: Security type is \"C\" (Bond)."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Condition 3: Transaction type is either \"B\" or \"S\"."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Action 1: Set the transaction fee to 1% with a minimum of 200 USD."},
{"title":"First rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#first-rule", "body":"Action 2: Set the FeeCalculation-Automatic tag on the transaction."},
{"title":"Second rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#second-rule", "body":"The second rule calculates transaction tax based on the given tax percentage and transaction fee calculated in the first rule. It also sets tax type as given in the rule parameters."},
{"title":"Second rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#second-rule", "body":"Condition 1: Transaction doesn't have the FeeCalculation-Manual tag."},
{"title":"Second rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#second-rule", "body":"Condition 2: Portfolio tax country is \"AE\"."},
{"title":"Second rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#second-rule", "body":"Condition 3: Security type is \"E\", \"C\" or \"D\"."},
{"title":"Second rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#second-rule", "body":"Condition 4: Transaction type is either \"B\" or \"S\"."},
{"title":"Second rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#second-rule", "body":"Action 1: Set transaction tax percentage to 5% VAT."},
{"title":"Decision table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction---calculate-a-fee-for-transactions--advanced-.html#decision-table", "body":"custom_transaction_setFeeAndTax.xlsx"},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"This decision table checks if the transation date is on a weekend according to the holiday calendar on the security. If it is, the rule moves it to the first upcoming business day for both transaction date and settlement date."},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"Condition 1: It is a trade order."},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"Condition 2: The trade order has status \"Open\" or \"Executable\"."},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"Condition 3: Trade order transaction type is \"FUS\", \"FUD\" or \"FUDU\"."},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"Condition 4: Portfolio's primary contact is “ClientFA”."},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"Condition 5: The transaction date falls on a holiday day."},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"Action 1: Change the transaction date to the next business day."},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"Action 2: Change the settlement date to the next business day"},
{"title":"Change transaction and settlement date depending on holidays", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"transaction---change-trade-and-settlement-date-on-trade-orders-depending-on-holidays--advanced-.html", "body":"custom_tradeOrder_changeDate.xlsx"},
{"title":"Workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"processes.html", "body":"FA lets you build workflows according to your business needs. For example, you can create a client onboarding workflow that collects client details, recommends a product for the client based on their preferences, creates an investment contract for a client to approve, and imports collected client information in FA. Workflows are designed using the Flowable process engine – a low-code visual tool incorporated in FA Developer application."},
{"title":"Workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"processes.html", "body":"Workflows can feature, for example, creating JSReports, fetching data via APIs, importing and updating data in FA, and controlling the workflow progress. To learn more about building workflows, see Building a workflow. You can also collect and display data to a user via forms that can be included in a workflow. To read more about forms and related features, see Forms in a workflow."},
{"title":"Workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"processes.html", "body":"For more examples of using workflows in your business, see the Sample workflows section."},
{"title":"Workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"processes.html", "body":"There are different ways to make a workflow available to the user. To learn more about how to launch different kinds of workflows, please see Expose a workflow."},
{"title":"Workflows in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"processes.html#workflows-in-fa-developer-app", "body":"Workflows are designed in the FA Developer app. The Workflows view features:"},
{"title":"Workflows in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"processes.html#workflows-in-fa-developer-app", "body":"Process modeler that gives you access to the Flowable process engine – a visual tool to create business workflow models and decision tables and package them up for use in a Flowable app. Processes can be accessed through the GraphQL API."},
{"title":"Workflows in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"processes.html#workflows-in-fa-developer-app", "body":"Process admin view that lets you manage workflows."},
{"title":"Workflows in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"processes.html#workflows-in-fa-developer-app", "body":"Forms view that gives you access to the Form.io designer to create interactive forms that you can embed in workflows."},
{"title":"Process modeler", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"processes.html#process-modeler", "body":"The Process modeler section lets you create workflows. The navigation panel at the top features model editors for different model types. For working with FA, the following options are supported:"},
{"title":"Process modeler", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"processes.html#process-modeler", "body":"Processes"},
{"title":"Process modeler", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"processes.html#process-modeler", "body":"An editor to create BPMN diagrams. The Business process model and notation (BPMN) specification provides a graphical notation for defining a workflow. To learn more about BPMN, see the BPNM standard description. To learn about how to create workflows, see the Processes editor section in the Flowable design user guide."},
{"title":"Process modeler", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"processes.html#process-modeler", "body":"Decisions"},
{"title":"Process modeler", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"processes.html#process-modeler", "body":"Decisions editor to define a set of business rules in the form of DMN decision tables. DMN is a modeling language and notation for the specifying business decisions and business rules. To learn more about DMN, see the DMN standard description. To learn about how to create decision tables, see Determine consequences in a workflow."},
{"title":"Process modeler", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"processes.html#process-modeler", "body":"Apps"},
{"title":"Process modeler", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"processes.html#process-modeler", "body":"Apps editor to create a bundle of workflows that can be deployed and shared with users to run. To learn more about how to create and publish packages, see Deploy a model."},
{"title":"Process admin view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"processes.html#process-admin-view", "body":"The Process admin section provides you access to the Flowable Admin app. You can use it to:"},
{"title":"Process admin view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"processes.html#process-admin-view", "body":"View the deployed and running processes."},
{"title":"Process admin view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"processes.html#process-admin-view", "body":"Stop a running process."},
{"title":"Process admin view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"processes.html#process-admin-view", "body":"Import and export processes."},
{"title":"Process admin view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"processes.html#process-admin-view", "body":"To learn more about the Process admin section, see the Flowable documentation."},
{"title":"Forms view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"processes.html#forms-view", "body":"The Forms view provides you access to the form.io builder to design forms that you can embed in HTML pages. Forms can be accessed through the GraphQL API."},
{"title":"Forms view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"processes.html#forms-view", "body":"Forms let you collect information that can be further handled by external apps. For example, an app can display a form for new clients to fill in and save the data in FA or print it out as a PDF. To implement this, the form should be included in a process via the User task element."},
{"title":"Forms view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"processes.html#forms-view", "body":"To create a form, click Add form at the top-right."},
{"title":"Forms view", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"processes.html#forms-view", "body":"You can export forms and transfer them to other environments. To upload a form, click Import form at the top-right."},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"processes.html#list-of-forms", "body":"The Forms view shows the List of forms with the following columns:"},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"processes.html#list-of-forms", "body":"Name"},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"processes.html#list-of-forms", "body":"The form name is for you to distinguish between the forms, it isn’t shown anywhere else."},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"processes.html#list-of-forms", "body":"Form ID"},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"processes.html#list-of-forms", "body":"The form ID is used to include a form in a process (specify it as a form key value of the User task element when designing a process)."},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"processes.html#list-of-forms", "body":"Actions"},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"processes.html#list-of-forms", "body":"The buttons to manage forms:"},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"processes.html#list-of-forms", "body":"Edit translations. Use this feature to add and edit form translations, set the default form language, and export translations as XLSX files. In the Edit translations window, you can also preview the form in each language."},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"processes.html#list-of-forms", "body":"Export form in a file that is saved to your computer. Use this feature to copy created forms to another environment."},
{"title":"List of forms", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"processes.html#list-of-forms", "body":"View, Edit or Delete form."},
{"title":"Building a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"process-workflow.html", "body":"FA Platform provides Flowable process engine as a standalone microservice. The engine allows you to define your workflows using BPMN 2.0 definitions, and with the Flowable modeler, you can create workflow definitions without having to write them in XML. To learn more about Flowable, see the documentation on the Flowable site."},
{"title":"Building a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"process-workflow.html", "body":"To create a workflow, you model it by choosing and configuring elements, such as tasks and events, and connecting them to form a workflow. You can then deploy the workflow by publishing an app with the model."},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"process-workflow.html#create-a-workflow-model", "body":"To create a workflow model:"},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"process-workflow.html#create-a-workflow-model", "body":"Open the Process modeler view in the FA Developer app, go to the Processes tab, and click Create process."},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"process-workflow.html#create-a-workflow-model", "body":"Define the model name and the model key (a unique identifier that can be used to launch the process via GraphQL) and click Create new model."},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"process-workflow.html#create-a-workflow-model", "body":"You can now start creating the workflow definition with the visual editor. When you start the editor for the first time, you can edit the main configurations of the workflow at the bottom of the screen. You can access them later by clicking on an empty spot on the model canvas."},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"process-workflow.html#create-a-workflow-model", "body":"In the visual editor, create a workflow model by adding BPMN 2.0 elements, defining their configurations, and connecting them with sequence flow arrows: "},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"process-workflow.html#create-a-workflow-model", "body":"Add an element to your model from the menu on the left side, and drag and drop it into the model canvas. "},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"process-workflow.html#create-a-workflow-model", "body":"Define configurations for the elements at the bottom of the screen when it is selected."},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"process-workflow.html#create-a-workflow-model", "body":"To create a sequence flow from one element to another, select an element and drag and drop the arrow icon appearing on its right side onto another element. "},
{"title":"Create a workflow model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"process-workflow.html#create-a-workflow-model", "body":"Save your model once you finished editing."},
{"title":"BPMN elements in FA workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"process-workflow.html#bpmn-elements-in-fa-workflows", "body":"This section provides an overview of the BPMN 2.0 elements (constructs) supported by Flowable that are commonly used in FA workflows. "},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"process-workflow.html#deploy-a-model", "body":"To deploy a model, you need to create an app containing it. You can do this on the Apps tab of the Process modeler view by following these steps:"},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"process-workflow.html#deploy-a-model", "body":"Click Create App and define the app definition name and key. "},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"process-workflow.html#deploy-a-model", "body":"Choose Edit included models to select the model for the app."},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"process-workflow.html#deploy-a-model", "body":"Save the app and close the editor. "},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"process-workflow.html#deploy-a-model", "body":"Select the app again and click Publish."},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"process-workflow.html#deploy-a-model", "body":"Your model is now deployed and ready to be used."},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"process-workflow.html#deploy-a-model", "body":"You can include multiple models in a single app. Publishing the app will then deploy all the models at once."},
{"title":"Deploy a model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"process-workflow.html#deploy-a-model", "body":"If you make any changes to your model, the application must be re-published for the changes to take effect. If you save a new version of your model instead of overwriting the previous one, you should also change the model version under the app."},
{"title":"Automated deletion of process instances", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"process-workflow.html#automated-deletion-of-process-instances", "body":"In FA, old Flowable process instances are automatically deleted. FA does this to prevent the accumulation of unfinished instances from affecting system performance. By default, a process instance is deleted after 60 days from when it was started. FA checks for and deletes old instances daily at 10pm."},
{"title":"Automated deletion of process instances", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"process-workflow.html#automated-deletion-of-process-instances", "body":"You can postpone the deletion of a process instance by setting an execution variable named keepAliveUntilDate with a date (java.util.Date object) as value. As a result, the process instance is deleted only after the set date has passed."},
{"title":"Manage access to a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"manage-access-to-a-process.html", "body":"You can provide access to a workflow for the certain users or users with certain user roles. To manage the access to a workflow, open the process configurations:"},
{"title":"Manage access to a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"manage-access-to-a-process.html", "body":"Navigate to the Flowable process editor."},
{"title":"Manage access to a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"manage-access-to-a-process.html", "body":"Open the process in Visual Editor to view the process configuration."},
{"title":"Manage access to a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"manage-access-to-a-process.html", "body":"Remember to save and publish your process after you make changes to the configurations."},
{"title":"Restrict access based on user roles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"manage-access-to-a-process.html#idm46709275642496", "body":"Restrict access based on user roles"},
{"title":"Restrict access based on user roles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"manage-access-to-a-process.html#idm46709275642496", "body":"You can limit access to a workflow based on the user roles. Define the required roles in the Potential starter group field in the process configurations:"},
{"title":"Restrict access based on user roles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"manage-access-to-a-process.html#idm46709275642496", "body":"The role name must have format <Role category>\/<Role name> (for example, SAMPLE SOLUTION\/Asset Manager). You can view available roles in the FA Admin Console, User management view."},
{"title":"Restrict access based on user roles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"manage-access-to-a-process.html#idm46709275642496", "body":"If you define multiple roles, use comma as a separator."},
{"title":"Restrict access based on user ID", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"manage-access-to-a-process.html#idm46709275642368", "body":"Restrict access based on user ID"},
{"title":"Restrict access based on user ID", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"manage-access-to-a-process.html#idm46709275642368", "body":"You can limit access to a workflow based on user ID to allow only certain user or users to access the workflow. Define the required user IDs in the Potential starter user field in the process configurations:"},
{"title":"Restrict access based on user ID", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"manage-access-to-a-process.html#idm46709275642368", "body":"You can find the user ID in the FA Admin Console, User management view."},
{"title":"Restrict access based on user ID", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"manage-access-to-a-process.html#idm46709275642368", "body":"If you define multiple user IDs, use comma as a separator."},
{"title":"Display a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"display-a-form.html", "body":"A form is an application interface that triggers a process when launched. It allows users to interact with process flow visually and collects their data into FA through the process tasks you defined."},
{"title":"Display a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"display-a-form.html", "body":"To display a form, you need to link a form to a user task in your process:"},
{"title":"Display a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"display-a-form.html", "body":"Create a form in the Forms view. For instructions, see Create a form."},
{"title":"Display a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"display-a-form.html", "body":"Add a new User task in the process. In the component properties, do the following:"},
{"title":"Display a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"display-a-form.html", "body":"Define the Form key to be the same as the Form ID in the Forms application."},
{"title":"Display a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"display-a-form.html", "body":"In the Assignment option, choose Fixed values type and add $INITIATOR value to the Assignee field."},
{"title":"Display a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"display-a-form.html", "body":"Optionally, name the task to differentiate it from other user tasks when the process flow extends."},
{"title":"Generate a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"generate-a-document.html", "body":"In a process, you can generate documents with templates created in JSReport by adding a Reporter service task to your process model. The Reporter service task passes process variables to JSReport as report parameters, which allows you to create dynamic documents based on them. To define the Reporter service task, follow these steps:"},
{"title":"Generate a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"generate-a-document.html", "body":"Add a new service task to the process model."},
{"title":"Generate a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"generate-a-document.html", "body":"Define Delegate expression to be ${reporter}."},
{"title":"Generate a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"generate-a-document.html", "body":"Add two Class fields as below:"},
{"title":"Generate a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"generate-a-document.html", "body":"Name:reportTemplate, String value: path to the template in JSReport, for example, \/Folder\/report."},
{"title":"Generate a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"generate-a-document.html", "body":"Name:fileName, String value: name of the generated file, for example, Document.pdf."},
{"title":"Use data collected with a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"generate-a-document.html#use-data-collected-with-a-form", "body":"To generate a report using data collected in a form:"},
{"title":"Use data collected with a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"generate-a-document.html#use-data-collected-with-a-form", "body":"Create a template in JSReport. You can refer to the collected data using the property name defined in the form. "},
{"title":"Use data collected with a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"generate-a-document.html#use-data-collected-with-a-form", "body":"To enable downloading of the generated document, add a user task that links to a download form. When the page detects that there are generated documents, the download link becomes automatically visible."},
{"title":"Use data from FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"generate-a-document.html#use-data-from-fa-back", "body":"In a process, you can generate reports based on FA objects (portfolios, transactions, etc.) by passing their IDs to JSReport to be used in a query script.  When a process is launched against FA objects, the IDs are saved in a process variable as a string of comma-separated values. The Reporter service task allows you to convert the string into a JSReport parameter containing the IDs as a list. To do this, adding two additional Class fields:"},
{"title":"Use data from FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"generate-a-document.html#use-data-from-fa-back", "body":"Name:inputIds, Value: name of the parameter containing the IDs string (default value: ids)."},
{"title":"Use data from FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"generate-a-document.html#use-data-from-fa-back", "body":"Name:outputIds, Value: name of the parameter to pass the list of IDs to JSReport (default value: value of inputIds)."},
{"title":"Use data from FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"generate-a-document.html#use-data-from-fa-back", "body":"The JSReport call now includes a new variable with the name defined in outputIds and the value being the list of IDs."},
{"title":"Use data from FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"generate-a-document.html#use-data-from-fa-back", "body":"If the value of outputIds is either param-tradeOrderId or param-transactionId, the IDs string is converted into a list of Long data type values (invalid Longs are ignored). Otherwise, the IDs string is converted into a list of strings."},
{"title":"Import collected data into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-collected-data-into-fa.html", "body":"Within the process flow, you can collect the data or results from user interactions with forms, and import them into FA with a service task."},
{"title":"Import collected data into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-collected-data-into-fa.html", "body":"Make sure you added import to the Property Name field in form components that you want to import to FA, see Define form components to import data in FA"},
{"title":"Import collected data into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-collected-data-into-fa.html", "body":"Add a new Service task in the process."},
{"title":"Import collected data into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"import-collected-data-into-fa.html", "body":"In the component properties, define the Delegate expression to be ${importer}."},
{"title":"Import collected data into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"import-collected-data-into-fa.html", "body":"Optionally, name the task to differentiate it from other service tasks when the process flow extends."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-attached-documents-into-fa.html", "body":"You can import documents that have been uploaded via forms linked in the process under a contact, portfolio, transaction, trade order, security, contract or in a specific folder in FA document library. You can also add tags to the document that can be used, for example, to signal an FA Back process to send the document out to a client. To do so, check out Import user-uploaded files with file component, then follow the steps below:"},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-attached-documents-into-fa.html", "body":"Add Service task to the process."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-attached-documents-into-fa.html", "body":"In the component properties, define Delegate expression to be ${files}."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"import-attached-documents-into-fa.html", "body":"Configure the Class fields as described in the table."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"import-attached-documents-into-fa.html", "body":"Note that the ID and documentFolder fields are mutually exclusive. If you define more than one, the field appearing first on this table will determine the import location. To import the same document under another object\/folder, you need to add another ${files} service task in your process."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-generated-reports-into-fa.html", "body":"Once a report is generated during a process, you can import it in FA Back under a contact, portfolio, transaction, trade order, security, contract or in a specific folder in FA document library. You can also add tags to the generated document that can be used, for example, to signal an FA Back process to send the document out to a client."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-generated-reports-into-fa.html", "body":"To import generated reports in FA Back, follow these steps:"},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-generated-reports-into-fa.html", "body":"Add Service task to the process."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"import-generated-reports-into-fa.html", "body":"In the component properties, define Delegate expression to be ${reports}."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"import-generated-reports-into-fa.html", "body":"Configure the Class fields as described in the table."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"import-generated-reports-into-fa.html", "body":"Note that the ID and documentFolder fields are mutually exclusive. If you define more than one, the field appearing first on this table will determine the import location. To import the same report(s) under another object\/folder, you need to add another ${reports} service task in your process."},
{"title":"Import documents in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-documents-in-fa.html", "body":"FA supports two types of document imports:"},
{"title":"Import documents in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-documents-in-fa.html", "body":"Importing attached documents from forms."},
{"title":"Import documents in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-documents-in-fa.html", "body":"Importing generated JSReport documents."},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-documents-in-fa.html#import-attached-documents", "body":"You can import the documents the user uploaded via forms linked in the process. To do so, first, check out Import user-uploaded files with file component, then follow the step below:"},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-documents-in-fa.html#import-attached-documents", "body":"Add a new Service task to the process."},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-documents-in-fa.html#import-attached-documents", "body":"In component properties, define the Delegate expression to be ${files}."},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"import-documents-in-fa.html#import-attached-documents", "body":"Add the class fields. In each class field, insert the following parameters in the Name field. To define a variable that provides the value, insert it in the Expression field. If you wish to hardcode a value, insert it in the String value field."},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"import-documents-in-fa.html#import-attached-documents", "body":"Parameters in the Name field:"},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"import-documents-in-fa.html#import-attached-documents", "body":"fieldName: This parameter points to the property name of the file component where documents are uploaded in forms. The value should be placed in the Expression field."},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"import-documents-in-fa.html#import-attached-documents", "body":"contactId [optional]: the contact ID if you want to store the document under the given contact. You can define the value for the expression field with a variable from the process, for example: ${import.c_contactId}. The contactId parameter overrides the documentFolder class field if both are given. The contact ID can be either the \"Contact ID\" defined for the contact or its internal database ID."},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"import-documents-in-fa.html#import-attached-documents", "body":"documentFolder [optional]: the folder in the FA document library to upload the documents. Enter a path in the String value field, for example: Folder\/report. Note that this parameter value should not be prefixed with \/."},
{"title":"Import attached documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"import-documents-in-fa.html#import-attached-documents", "body":"documentTag [optional]: the document tags. The value can be a comma-separated list of tags for the uploaded documents. For example, this value can be used to tag documents for signing."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-documents-in-fa.html#idm46709275513776", "body":"Import generated reports"},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-documents-in-fa.html#idm46709275513776", "body":"Once a report is generated during a process, you can store it under contacts, portfolios, transactions, trade orders, securities, or FA document libraries and add tags to it. To do so, follow these steps:"},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-documents-in-fa.html#idm46709275513776", "body":"Add Service task to the process."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"import-documents-in-fa.html#idm46709275513776", "body":"In the component properties, define Delegate expression to be ${reports}."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"import-documents-in-fa.html#idm46709275513776", "body":"Define its class fields with Name as the following parameters and Expression as the key to grab specific data or String if you wish to hardcode a value:"},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"import-documents-in-fa.html#idm46709275513776", "body":"documentName [optional]: the document name if you want the process to pick up a specific generated report. Otherwise, all generated reports are uploaded."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"import-documents-in-fa.html#idm46709275513776", "body":"contactId [optional]: the contact ID if you want to store the document under the given contact. The default expression value can be defined using a variable from a process, for example, ${import.c_contactId}. The contactId parameter overrides the documentFolder class field if both are given. The contact ID can be either the \"Contact ID\" defined for the contact or its internal database ID."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"import-documents-in-fa.html#idm46709275513776", "body":"portfolioId [optional]: the portfolio ID if you want to store the document under the given portfolio. The default expression value can be defined using a variable from a process, e.g., ${import.p_shortName}. The portfolio ID can be either the \"Portfolio ID\" defined for the portfolio or its internal database ID."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"import-documents-in-fa.html#idm46709275513776", "body":"transactionId [optional]: the transaction ID if you want to store the document under the given transaction. The transaction ID is its internal database ID."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"import-documents-in-fa.html#idm46709275513776", "body":"tradeOrderId [optional]: the trade order ID if you want to store the document under the given trade order. The trade order id is its internal database ID."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"import-documents-in-fa.html#idm46709275513776", "body":"securityId [optional]: the security ID if you want to store the document under the given security. The security ID can be either the \"Security code\" defined for the security or its internal database ID. If you provide multiple security IDs, the first ID in this security ID list takes effect only."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"import-documents-in-fa.html#idm46709275513776", "body":"documentFolder [optional]: the folder in the FA document library to upload the documents. Enter a path in the string value field, for example: Folder\/report. Note that this parameter value should have a prefixed with \/."},
{"title":"Import generated reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"import-documents-in-fa.html#idm46709275513776", "body":"documentTag [optional]: the document tags. The value can be a comma-separated list of tags for the uploaded documents. For example, this value can be used to tag documents for signing."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"determine-consequences-in-a-process.html", "body":"To include conditional logic in your process flow, use a decision task. The decision task embeds a decision table that describes rules for inputs and outputs to follow if the rules are matched. Inputs refer to existing variable data collected earlier in the process. In most cases, they are property names of fields from a form. The outputs are new variables stored as part of the process. For example, if <input_variable> == \"A\", then <output_variable> == \"Active\"."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"determine-consequences-in-a-process.html", "body":"Before creating process consequences, you need to create a decision table."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"determine-consequences-in-a-process.html", "body":"Open the Process modeler view, Decisions tab, and click Create Decision Table."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"determine-consequences-in-a-process.html", "body":"Define a model name, model key, and, optionally, a short description of your model."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"determine-consequences-in-a-process.html", "body":"Take a data variable from the process you want to use as an input variable for the table."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"determine-consequences-in-a-process.html", "body":"Define an output variable and individual rules for the proposed outcome."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"determine-consequences-in-a-process.html", "body":"You can define one or many inputs and outputs in the decision table. The rules will translate the input variable value to its matching output pair defined in the decision table."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"determine-consequences-in-a-process.html", "body":"To use the decision table in the process, go back to the process model and add a decision task."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"determine-consequences-in-a-process.html", "body":"In the component properties, select the created decision table in the Decision table reference option. The new output variable is now part of the process. You can use it to determine where the process will follow with a gateway task."},
{"title":"Determine consequences in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"determine-consequences-in-a-process.html", "body":"Define the flow condition in the arrow pointing to the target task. For example: ${<output_variable> == <some_defined_value>}."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"To use information from an external source in your process, you can fetch it via API, including APIs requiring OAuth 2.0 authentication."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"To do this, follow these steps:"},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"Add a new service task to the process."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"Define Delegate expression to be ${API}."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"Configure the Class fields as described in the table:"},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"send-emails-from-a-workflow.html", "body":"To send emails from a workflow, you need to add a Mail task in it. Before this, make sure that you configured the email settings in FA Back correctly:"},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"send-emails-from-a-workflow.html", "body":"Go to the Preference → Administration → Email settings section in FA Back and fill in the fields:"},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"send-emails-from-a-workflow.html", "body":"Contact your FA support to restart Flowable to take into account these email settings for your processes."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"send-emails-from-a-workflow.html", "body":"Configure the Mail task in your process to send emails. To learn more about the task configuration, see Flowable documentation on Flowable site."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"You can check if a person is politically exposed (PEP) or sanctioned, and get their address data using FA’s integration with Roaring. "},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Using this feature requires a separate contract with Roaring. To learn more about Roaring's services, visit their official site."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"FA collects data from the following Roaring APIs:"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Global Politically Exposed Person (PEP)"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Sanctions Lists"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Population Register Sweden"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Population Register Norway"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Population Register Finland"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Population Register Denmark"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"For more information about the APIs, see Roaring's documentation."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"To fetch the person's address, PEP and sanctions data in your process, follow these steps:"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Add a new service task to the process."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Define Delegate expression to be ${roaring}."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Configure the Class fields as described in the table:"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"The information retrieved from Roaring is stored in the following process variables:"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringFullName"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringFirstName"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringLastName"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringAddress1"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringAddress2"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringZipCode"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringCity"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringCountry"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringPep - One-string field that contains all information found about PEP. This field is empty if nothing is found."},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html#response-56", "body":"roaringSanction - One-string field contains all information found about sanctions. This field is empty if nothing is found."},
{"title":"Forms in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"forms-in-a-process.html", "body":"Form is the graphical user interface and is usually a part of a workflow. Form can contain various fields and components that the users can interact with and enter their data. You can create a Form via FA Form Editor which is the primary interface builder within the FA Developer App that can be accessed through the Forms view (Workflows → Forms)."},
{"title":"Forms in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"forms-in-a-process.html", "body":"When adding a new form, FA Form editor provides a graphical user interface. You can drag and drop each form component to design new forms. The component's placements determine the appearance of the form. To learn how to create a new form, check Create a form. "},
{"title":"Forms in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"forms-in-a-process.html", "body":"While creating a new form, you can define the components' fields so that they are compatible with the FA import process. See Define form components to import data in FA for more info."},
{"title":"Forms in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"forms-in-a-process.html", "body":"We recommend some configurations that allow you to calculate data in hidden fields before importing as well as uploading documents\/photos into FA. Please check out Add data for import via hidden components  and Import user-uploaded files with file component"},
{"title":"Forms in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"forms-in-a-process.html", "body":"After you create a form, you can embed it into a workflow. To learn how to embed a form in a workflow, see Display a form."},
{"title":"Forms in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"forms-in-a-process.html", "body":"You can see the form in action by launching it in a workflow. Please check out Expose a workflow"},
{"title":"Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"create-a-form.html", "body":"To create a form:"},
{"title":"Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"create-a-form.html", "body":"Open the Forms view in the FA Developer app (Workflows → Forms in the menu on the left) and click Add form."},
{"title":"Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"create-a-form.html", "body":"Choose a form component (for example, Text Field) from the component list on the left side and move it to the form component area."},
{"title":"Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"create-a-form.html", "body":"Give the form component a Label to differentiate it from other components."},
{"title":"Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"create-a-form.html", "body":"Define a Property Name in the element's API tab. It is used to identify the field in the collected data for each element. See Define form components to import data in FA."},
{"title":"Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"create-a-form.html", "body":"Enter the form name to differentiate it in the List of forms in the Forms view and click Save form."},
{"title":"Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"create-a-form.html", "body":"After saving, you can find the form in the Forms view. You can now use the form in a process: see Display a form."},
{"title":"Define form components to import data in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"define-form-components-to-import-data-in-fa.html", "body":"To import data entered in the form into FA, you need to map the form fields to the corresponding FA fields. A corresponding FA field can be either standard or created using a custom profile."},
{"title":"Define form components to import data in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"define-form-components-to-import-data-in-fa.html", "body":"To map the form component to a standard FA field, see Import values in standard FA fields. "},
{"title":"Define form components to import data in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"define-form-components-to-import-data-in-fa.html", "body":"To map the form component to a custom profile field, see Import values in custom profile data. "},
{"title":"Define form components to import data in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"define-form-components-to-import-data-in-fa.html", "body":"After defining the importing properties for the form components, see Import collected data into FA to set up an import data process."},
{"title":"Import values in standard FA fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-standard-fa-fields", "body":"FA uses field codes to import data in the corresponding fields. For the list of FA fields and codes, see Importing"},
{"title":"Import values in standard FA fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-standard-fa-fields", "body":"When you create a form, you need to define the Property Name field in the component’s API tab, prefixed with \"import\": import.<FA code>. Dots in the FA code have to be replaced with an underscore (_), for example:"},
{"title":"Import values in standard FA fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-standard-fa-fields", "body":"Fields with a Property Name containing the prefix import. (the word import followed by a dot) will be imported into FA. All underscores will be converted to dots in the FA during importing process."},
{"title":"Import values in custom profile data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-custom-profile-data", "body":"To import the custom profile attribute fields, you need to create them in FA Back first. For instructions, see Custom fields for contacts, portfolios and securities."},
{"title":"Import values in custom profile data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-custom-profile-data", "body":"When you create a form, define the Property Name field in the component’s API tab. Use the following syntax: import.<c\/s\/p>_profileAttribute_<attribute key> (c\/s\/p indicating contact\/security\/portfolio). The attribute key should not contain dots but underscores instead, for example:"},
{"title":"Add data for import via hidden components ", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"add-data-for-import-via-hidden-components.html", "body":"Hidden components in the form let you import additional data not provided by the user. For example, if you want to set a default value that indicates the user type when importing. To add a hidden component in the form, select Hidden component under the Data section on the component list on the left side of Form Editor."},
{"title":"Add data for import via hidden components ", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"add-data-for-import-via-hidden-components.html", "body":"Recommended configuration:"},
{"title":"Add data for import via hidden components ", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"add-data-for-import-via-hidden-components.html", "body":"Data tab, fill in Custom default value or Calculated value: for example, value = \"1\""},
{"title":"Add data for import via hidden components ", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"add-data-for-import-via-hidden-components.html", "body":"API tab, fill in Property name: for example, import.c_type"},
{"title":"Import user-uploaded files with file component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import-user-uploaded-files-with-file-component.html", "body":"This import feature requires the File component under the Premium section on the component list on the left side of Form Editor. The component allows the users to upload files and take a photo (optionally, if the Enable web camera option is checked) with the device used for filling in the form element. The process will import the uploaded files into FA following the importing service task configuration."},
{"title":"Import user-uploaded files with file component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-user-uploaded-files-with-file-component.html", "body":"Recommended configuration:"},
{"title":"Import user-uploaded files with file component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-user-uploaded-files-with-file-component.html", "body":"File tab, select Storage: Base64."},
{"title":"Import user-uploaded files with file component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"import-user-uploaded-files-with-file-component.html", "body":"API tab, fill in the Property Name: for example, file, fileUpload, etc. "},
{"title":"Expose a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html", "body":"After you designed and built your workflow, you can make it available for the users. Workflows can be used in various ways and the way that you would like to expose your workflow depends on what kind of workflow you are building. There are the following ways to make your workflow available for the user:"},
{"title":"Expose a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"expose-a-process.html", "body":"By using an HTML page that triggers your workflows and acts as a template for the user to interact with your workflow. Use this option if your workflow has user interface and is designed to interact with the user. For more details, see Expose a UI workflow by using HTML document."},
{"title":"Expose a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"expose-a-process.html", "body":"By using an FA Back process launcher feature that runs your workflow in the background. Use this option if your workflow has no UI and the purpose is to automate your tasks. For more details, see Expose a non-UI workflow by using FA Back process launcher."},
{"title":"Expose a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"expose-a-process.html", "body":"Launch onboarding workflow when the user logs in to FA Client Portal. For more details, see Launch onboarding process when the user logs in to FA Client Portal."},
{"title":"Expose a UI workflow by using HTML document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html#expose-a-ui-workflow-by-using-html-document", "body":"If you are building a UI workflow you need to have an HTML document that renders your process. On the high level, the purpose of this HTML document is to:"},
{"title":"Expose a UI workflow by using HTML document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"expose-a-process.html#expose-a-ui-workflow-by-using-html-document", "body":"Authenticate the user who tries to launch the workflow. The authentication is done by using External API client in Keycloak."},
{"title":"Expose a UI workflow by using HTML document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"expose-a-process.html#expose-a-ui-workflow-by-using-html-document", "body":"Launch your workflow and display forms to the user."},
{"title":"Expose a UI workflow by using HTML document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"expose-a-process.html#expose-a-ui-workflow-by-using-html-document", "body":"Redirect the user to a specified page after the process is finished."},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html#idm46709275241840", "body":"Prepare the template file and run your UI workflow"},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"expose-a-process.html#idm46709275241840", "body":"FA provides a template document that you can use to expose your workflow. Follow the below steps to prepare the file and run your process:"},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"expose-a-process.html#idm46709275241840", "body":"Download the file templateForUIProcess.html and change:"},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"expose-a-process.html#idm46709275241840", "body":"The processKey variable in row 23 to be your process key. The process key defines which process is run after the authentication."},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"expose-a-process.html#idm46709275241840", "body":"The redirectPath variable on row 26 to point to a URL or an HTML file where you want the user to be redirected after process is completed."},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"expose-a-process.html#idm46709275241840", "body":"Rename the HTML file and upload it in FA:"},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"expose-a-process.html#idm46709275241840", "body":"Navigate to File management in FA Admin console and open the public folder in the \/public directory."},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"expose-a-process.html#idm46709275241840", "body":"Click Upload files to upload your HTML file."},
{"title":"Prepare the template file and run your UI workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"expose-a-process.html#idm46709275241840", "body":"Launch your workflow by navigating to the following URL with your browser: https:\/\/<instance>.fasolutions.com\/public\/<yourFile.html>"},
{"title":"Customize your template file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html#idm46709275241632", "body":"Customize your template file"},
{"title":"Customize your template file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"expose-a-process.html#idm46709275241632", "body":"You can customize your template further – brand it and add form translations. To brand the template, modify HTML and CSS. To translate your forms, add a translation file in JSON format in the \/public directory."},
{"title":"Expose a non-UI workflow by using FA Back process launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html#expose-a-non-ui-workflow-by-using-fa-back-process-launcher", "body":"You can launch a Flowable workflow directly from FA Back by using the process called \"Flowable launcher\". With Flowable launcher, you can select a set of contacts, portfolios, trade orders, or transactions and use this data in a Flowable workflow."},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html#configure-flowable-launcher", "body":"To use Flowable launcher:"},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Install Flowable launcher in the FA Back App Store."},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Configure a Flowable launcher instance. Set the following values:"},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html#configure-your-flowable-process", "body":"To configure your Flowable process:"},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"expose-a-process.html#configure-your-flowable-process", "body":"Start your process with a Start event registry event."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"expose-a-process.html#configure-your-flowable-process", "body":"Set the Event key in the Start event registry event with the same value as the one in the FA Back Flowable launcher settings."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"expose-a-process.html#configure-your-flowable-process", "body":"Set the Channel key field to the flowable-inbound value."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"expose-a-process.html#configure-your-flowable-process", "body":"Map the data coming from Flowable launcher by configuring the Mapping from event payload values in the Start event registry event. You can then create variables for your Flowable process using fields given by Flowable launcher. The available fields depend on the grouping you defined in the Flowable launcher configuration:"},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"expose-a-process.html#configure-your-flowable-process", "body":"For example, if you group the data by Contact, you could map the fields like this:"},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"expose-a-process.html#configure-your-flowable-process", "body":"When you configured the Start event registry event, you can configure the rest of your Flowable process. To learn more, see Building a workflow."},
{"title":"Launch onboarding process when the user logs in to FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"expose-a-process.html#launch-onboarding-process-when-the-user-logs-in-to-fa-client-portal", "body":"FA Client Portal can launch an onboarding process when a user without a linked contact tries to access the application."},
{"title":"Launch onboarding process when the user logs in to FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"expose-a-process.html#launch-onboarding-process-when-the-user-logs-in-to-fa-client-portal", "body":"Define the process to launch by setting the Onboarding value for the Target namespace field in the main configuration of the process. You can only configure one process to be launched from the FA Client Portal."},
{"title":"Launch onboarding process when the user logs in to FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"expose-a-process.html#launch-onboarding-process-when-the-user-logs-in-to-fa-client-portal", "body":"If a user doesn't have a linked contact, the system redirects them to the process when trying to access FA Client Portal."},
{"title":"Launch onboarding process when the user logs in to FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"expose-a-process.html#launch-onboarding-process-when-the-user-logs-in-to-fa-client-portal", "body":"If no processes with the Onboarding value are configured, the user can't access FA Client Portal due to the missing linked contact."},
{"title":"Sample workflows", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample-processe.html", "body":"In the section below, you will find samples and tutorials on how to create different workflows."},
{"title":"Create a contact", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html", "body":"This tutorial provides instructions on how to create a custom process that adds a contact in FA. You could think of it as the first part of a complete onboarding process that starts with collecting your end client’s personal information to create a contact in FA based on it."},
{"title":"Create a contact", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html", "body":"In short, you need to:"},
{"title":"Create a contact", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html", "body":"Create a form for the user to enter the contact information."},
{"title":"Create a contact", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html", "body":"Create two processes to display the form to the user and to import the input data."},
{"title":"Create a contact", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html", "body":"Upload a user interface (HTML) to initiate and display the process to the user."},
{"title":"Create a contact", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html", "body":"Access and run the custom process."},
{"title":"Create a contact", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html", "body":"The result will look like this:"},
{"title":"1. Create a form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#1--create-a-form", "body":"1. Create a form"},
{"title":"Step 1.1 - Navigate to Forms in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275157136", "body":"Step 1.1 - Navigate to Forms in FA"},
{"title":"Step 1.1 - Navigate to Forms in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275157136", "body":"Navigate to the FA Developer app and choose Forms. Click Add form to start the configuration of a new form."},
{"title":"Step 1.1 - Navigate to Forms in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275157136", "body":"This is what your form should look like after completing this step."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"Step 1.2 - Create the Social Security Number text field component"},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"Drag a text field component to the form area. The text field component allows the user to input text."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"Add a label and description to it. You can preview the text field component in the form in real-time in the Preview section on the right."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"(Optional) add an input mask – a pattern the user input must follow. In this tutorial we define it as 999999999999, which means that the 12 first characters must all be numbers. The intention is to validate Swedish SSN, which can be represented as 12 consecutive numbers, e.g. 198501014421. You are free to add your own input mask to check for some other SSN format, or simply skip it."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"Go to the Validation tab and mark this component as a required field by checking the Required checkbox. If Required is checked, the form can't be submitted without a value in this field."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"(Optional) define a maximum and minimum length of the SSN. This example allows the user to input an SSN which is exactly 12 characters long."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"Go to the API tab and input the import key for this field:"},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"import.c_contactId"},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"This is used by FA to import the input value of this component to the new contact's Contact ID field."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"Enter a name for the form at the bottom of the screen (if not there already), and click Save form, to save your progress."},
{"title":"Step 1.2 - Create the Social Security Number text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"tutorial---create-a-new-contact.html#idm46709275156720", "body":"You created the first input component of the form. This is what your form should look like after completing this step."},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"Drag a new text field component to the form area."},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"Add a label and a placeholder in the component."},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"Make it a required field by checking the Required checkbox."},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"(Optional) add validation to check that the name is at least 2 words."},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"Add the import key for the contact name."},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"import.c_name"},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"Save the component."},
{"title":"Step 1.3 - Create the Name text field component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create-a-new-contact.html#step-1-3---create-the-name-text-field-component", "body":"This is what your form should look like after completing this step."},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"Step 1.4 - Create the Juridical select component"},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"Drag a select component to the form area. Add a label and a placeholder."},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"Go to the Data tab and add data source values by clicking + Add Another. This example adds some of the FA standard Juridical definitions for a contact."},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"Make it a required field by checking the Required checkbox."},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"Add the import key for the contact juridical definition."},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"import.c_juridical"},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"Save the component."},
{"title":"Step 1.4 - Create the Juridical select component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create-a-new-contact.html#idm46709275132880", "body":"This is what your form should look like after completing this step."},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"Step 1.5 - Create the Classification radio component"},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"Drag a radio component to the form area. Add a label."},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"Go to the Data tab and add data source values by clicking +Add Another. This example adds some of the FA standard classification definitions for a contact."},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"Make it a required field by checking the Required checkbox."},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"Add the import key for the contact classification."},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"import.c_classification"},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"Save the component."},
{"title":"Step 1.5 - Create the Classification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create-a-new-contact.html#idm46709275120576", "body":"This is what your form should look like after completing this step."},
{"title":"Step 1.6 - Create the Identification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275120448", "body":"Step 1.6 - Create the Identification radio component"},
{"title":"Step 1.6 - Create the Identification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275120448", "body":"Drag a new radio component to the form area. Add a label to it."},
{"title":"Step 1.6 - Create the Identification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275120448", "body":"Go to the Data tab and add values by clicking +Add Another. This example adds some of the FA standard Tax Country definitions for a contact."},
{"title":"Step 1.6 - Create the Identification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275120448", "body":"Make it a required field by checking the Required checkbox."},
{"title":"Step 1.6 - Create the Identification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275120448", "body":"Add the import key for the Contact identity. This is used by FA to import the input value of this component to the new contact's Identity field. Save the component."},
{"title":"Step 1.6 - Create the Identification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275120448", "body":"import.c_identity"},
{"title":"Step 1.6 - Create the Identification radio component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275120448", "body":"This is what your form should like after completing this step."},
{"title":"Step 1.7 - Create the Tax Country select component.", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275091568", "body":"Step 1.7 - Create the Tax Country select component."},
{"title":"Step 1.7 - Create the Tax Country select component.", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275091568", "body":"Drag a new radio component to the form area. Add a label to it."},
{"title":"Step 1.7 - Create the Tax Country select component.", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275091568", "body":"Go to the Data tab and add values by clicking +Add Another. This example adds some of the FA standard Tax Country definitions for a contact."},
{"title":"Step 1.7 - Create the Tax Country select component.", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275091568", "body":"Make it a required field by checking the Required checkbox."},
{"title":"Step 1.7 - Create the Tax Country select component.", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275091568", "body":"Add the import key for the contact's tax country. Save the component."},
{"title":"Step 1.7 - Create the Tax Country select component.", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275091568", "body":"import.c_taxCountry"},
{"title":"Step 1.7 - Create the Tax Country select component.", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275091568", "body":"This is what your form should like after completing this step."},
{"title":"Step 1.8 - Create the Type hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275079680", "body":"Step 1.8 - Create the Type hidden component"},
{"title":"Step 1.8 - Create the Type hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275079680", "body":"Drag in a new hidden component into the form. Hidden components are not shown to the user. We use it to set the contact Type field to a default value, which the user cannot see nor modify. The hidden component may be located under the Data dropdown."},
{"title":"Step 1.8 - Create the Type hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275079680", "body":"Add a label to the component."},
{"title":"Step 1.8 - Create the Type hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275079680", "body":"Add the default value for the Type. In FA standard, \"1\" corresponds to Type: Customer."},
{"title":"Step 1.8 - Create the Type hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275079680", "body":"Add the import key for the contact Type. Save the component."},
{"title":"Step 1.8 - Create the Type hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275079680", "body":"import.c_type"},
{"title":"Step 1.8 - Create the Type hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275079680", "body":"This is what your form should look like after completing this step."},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"Step 1.9 - Create the Status hidden component"},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"Drag a new Hidden component to the form area. Add a label to it."},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"Add the default value for Status. In FA standard, \"A\" corresponds to Status: Active."},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"Add the import key for the contact Status. Save the component."},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"import.c_status"},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"Note or memorize the ID of your form. You are going to use it to identify the form later on."},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"Save the form."},
{"title":"Step 1.9 - Create the Status hidden component", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create-a-new-contact.html#idm46709275067856", "body":"The form is ready. Proceed to the next steps of creating the processes."},
{"title":"2. Create processes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#2--create-processes", "body":"2. Create processes"},
{"title":"Step 2.1 - Create the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275044304", "body":"Step 2.1 - Create the process model"},
{"title":"Step 2.1 - Create the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275044304", "body":"Navigate to the FA Developer app and then to Processes. Click Create Process."},
{"title":"Step 2.1 - Create the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275044304", "body":"Enter a name, a key and optionally a description for the new process model. Note or memorize the process model key, you will need it later."},
{"title":"Step 2.1 - Create the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275044304", "body":"You should end up at a screen looking like this."},
{"title":"Step 2.2 - Add the User Task process to show the form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275043296", "body":"Step 2.2 - Add the User Task process to show the form"},
{"title":"Step 2.2 - Add the User Task process to show the form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275043296", "body":"Now that you have a process model, you can add processes to it. Start by adding a process to display the form you just created."},
{"title":"Step 2.2 - Add the User Task process to show the form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275043296", "body":"Drag a user task component to the process model."},
{"title":"Step 2.2 - Add the User Task process to show the form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275043296", "body":"Click the circle that marks the start of the process and drag an arrow from it to the user task. This essentially translates to \"Start and then immediately run the user task process\"."},
{"title":"Step 2.2 - Add the User Task process to show the form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275043296", "body":"Click the user task component. Add a name and a key to it. The key should be set equal to the form ID you memorized or noted at the end of step 1.9."},
{"title":"Step 2.2 - Add the User Task process to show the form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275043296", "body":"Add $INITIATOR value to the Assignee field in the Assignment option of the user task component."},
{"title":"Step 2.2 - Add the User Task process to show the form", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275043296", "body":"The process model now knows that it should start and then immediately show the form you created in step 1."},
{"title":"Step 2.3 - Add the Service Task process to import the form data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275034400", "body":"Step 2.3 - Add the Service Task process to import the form data"},
{"title":"Step 2.3 - Add the Service Task process to import the form data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275034400", "body":"Drag a service task component to the Process Model. Add a name to it, for example, \"Create new contact\"."},
{"title":"Step 2.3 - Add the Service Task process to import the form data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275034400", "body":"Add a delegate expression by clickcing Delegate expression. This opens a new window."},
{"title":"Step 2.3 - Add the Service Task process to import the form data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275034400", "body":"Enter the following:"},
{"title":"Step 2.3 - Add the Service Task process to import the form data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275034400", "body":"${importer}"},
{"title":"Step 2.3 - Add the Service Task process to import the form data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275034400", "body":"Drag an arrow from the user task to the service task. This instructs the Process Model to run the service task after the user task. In other words, the Process Model now understands that when the form is submitted by the user, it should run import."},
{"title":"Step 2.3 - Add the Service Task process to import the form data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275034400", "body":"The Process Model is ready. Save the Process Model and then exit it."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Step 2.4 - Create an app to publish the process model"},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Go to the Apps tab and click Create App."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Fill in the app details, such as name and key. Click Create new app definition."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"In the App overview screen, click Edit included models to add the Process Model."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Add your Process Model by clikcing it once. There is a small blue plus-sign appearing on top of it, if it is added."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Make sure your Process Model is showing in under BPMN models, then save and close your app."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Open the app overview again."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Click Publish to publish the app containing your Process Model."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"Confirm the app publishing by clicking Publish app definition."},
{"title":"Step 2.4 - Create an app to publish the process model", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"tutorial---create-a-new-contact.html#idm46709275034112", "body":"The app containing your Process Model is ready and published."},
{"title":"3. Upload a user interface (HTML)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#3--upload-a-user-interface--html-", "body":"3. Upload a user interface (HTML)"},
{"title":"Step 3.1 - Download and modify the user interface (HTML document)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709274983808", "body":"Step 3.1 - Download and modify the user interface (HTML document)"},
{"title":"Step 3.1 - Download and modify the user interface (HTML document)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709274983808", "body":"Download the below HTML document and open it in an editor."},
{"title":"Step 3.1 - Download and modify the user interface (HTML document)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709274983808", "body":"onboardingUI.html"},
{"title":"Step 3.1 - Download and modify the user interface (HTML document)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709274983808", "body":"In this file, the processKey variable should use the key you have defined in your Process Model:"},
{"title":"Step 3.1 - Download and modify the user interface (HTML document)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709274983808", "body":"var processKey = \"onboarding\""},
{"title":"Step 3.1 - Download and modify the user interface (HTML document)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709274983808", "body":"If you chose another key for your Process Model than the one used in this tutorial – \"onboarding\" – then replace the string \"onboarding\" with whatever your Process Model key is (as entered in step 2.1) and save the document. Otherwise, leave the HTML document unchanged."},
{"title":"Step 3.2 - Upload the interface (HTML document) to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709274983680", "body":"Step 3.2 - Upload the interface (HTML document) to FA"},
{"title":"Step 3.2 - Upload the interface (HTML document) to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709274983680", "body":"Navigate to File management in FA Admin console. Within File management, navigate to folder public in the Root\/public directory."},
{"title":"Step 3.2 - Upload the interface (HTML document) to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709274983680", "body":"In the public folder, click Upload files and upload the the onboardingUI.html file. It should end up in the public folder."},
{"title":"Step 3.3 - Upload another HTML document to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709274979936", "body":"Step 3.3 - Upload another HTML document to FA"},
{"title":"Step 3.3 - Upload another HTML document to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709274979936", "body":" "},
{"title":"Step 3.3 - Upload another HTML document to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709274979936", "body":"If you want to redirect the user to a specific page after the process finished running, you can use the redirectPath variable where you can define the destination page. You need to upload that destination page to the FA public folder."},
{"title":"Step 3.3 - Upload another HTML document to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709274979936", "body":"In this example, the form redirects the user to the page thanks.html:"},
{"title":"Step 3.3 - Upload another HTML document to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709274979936", "body":"var redirectPath = \"thanks.html\""},
{"title":"Step 3.3 - Upload another HTML document to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709274979936", "body":"Download the below thanks.html document and upload it to the public folder the same way you did in step 3.2."},
{"title":"Step 3.3 - Upload another HTML document to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709274979936", "body":"thanks.html"},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"4. Run the process"},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"The URL to access the process is the below. Replace <instance> with your environment name."},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"Note that you need to be logged in to FA, in order to access this URL."},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"https:\/\/<instance>.fasolutions.com\/public\/onboardingUI.html"},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"You should end up at a page looking like this."},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"If you submit the form, a new contact is created through importing in FA, with the details entered into the form."},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"Finally, you are redirected to the thanks.html page, that contains a link to take you back to FA."},
{"title":"4. Run the process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---create-a-new-contact.html#idm46709274984192", "body":"Use the same URL to access the process again, if you wish to start it over."},
{"title":"Generate and display reports in a custom workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-generate-and-display-reports-in-a-custom-process.html", "body":"You can generate a report that includes form data entered by the user and display it to the user as a downloadable attachment in the custom workflow. For example, like KYC.pdf in the screenshot below."},
{"title":"Add a report template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#add-a-report-template", "body":"Make the report template available in the Reports view in the FA Developer app."},
{"title":"Add a report template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#add-a-report-template", "body":"To include the form data entered by the user in the report, add the import key you specified for the input field in the form settings. For example, in Step 1.3 - Create the Name text field component we add the import.c_name import key to the Name input field. In this case, a report template can access the data input in the Name field with the same import.c_name key."},
{"title":"Add and configure a service task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274943232", "body":"Add and configure a service task"},
{"title":"Add and configure a service task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274943232", "body":"In your workflow model, add a new service task."},
{"title":"Add and configure a service task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274943232", "body":"Define the following properties:"},
{"title":"Add and configure a service task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274943232", "body":"Delegate expression: ${reporter}."},
{"title":"Add and configure a service task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274943232", "body":"Class fields:"},
{"title":"Add and configure a service task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274943232", "body":"reportTemplate: Path from the root folder to the report template. You can find in the Reports view – for example, \/KYC\/KYC in the Add a report template step."},
{"title":"Add and configure a service task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274943232", "body":"fileName : The report display name, for example, KYC.pdf."},
{"title":"Add and configure a user task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274935776", "body":"Add and configure a user task"},
{"title":"Add and configure a user task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274935776", "body":"In your workflow model, add a user task."},
{"title":"Add and configure a user task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274935776", "body":"Add the form key of the form where you want to display the report link."},
{"title":"Add and configure a user task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-generate-and-display-reports-in-a-custom-process.html#idm46709274935776", "body":"The generated report will appear as a link at the end of the form."},
{"title":"Prefill form fields with the user information", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"prefill-process-form-fields-with-the-user-information.html", "body":"Prefill form fields with the user information"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916864", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916864", "body":"You can prefill form fields in your custom workflow with the user information, such as user’s first and last name, email and username. The user provides this information during the initial registration, and it is stored in FA's Keycloak user object. When the workflow is triggered, FA passes the user information to the custom workflow."},
{"title":"User information fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916672", "body":"User information fields"},
{"title":"User information fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916672", "body":"User information is saved in the form.startData.userProfile process variable. The user attributes are:"},
{"title":"User information fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916672", "body":"form.startData.userProfile.given_name – First name."},
{"title":"User information fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916672", "body":"form.startData.userProfile.family_name – Last name."},
{"title":"User information fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916672", "body":"form.startData.userProfile.email – Email."},
{"title":"User information fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916672", "body":"form.startData.userProfile.preferred_username – User name."},
{"title":"User information fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274916672", "body":"On top of the above fields, the user object can have additional attributes depending on whether external identity provider is used for authentication or not. Attribute keys depend on your setup. Additional user data is available in the userProfile object in the same way as the above attributes."},
{"title":"Prefilling process form fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274914576", "body":"Prefilling process form fields"},
{"title":"Prefilling process form fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274914576", "body":"You can use the user data to prefill your form fields:"},
{"title":"Prefilling process form fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274914576", "body":"Navigate to your form and open the component's Edit window."},
{"title":"Prefilling process form fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274914576", "body":"Navigate to the Data tab and scroll down to the Calculated Value section."},
{"title":"Prefilling process form fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274914576", "body":"In the JavaScript section, set the \"value\" variable to be the user attribute you want. For example: value = form.startData.userProfile.given_name)."},
{"title":"Prefilling process form fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"prefill-process-form-fields-with-the-user-information.html#idm46709274914576", "body":"When you start your process, the form field will be prefilled with the user information."},
{"title":"Import generated reports in a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-generated-reports-in-a-custom-process.html", "body":"Import generated reports in a workflow"},
{"title":"Add and configure a Service Task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898320", "body":"Add and configure a Service Task"},
{"title":"Add and configure a Service Task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898320", "body":"Add a Service Task to the process model."},
{"title":"Add and configure a Service Task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898320", "body":"Define its Delegate Expression as ${reports}."},
{"title":"Add and configure a Service Task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898320", "body":"The Service Task will by default import generated reports to the Contact with Contact ID equal to what was input into a Form field with the exact key import.c_contactId (if any such existed)."},
{"title":"Add and configure a Service Task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898320", "body":"Optionally, use the Service Task's Class Fields to further describe the import behavior, as described below."},
{"title":"Import report to a specific Contact's documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898128", "body":"Import report to a specific Contact's documents"},
{"title":"Import report to a specific Contact's documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898128", "body":"Import reports to contact documents (see Contact window for details) by adding a Class Field to the Service Task. Define the Class Field Name as contactId."},
{"title":"Import report to a specific Contact's documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898128", "body":"If you wish to pick up the Contact ID dynamically from a Form field that was input at some point during the process' lifetime:"},
{"title":"Import report to a specific Contact's documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898128", "body":"Define Expression as the key of the specific form field from where to grab the Contact ID value. For example, in Create a contact step 1.2, we defined the import.c_contactId key for the form field in which the user enters the Contact ID of a new Contact. We could grab that field's value by referring to it now, with the following expression ${import.c_contactId}."},
{"title":"Import report to a specific Contact's documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898128", "body":"Alternatively, if you wish to hardcode the Contact ID of a Contact to which the reports will always be imported:"},
{"title":"Import report to a specific Contact's documents", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274898128", "body":"Define String value as the Contact ID of the Contact."},
{"title":"Import report to a folder in FA Document Bank", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-generated-reports-in-a-custom-process.html#import-report-to-a-folder-in-fa-document-bank", "body":"Import reports to a folder in the FA document bank (see FA's Document Bank for details) by adding a Class Field to the Service Task. Define the Class Field Name as documentFolder and the String value as the path to the folder in FA document bank."},
{"title":"Import report to a folder in FA Document Bank", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-generated-reports-in-a-custom-process.html#import-report-to-a-folder-in-fa-document-bank", "body":"The path should not be prefixed with \/. For example, if the path to the target folder is \/Reports, define the String value as Reports."},
{"title":"Import a specific report out of multiple", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274874064", "body":"Import a specific report out of multiple"},
{"title":"Import a specific report out of multiple", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274874064", "body":"If multiple reports may be generated during the lifetime of your process, you can specify which one to import (default is all)."},
{"title":"Import a specific report out of multiple", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274874064", "body":"Add a Class Field to the Service Task with Name documentName. Define a String value equal to the exact name of the report that is to be imported."},
{"title":"Import a specific report out of multiple", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274874064", "body":"For example, if the report's name is KYC.pdf, input KYC.pdf as the String value."},
{"title":"Add a tag to the imported report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274865424", "body":"Add a tag to the imported report"},
{"title":"Add a tag to the imported report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274865424", "body":"Add a Class Field to the Service Task with Name documentTag and String value equal to the tag(s)."},
{"title":"Add a tag to the imported report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-generated-reports-in-a-custom-process.html#idm46709274865424", "body":"If multiple tags are to be set, then separate them with a comma."},
{"title":"Extending UI and data fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"extending-ui-and-data-fields.html", "body":"Custom profiles and Analytics+ columns allow you to adapt FA to your own needs and use FA more efficiently."},
{"title":"Profiles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"extending-ui-and-data-fields.html#idm46709274850064", "body":"Profiles"},
{"title":"Profiles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"extending-ui-and-data-fields.html#idm46709274850064", "body":"Custom profiles help you extend standard UI to collect, store, and view the data entered by the user. For example, you can create a custom profile to store ESG values on security or to store client-specific information on contacts."},
{"title":"Profiles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"extending-ui-and-data-fields.html#idm46709274850064", "body":"A custom profile is displayed as a tab that you can tailor to your needs and show for contacts, portfolios, or securities. A tab can contain components, such as text fields, drop-down menus, and date fields. "},
{"title":"Profiles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"extending-ui-and-data-fields.html#idm46709274850064", "body":"To learn more about custom profiles, see the Profiles section."},
{"title":"Analytics+ columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"extending-ui-and-data-fields.html#idm46709274852656", "body":"Analytics+ columns"},
{"title":"Analytics+ columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"extending-ui-and-data-fields.html#idm46709274852656", "body":"Custom Analytics+ columns let you calculate custom values in FA and use these figures in reports or view them as columns in Analytics+. For example, you can create a new TWR column based on your own formula."},
{"title":"Analytics+ columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"extending-ui-and-data-fields.html#idm46709274852656", "body":"Using custom Analytics+ columns can save time and reduce the risk of human error when calculating values outside FA."},
{"title":"Analytics+ columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"extending-ui-and-data-fields.html#idm46709274852656", "body":" To learn more about custom analytics+ columns, see the Analytics columns section."},
{"title":"Profiles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"profiles.html", "body":"You can add tabs and data fields to the Contact window, Portfolio window and Security window in FA Back by creating a custom profile. This can be useful, for example, if you need extra fields to store your client's Know-Your-Client (KYC) data in addition to FA's standard data fields. The benefit of storing data in a profile compared to saving it as a document is that you can use profile data with the FA features like FA Back views, groups, limited visibility, import and export. For more detailed description, see Custom fields for contacts, portfolios and securities in FA Back reference."},
{"title":"Profiles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"profiles.html", "body":"Profiles are constructed with Vaadin design layouts and components. You can find more details about Vaadin designs on the Vaadin site."},
{"title":"Profiles", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"profiles.html", "body":"To get started with the profiles, see the Set up a simple profile."},
{"title":"Custom components in a profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"components-available-in-a-profile.html", "body":"Custom components in a profile"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"components-available-in-a-profile.html#idm46709274816416", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"components-available-in-a-profile.html#idm46709274816416", "body":"In addition to standard Vaadin components, FA has custom components that you can use in profiles."},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"Standard components"},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"Standard components are Vaadin components that can be used without importing any additional namespace declarations. Common standard components are listed in the table:"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"Custom components"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"The custom components assume the following namespace declarations:"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"<head>\n    <meta name=\"package-mapping\" content=\"fa:com.fasolutions.vaadin.components\">\n    <meta name=\"package-mapping\" content=\"pop:com.fasolutions.vaadin.components.populatable\">\n    <meta name=\"package-mapping\" content=\"custom:fi.fasolutions.app.pfmgmt.component\"\/>\n    <meta name=\"package-mapping\" content=\"ext:com.fasolutions.ext.components\">\n<\/head>"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"Custom components are listed in the table:"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"Populatable components have following custom attributes related to the population of the data:"},
{"title":"Layout of a profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"layout-of-a-profile.html", "body":"You can arrange the profile layout in multiple ways, for example:"},
{"title":"Layout of a profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"layout-of-a-profile.html", "body":"Change the component width and height."},
{"title":"Layout of a profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"layout-of-a-profile.html", "body":"Create a horizontal or vertical layout."},
{"title":"Layout of a profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"layout-of-a-profile.html", "body":"Create subtabs."},
{"title":"Layout of a profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"layout-of-a-profile.html", "body":"Create columns."},
{"title":"Component width", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"layout-of-a-profile.html#idm46709274689904", "body":"Component width"},
{"title":"Component width", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"layout-of-a-profile.html#idm46709274689904", "body":"Examples:"},
{"title":"Component width", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"layout-of-a-profile.html#idm46709274689904", "body":"Standard width."},
{"title":"Component width", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"layout-of-a-profile.html#idm46709274689904", "body":"Width set to 50%."},
{"title":"Component width", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"layout-of-a-profile.html#idm46709274689904", "body":"Full width."},
{"title":"Component width", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"layout-of-a-profile.html#idm46709274689904", "body":"This code shows how to adjust the width of a text field."},
{"title":"Component width", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"layout-of-a-profile.html#idm46709274689904", "body":"<!doctype html>\n<html>\n <head>\n <\/head>\n <body>\n <vaadin-vertical-layout>\n <vaadin-text-field id=\"c.name\" required-indicator-visible caption=\"No adjustment\"><\/vaadin-text-field>\n <vaadin-text-field id=\"c.name1\" required-indicator-visible caption=\"width=50%\" width=\"50%\"><\/vaadin-text-field>\n <vaadin-text-field id=\"c.name2\" required-indicator-visible caption=\"width-full\" width-full><\/vaadin-text-field>\n <\/vaadin-vertical-layout>\n <\/body>\n<\/html>"},
{"title":"Component height", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"layout-of-a-profile.html#idm46709274689776", "body":"Component height"},
{"title":"Component height", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"layout-of-a-profile.html#idm46709274689776", "body":"Example:"},
{"title":"Component height", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"layout-of-a-profile.html#idm46709274689776", "body":"Standard height."},
{"title":"Component height", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"layout-of-a-profile.html#idm46709274689776", "body":"Height set to 50px."},
{"title":"Component height", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"layout-of-a-profile.html#idm46709274689776", "body":"This code shows how to adjust the height of a text field."},
{"title":"Component height", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"layout-of-a-profile.html#idm46709274689776", "body":"<!doctype html>\n<html>\n <head>\n <\/head>\n <body>\n <vaadin-vertical-layout>\n <vaadin-text-field id=\"c.name1\" required-indicator-visible caption=\"Standard height\"><\/vaadin-text-field>\n <vaadin-text-field id=\"c.name2\" required-indicator-visible height=\"50px\" caption=\"Height 50px\"><\/vaadin-text-field>\n <\/vaadin-vertical-layout>\n <\/body>\n<\/html>"},
{"title":"Sub-tabs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"layout-of-a-profile.html#sub-tabs", "body":"This code adds a second tab to the profile."},
{"title":"Sub-tabs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"layout-of-a-profile.html#sub-tabs", "body":"<!doctype html>\n<html>\n <head>\n <\/head>\n <body>\n <vaadin-vertical-layout>\n <vaadin-tab-sheet size-full>\n <tab caption=\"Tab one\" selected>\n <vaadin-horizontal-layout size-full>\n <vaadin-vertical-layout size-full>\n <vaadin-label><h2>Column<\/h2><\/vaadin-label>\n <vaadin-text-field id=\"c.name1\" caption=\"Text field\"><\/vaadin-text-field>\n <\/vaadin-vertical-layout>\n <\/vaadin-horizontal-layout>\n <\/tab>\n <tab caption=\"Tab two\">\n <vaadin-horizontal-layout size-full>\n <vaadin-vertical-layout size-full>\n <vaadin-label><h2>Column<\/h2><\/vaadin-label>\n <vaadin-text-field id=\"c.name4\" caption=\"Text field\"><\/vaadin-text-field>\n <\/vaadin-vertical-layout>\n <\/vaadin-horizontal-layout>\n <\/tab>\n <\/vaadin-tab-sheet>\n <\/vaadin-vertical-layout>\n <\/body>\n<\/html>"},
{"title":"Layout with multiple columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"layout-of-a-profile.html#layout-with-multiple-columns", "body":"This code adds two columns in a horizontal layout. This is done by creating multiple vertical layouts within a horizontal layout."},
{"title":"Layout with multiple columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"layout-of-a-profile.html#layout-with-multiple-columns", "body":"<!doctype html>\n<html>\n <head>\n <\/head>\n <body>\n <vaadin-vertical-layout>\n <vaadin-horizontal-layout size-full>\n <vaadin-vertical-layout size-full>\n <vaadin-label><h2>Left column<\/h2><\/vaadin-label>\n <vaadin-text-field id=\"twoColumns.left1\" caption=\"Left column 1\" size-full\/>\n <\/vaadin-vertical-layout>\n <vaadin-vertical-layout size-full>\n <vaadin-label><h2>Right column<\/h2><\/vaadin-label>\n <vaadin-text-field id=\"twoColumns.right1\" caption=\"Right column 1\" size-full\/>\n <\/vaadin-vertical-layout>\n <\/vaadin-horizontal-layout> \n <\/vaadin-vertical-layout>\n <\/body>\n<\/html>"},
{"title":"Set up a simple profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-simple-profile.html", "body":"Set up a simple profile"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-simple-profile.html#idm46709274661696", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-simple-profile.html#idm46709274661696", "body":"This tutorial provides instructions on how to create a custom Know Your Customer (KYC) profile tab, add fields and restrict the profile tab to be available only for a certain contact type."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-simple-profile.html#idm46709274661696", "body":"Key points in this tutorial:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-up-a-simple-profile.html#idm46709274661696", "body":"Create a KYC profile."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"set-up-a-simple-profile.html#idm46709274661696", "body":"Limit the profile to appear only in customer contacts."},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Step 1 - Create a new custom profile"},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Follow these steps to create a new custom profile in FA Back:"},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Go to Preferences > Content and translations > Profile definitions and click on Add new profile definition."},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Fill in the fields:"},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Code: KycProfile."},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Name: KYC Profile."},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Where the profile should appear: Contact."},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Type: FA Back and FA Front (Vaadin design)."},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Define criteria for when this profile is shown: Comma-separated criteria that need to be fulfilled for the profile to appear. For example, the string \"type=1,status=A,juridical.code=PE\" makes the profile only to appear for contacts with the Customer type, Active status and Private person juridical form."},
{"title":"Step 1 - Create a new custom profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"set-up-a-simple-profile.html#idm46709274661536", "body":"Click on Save."},
{"title":"Step 2 - Create the layout", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-simple-profile.html#idm46709274657104", "body":"Step 2 - Create the layout"},
{"title":"Step 2 - Create the layout", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-simple-profile.html#idm46709274657104", "body":"The profile layout consists of two parts:"},
{"title":"Step 2 - Create the layout", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-simple-profile.html#idm46709274657104", "body":"The head contains the namespace declarations to support custom UI components."},
{"title":"Step 2 - Create the layout", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-up-a-simple-profile.html#idm46709274657104", "body":"The body contains the layout where the components are added."},
{"title":"Step 2 - Create the layout", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"set-up-a-simple-profile.html#idm46709274657104", "body":"<!doctype html>\n<html>\n    <head>\n        <meta name=\"package-mapping\" content=\"custom:fi.fasolutions.app.pfmgmt.component\"\/>\n        <meta name=\"package-mapping\" content=\"fa:com.fasolutions.vaadin.components\">\n        <meta name=\"package-mapping\" content=\"pop:com.fasolutions.vaadin.components.populatable\">\n    <\/head>\n    <body>\n        <vaadin-vertical-layout>\n\n      <\/vaadin-vertical-layout>\n    <\/body>\n<\/html>"},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Step 3 - Add components to the profile"},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"In the profile below, the Saved amount and Wanted risk level fields use horizontal layout. The rest of the fields are arranged vertically. Paste the code from the code block into the editor and the result should look like the picture below."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"For the list of custom components you can use in the profile, see Custom components in a profile."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"<!doctype html>\n<html>\n <head>\n <meta name=\"package-mapping\" content=\"custom:fi.fasolutions.app.pfmgmt.component\"\/>\n <meta name=\"package-mapping\" content=\"fa:com.fasolutions.vaadin.components\">\n <meta name=\"package-mapping\" content=\"pop:com.fasolutions.vaadin.components.populatable\">\n <\/head>\n <body>\n <vaadin-vertical-layout>\n <vaadin-label><h2>Client information<\/h2><\/vaadin-label> \n <vaadin-horizontal-layout> \n <fa-design-integer-field caption=\"Saved amount\" id=\"investorProfile.savedAmount\"\/> \n <vaadin-native-select id=\"investorProfile.riskLevel\" data-item-type=\"java.lang.String\" caption=\"Wanted risk level\"> \n <option item=\"Low\">Low<\/option>\n <option item=\"Medium\">Medium<\/option>\n <option item=\"High\">High<\/option>\n <\/vaadin-native-select> \n <\/vaadin-horizontal-layout> \n <vaadin-label><div style=\"margin-top:10px\"><b>Investment types the customer is familiar with<\/b><\/div><\/vaadin-label> \n <vaadin-check-box id=\"investorProfile.stocks\" caption=\"Stocks\"><\/vaadin-check-box>\n <vaadin-check-box id=\"investorProfile.bonds\" caption=\"Bonds\"><\/vaadin-check-box>\n <vaadin-check-box id=\"investorProfile.funds\" caption=\"Funds\"><\/vaadin-check-box>\n <vaadin-check-box id=\"investorProfile.etf\" caption=\"ETF\"><\/vaadin-check-box>\n <custom-custom-popup-date-field id=\"investorProfile.latestMeeting\" caption=\"Latest client meeting\" date-format=\"yyyy-MM-dd\"><\/custom-custom-popup-date-field> \n <vaadin-label><h2>Advisory information<\/h2><\/vaadin-label> \n <vaadin-css-layout size-small style-name=\"checkboxes\" caption=\"Recommended risk\"> \n <vaadin-check-box id=\"investorProfile.low\" caption=\"Low\"\/>\n <vaadin-check-box id=\"investorProfile.medium\" caption=\"Medium\"\/>\n <vaadin-check-box id=\"investorProfile.high\" caption=\"High\"\/>\n <vaadin-label><style>.checkboxes .v-checkbox{ margin: 5px; }<\/style><\/vaadin-label> \n <\/vaadin-css-layout>\n <vaadin-text-area id=\"investorProfile.comments\" width=\"250px\" caption=\"Comments\"\/> \n <\/vaadin-vertical-layout>\n <\/body>\n<\/html>"},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Add the header."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Add the horizontal layout."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Add the integer field."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Add the native select dropdown."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Add the investment checkboxes."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Add the calendar field."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Add the header for the Advisory information."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Adds the checkboxes for recommended risk."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Adjust the spacing of the checkboxes."},
{"title":"Step 3 - Add components to the profile", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"set-up-a-simple-profile.html#idm46709274646896", "body":"Adds the text area field."},
{"title":"Step 4 - Test the profile tab", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-simple-profile.html#idm46709274643776", "body":"Step 4 - Test the profile tab"},
{"title":"Step 4 - Test the profile tab", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-simple-profile.html#idm46709274643776", "body":"Verify that the profile tab appears correctly by opening a contact with:"},
{"title":"Step 4 - Test the profile tab", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-simple-profile.html#idm46709274643776", "body":"Type = Customer"},
{"title":"Step 4 - Test the profile tab", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-up-a-simple-profile.html#idm46709274643776", "body":"Status = Active"},
{"title":"Step 4 - Test the profile tab", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"set-up-a-simple-profile.html#idm46709274643776", "body":"Juridical form = Private person"},
{"title":"Step 4 - Test the profile tab", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"set-up-a-simple-profile.html#idm46709274643776", "body":"Verify that the profile does not appear for contact with parameters that differ from the ones listed above."},
{"title":"Set up a profile with advanced layouts", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html", "body":"Set up a profile with advanced layouts"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html#overview-73", "body":"The below sample profile shows how the following layouting effects can be achieved by using Vaadin’s standard layout components:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-profile-with-advanced-layouts.html#overview-73", "body":"Tabbed content"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-profile-with-advanced-layouts.html#overview-73", "body":"Two (or more) vertical columns"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-up-a-profile-with-advanced-layouts.html#overview-73", "body":"Dividing horizontal space unevenly between components"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"set-up-a-profile-with-advanced-layouts.html#overview-73", "body":"Content that wraps to match available space"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"set-up-a-profile-with-advanced-layouts.html#overview-73", "body":"Setting a specific predetermined width to a component"},
{"title":"Sample profile code", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html#sample-profile-code", "body":"<!doctype html>\n<html>\n <head>\n <meta name=\"package-mapping\" content=\"custom:fi.fasolutions.app.pfmgmt.component\"\/>\n <\/head>\n <body>\n <vaadin-vertical-layout>\n <vaadin-tab-sheet size-full>\n <tab caption=\"Two columns\" selected>\n <vaadin-horizontal-layout size-full>\n <vaadin-vertical-layout size-full>\n <vaadin-label><h2>Left column<\/h2><\/vaadin-label>\n <vaadin-text-field id=\"twoColumns.left1\" caption=\"Left column 1\" data-item-type=\"java.lang.String\" size-full\/>\n <vaadin-text-field id=\"twoColumns.left2\" caption=\"Left column 2\" data-item-type=\"java.lang.String\" size-full\/>\n <vaadin-text-field id=\"twoColumns.left3\" caption=\"Left column 3\" data-item-type=\"java.lang.String\" size-full\/>\n <\/vaadin-vertical-layout>\n <vaadin-vertical-layout size-full>\n <vaadin-label><h2>Right column<\/h2><\/vaadin-label>\n <vaadin-text-field id=\"twoColumns.right1\" caption=\"Right column 1\" data-item-type=\"java.lang.String\" size-full\/>\n <vaadin-text-field id=\"twoColumns.right2\" caption=\"Right column 2\" data-item-type=\"java.lang.String\" size-full\/>\n <vaadin-text-field id=\"twoColumns.right3\" caption=\"Right column 3\" data-item-type=\"java.lang.String\" size-full\/>\n <\/vaadin-vertical-layout>\n <\/vaadin-horizontal-layout>\n <\/tab>\n <tab caption=\"Horizontal layouts\">\n <vaadin-vertical-layout size-full>\n <vaadin-horizontal-layout size-full>\n <vaadin-text-field id=\"horizontalLayout.smallField\" caption=\"Small field\" data-item-type=\"java.lang.String\" size-full :expand=\"0.5\"\/>\n <vaadin-text-field id=\"horizontalLayout.mediumField\" caption=\"Medium field\" data-item-type=\"java.lang.String\" size-full :expand=\"1.0\"\/>\n <vaadin-text-field id=\"horizontalLayout.largeField\" caption=\"Large field\" data-item-type=\"java.lang.String\" size-full :expand=\"2.0\"\/>\n <\/vaadin-horizontal-layout size-full>\n <\/vaadin-vertical-layout>\n <\/tab>\n <tab caption=\"CSS Layout\">\n <vaadin-css-layout size-full style-name=\"checkboxes\">\n <vaadin-check-box id=\"advancedLayout.css1\" caption=\"Checkbox with a long text 1\"\/>\n <vaadin-check-box id=\"advancedLayout.css2\" caption=\"Checkbox with a long text 2\"\/>\n <vaadin-check-box id=\"advancedLayout.css3\" caption=\"Checkbox with a long text 3\"\/>\n <vaadin-check-box id=\"advancedLayout.css4\" caption=\"Checkbox with a long text 4\"\/>\n <vaadin-check-box id=\"advancedLayout.css5\" caption=\"Checkbox with a long text 5\"\/>\n <vaadin-check-box id=\"advancedLayout.css6\" caption=\"Checkbox with a long text 6\"\/>\n <vaadin-check-box id=\"advancedLayout.css7\" caption=\"Checkbox with a long text 7\"\/>\n <vaadin-check-box id=\"advancedLayout.css8\" caption=\"Checkbox with a long text 8\"\/>\n <vaadin-check-box id=\"advancedLayout.css9\" caption=\"Fixed-width component\" width=\"60px\"\/>\n <vaadin-label><style>.checkboxes .v-checkbox{ margin: 10px; }<\/style><\/vaadin-label>\n <\/vaadin-css-layout size-full>\n <\/tab>\n <\/vaadin-tab-sheet>\n <\/vaadin-vertical-layout>\n <\/body>\n<\/html>"},
{"title":"Tabbed content", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html#tabbed-content", "body":"A tab sheet may be added with the <vaadin-tab-sheet size-full> -tag, with <tab caption=\"Two columns\" selected> tags underneath. Note the “size-full” attribute on the tab sheet component (and various other layouts in this example), which indicates that the component should expand to its full available size."},
{"title":"Tabbed content", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-profile-with-advanced-layouts.html#tabbed-content", "body":"Note, that the TabSheet must be placed within a layout, and each tab’s content must also start with a layout."},
{"title":"Two (or more) vertical columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html#two--or-more--vertical-columns", "body":"Two or more vertical columns can easily be achieved by defining a Horizontal Layout, and two (or more) Vertical Layouts beneath it. We can adjust the relative width of the two columns by defining an :expand -attribute to the content within the Horizontal Layout - in this case the two (or more) vertical layouts."},
{"title":"Two (or more) vertical columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-profile-with-advanced-layouts.html#two--or-more--vertical-columns", "body":"Image 1 - Two evenly split vertical columns"},
{"title":"Two (or more) vertical columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-profile-with-advanced-layouts.html#two--or-more--vertical-columns", "body":"Two (or more) horizontal columns could similarly be achieved by defining two (or more) Horizontal Layouts within a Vertical Layout."},
{"title":"Dividing horizontal space unevenly between components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html#dividing-horizontal-space-unevenly-between-components", "body":"Any components that are direct children of a Horizontal layout may be given an :expand -attribute. The value of that attribute is a relative number; horizontal space within the layout is allocated based on the components' relative values of the expand-attribute. E.g. in the example case, the small field receives 0.5 \/ (0.5 + 1.0 + 2.0) = 1\/7 of the horizontal space."},
{"title":"Dividing horizontal space unevenly between components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-profile-with-advanced-layouts.html#dividing-horizontal-space-unevenly-between-components", "body":"Because we defined our layouts to expand to the full space available with the size-full -tag, our layout and all the components within it grows and shrinks along with the size of the window within which the profile is shown."},
{"title":"Dividing horizontal space unevenly between components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-profile-with-advanced-layouts.html#dividing-horizontal-space-unevenly-between-components", "body":"Image 2 - Defining an expand ratio for components within a Horizontal layout"},
{"title":"Content that wraps to match available space", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html#content-that-wraps-to-match-available-space", "body":"If you want to keep placing components next to each other as long as they fit, then overflow the next component to the beginning of the next row, you can achieve this with a CSS Layout."},
{"title":"Content that wraps to match available space", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"set-up-a-profile-with-advanced-layouts.html#content-that-wraps-to-match-available-space", "body":"Image 3 - Overflowing checkboxes with the help of CSS Layout"},
{"title":"Content that wraps to match available space", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"set-up-a-profile-with-advanced-layouts.html#content-that-wraps-to-match-available-space", "body":"With a wide screen, all the checkboxes might fit on a single line. With a tiny screen, each checkbox would have its own row."},
{"title":"Content that wraps to match available space", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"set-up-a-profile-with-advanced-layouts.html#content-that-wraps-to-match-available-space", "body":"Note, that you can also use CSS Layout if you want to define your components' layout through CSS instead of relying on Vaadin’s built-in layouts components. This sample shows how you can do that, as well: the CSS layout contains a Label-component, within which we enter a <style>-block which contains a bit of CSS."},
{"title":"Content that wraps to match available space", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"set-up-a-profile-with-advanced-layouts.html#content-that-wraps-to-match-available-space", "body":"Note, that because we defined our CSS within the CSS Layout -tab, it will only have an effect as long as we keep that tab open. If we wanted to define styles that affect the other tabs as well, we could do that by placing the <style>-label under the outermost vertical layout instead."},
{"title":"Content that wraps to match available space", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"set-up-a-profile-with-advanced-layouts.html#content-that-wraps-to-match-available-space", "body":"You can enter any HTML you wish within a Label-component, including <style>-tags. The “Left column” and “Right column” headings were done with a Label containing <h2>-tags."},
{"title":"Fixed-width vs resizable components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"set-up-a-profile-with-advanced-layouts.html#fixed-width-vs-resizable-components", "body":"The components on the first and second tabs all dynamically resize depending on the size of the window, because we have an unbroken chain of size-full tags from the root layout, through the intermediate layouts all the way down to the components themselves. The components on the third tab, on the other hand, have no specified width (aside from the last checkbox). That means the components will take up as much space as their content requires - no more, no less. These components will not shrink or grow with the window. Finally, the last component has a fixed size of 60px; this sets the component’s width explicitly to 60px regardless of that component’s content. A component with a fixed width will also not shrink or grow."},
{"title":"Analytics columns", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"custom-analytics-columns---concepts.html", "body":"Analytics columns"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"custom-analytics-columns---concepts.html#overview-74", "body":"Custom analytics columns are a powerful way to calculate and show custom values in Analytics+."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"custom-analytics-columns---concepts.html#overview-74", "body":"Showing and calculating custom values in Analytics+ is possible by creating an \"Analytics+ Column Definition\". Several solution areas apply to the column definitions, for example:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"custom-analytics-columns---concepts.html#overview-74", "body":"Present a Security Key Figure value in Analytics+. These need to be specifically added as a custom column and defined \"Based on a security key figure\"."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"custom-analytics-columns---concepts.html#overview-74", "body":"Present a calculated column which itself is a sum, multiplication or division of fields (columns) available in Analytics+, by defining a column \"Based on a formula\"."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"custom-analytics-columns---concepts.html#overview-74", "body":"Present a Security field as a separate Analytics+ column, by defining a column \"Based on a formula\"."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"custom-analytics-columns---concepts.html#overview-74", "body":"Present an existing Analytics field with a specific formatting or aggregation options."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"custom-analytics-columns---concepts.html#overview-74", "body":"Depending on the column definition, these will show on the position level and aggregated to higher levels if defined accordingly."},
{"title":"Features", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"custom-analytics-columns---concepts.html#features", "body":"Configured column definitions will show as any other column in Analytics+ tables in FA Front and FA Back, with below differences:"},
{"title":"Features", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"custom-analytics-columns---concepts.html#features", "body":"Based on a security key figure - these custom columns will not have different selectable columns for each time period, only for the given period. This is based on the feature that Security Key Figures are shown on a snapshot, where latest figure relative to the end date of the given analysis period is used. If other dates are needed, the all key figures can be accessed by creating a formula instead."},
{"title":"Features", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"custom-analytics-columns---concepts.html#features", "body":"Based on a formula - these custom columns will have time-grouped variations of the corresponding column such as 1M, 3M, 6M, 12M and YTD in addition to the one for the selected period."},
{"title":"Add a column based on formula", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html", "body":"Add a column based on formula"},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#configuration-75", "body":"Setup of Analytics column definitions is done in FA Back under Preference → Content and translations → Analytics+ columns."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"To add a new column definition, click Add new column. A selection of how to define the column is presented: Based on security key figure, or Based on a formula. Select Based on a formula."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"Choose a unique analytics column Code. After the column definition is saved, this is not possible to change. Only non-existing codes are allowed when adding a new column."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"Choose column Name."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"Define the Formula. This is a free form groovy script which will be compiled at save time, and run directly at run time of analysis. Several prefixes are available for data binding:"},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"\"analytics.\" gives all standard Analytics+ columns available on group or position level. By specifying the prefix followed by the column code (a dropdown is presented) data for the corresponding column will be loaded at runtime and available for formula calculation. An example is to simply sum two available columns as seen in e.g. Analytics+ tables, since these are shown after analysis is aggregated."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"\"security.\" Security fields are available by specifying this prefix followed by the corresponding field code. Note that not all Security fields are bound into Analytics+."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"\"data\" contains a map of date and daily indexed return values which the whole analytics calculation is based on. This will be available for any position or group level, on each day in the analysis period. A helper suggestion binding is added for the prefix \"ird.\" which can help when creating an iterator through the series"},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#adding-new-column-definition-75", "body":"NOTE. Any valid Groovy or Java code snipped is allowed. If you define an incorrect formula, you will be notified at the time of saving and prompted for correction. The anticipated return type of the formula is used to define the default value type of the column."},
{"title":"Creating Formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#creating-formulas", "body":"The formula window allows you to write Groovy and\/or Java code as a script, which will then be pre-compiled and run at runtime in the Analytics+ Engine."},
{"title":"Accessing groupped analytics object - “analytics”", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#accessing-groupped-analytics-object----analytics-", "body":"The main analysis object (GrouppedAnalyticsTimePeriodDTO) is available as “analytics.” in the context sensitivity and will give you a dropdown of available class fields on the object:"},
{"title":"Retrieving holding period dates", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#retrieving-holding-period-dates", "body":"Start and end dates are available on the \"analytics\" object in the custom formula window. Referencing analytics.startDate and analytics.endDate will give you the start\/end date of the relevant investment period for a given position that has been analyzed. This will not necessarily be the selected period, as it will differ if a position started after the start date of your selection and vice versa for end date. This period is also what is used when looking at annualized figures which should suit many applicable purposes for analysis."},
{"title":"Retrieving holding period dates", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#retrieving-holding-period-dates", "body":"For example the simple formula"},
{"title":"Retrieving holding period dates", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#retrieving-holding-period-dates", "body":"analytics.startDate"},
{"title":"Retrieving holding period dates", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#retrieving-holding-period-dates", "body":"will give you the start date but not earlier than the positions\/groups start date. Here it is recommended to override the format with e.g. \"yyyy-MM-dd\" if it is showed in FA Back Analytics UI."},
{"title":"Calculating investment period", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#calculating-investment-period", "body":"Using the holding period dates, the investment period t in terms of years can also be calculated, by for example"},
{"title":"Calculating investment period", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#calculating-investment-period", "body":"import java.time.LocalDate;\nimport java.time.temporal.ChronoUnit;\n\ndouble investmentPeriod = 0.0d;\ndouble daysInYear = 365.0d;\n\n\/\/Start\/End by default position-based\nLocalDate startDate = analytics.startDate\nLocalDate endDate = analytics.endDate\n\nif(startDate && endDate)\n  investmentPeriod = ChronoUnit.DAYS.between(startDate, endDate) \/ daysInYear\n\nreturn investmentPeriod\n"},
{"title":"Accessing security information - “security”", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#accessing-security-information----security-", "body":"If any security (AnalyticsSecurityDTO) is available on the corresponding analysis level, it can be accessed by “security.” which in a similar way will give you a dropdown of available security fields:"},
{"title":"Accessing underlying indexed return data - “data”", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#accessing-underlying-indexed-return-data----data-", "body":"The third type of data which is accessible in for the formula is the underlying daily time series of indexed return data. This is available as a map called “data” (more precisely NavigableMap<LocalDate, IndexedReturnDataDTO>). The data itself is not linked to any code-completion but there is a mapping for the IndexedReturnDataDTO which can be accessed by naming a variable “ird”, as per below:"},
{"title":"Accessing underlying indexed return data - “data”", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#accessing-underlying-indexed-return-data----data-", "body":"This function should be used with caution, but can provide the user with an even greater set of possibilities in terms of what values to calculates as a custom column. It is not recommended to create too many formulas with this approach since it will require unnecessary iterations. If you need to calculate several values this way, it might be worth investigating if other values on the group level can be used instead - or simply calculate several variables and return the value as a string (for example json string) to be used in e.g. an API."},
{"title":"Helper for accessing calculated custom column values", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#helper-for-accessing-calculated-custom-column-values", "body":"If you want to access key figures on the security object, helper suggestions are available if you retrieve and define the key figure values as an object named “customColumnValue” and ending with a “.”"},
{"title":"Helper for accessing calculated custom column values", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#helper-for-accessing-calculated-custom-column-values", "body":"Please note that values on the CustomColumnValue object needs to be accessed by the corresponding getter, for example “customColumnValue.getBooleanValue()” and that this variable is not directly bound to any data. It is just a helper variable which allows you to work with calculated values more easily."},
{"title":"Available utilities to help developing formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#available-utilities-to-help-developing-formulas", "body":"Available utilities to help developing formulas"},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"AnalyticsUtil contains a set of static methods that helps converting the underlying data into an appropriate format for the formula. In order to use the util class, its needs to be imported within the formula:"},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"import com.fasolutions.data.analytics.AnalyticsUtil"},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"The AnalyticsUtil contains the following methods"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"SecPerformance is a helper class from fa-commons\/math project. In order to use that in your formula, you first need to import it and then initialize it with data from your underlying data set."},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"SecPerformance has several constructors to initialize it with different types of datasets:"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Initialize without benchmark and with fixed risk free rate"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"SecPerformance(double[] secYields, double rfYield, int period, boolean reqAllData)"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Initialize without benchmark and with variable risk free rate"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"SecPerformance(double[] secYields, double[] rfYields, int period, boolean reqAllData)"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Initialize with benchmark and with fixed risk free rate"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"SecPerformance(double[] secYields, double[] rfYields, int period, boolean reqAllData)"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Initialize with benchmark and with variable risk free rate"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"SecPerformance(double[] secYields, double[] bmYields, double[] rfYields, int period, boolean reqAllData)"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"period = Number of datapoints required for the analysis"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"reqAllData = true\/false: true = if given dataset has less than the required number of datapoints, SecPerformance is initialized without any data. false = SecPerformance is initialized with given dataset."},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"If you want to analyze the data no matter how many datapoints it has, given the length of the dataset as period and reqAllData as false."},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Example of constructing the SecPerformance without benchmark and with fixed risk free rate:"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"import com.fasolutions.math.var.SecPerformance\nimport com.fasolutions.data.analytics.AnalyticsUtil\n\ndef pfYields = AnalyticsUtil.doubleArray(data,\"indexedValueChange\") \/\/ Note these are logarithmic change values\ndef riskFreeRate = 0.01 \/\/ Risk free rate is fixed 1%\n\nSecPerformance secPerformance = new SecPerformance(pfYields,riskFreeRates,pfYields.length,false);\nsecPerformance.set_noBenchmark(0.0d); \/\/ If no benchmark, return 0.0 instead of NaN"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Example of constructing the SecPerformance with benchmark and with fixed risk free rate:"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"import com.fasolutions.math.var.SecPerformance\nimport com.fasolutions.data.analytics.AnalyticsUtil\n\ndef pfYields = AnalyticsUtil.doubleArray(data,\"indexedValueChange\") \/\/ Note these are logarithmic change values\ndef bmYields = AnalyticsUtil.doubleArray(data,\"benchmarkIndexedValueChange\") \/\/ Note these are logarithmic change values\ndef riskFreeRate = 0.01 \/\/ Risk free rate is fixed 1%\n\nSecPerformance secPerformance = new SecPerformance(pfYields,bmYields,riskFreeRates,pfYields.length,false);\nsecPerformance.set_noBenchmark(0.0d); \/\/ If no benchmark, return 0.0 instead of NaN"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Note on the parameters:"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"boolean retBm = true, returns statistics for benchmark instrument"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"boolean retBm = false, returns statistics for the security"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"boolean isLog = true, returns statistics in logarithmic terms"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":22, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"boolean isLog = false, returns statistics in percents"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":23, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"int ext = the parameter determines in terms of which period (daily, annualized etc.) the statistics are return. Example: If the data consists of daily returns and the number of days per year is 365, then parameter value ext = 1 returns daily statistics and ext = 365 returns annualized statistics."},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":24, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"Confidence levels (in alphaInterval, alphaClass, betaInterval and betaClass) are two-tailed."},
{"title":"Formula validation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#formula-validation", "body":"Once you are done with your formula, it will compile at time of Saving the column definition. At the same time, a check will be done on the validity of your formula code - so don’t worry about making mistakes in your formula, the system will most likely tell you if you did! If for some reason the formula cannot be compiled, a popup will show and present you with an error message corresponding to the likely reason it failed:"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample-formulas.html", "body":"Name - descriptive name."},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample-formulas.html", "body":"Category - general category as to which the number relates to, for example Performance, Risk, Basic."},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"sample-formulas.html", "body":"Description - short description of what the result is saying and its use-case."},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"sample-formulas.html", "body":"Formula - the full code of the working formula."},
{"title":"Add a column based on a key figure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html", "body":"Add a column based on a key figure"},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#configuration-77", "body":"Setup of Analytics column definitions is done in FA Back under Preference → Content and translations → Analytics+ columns."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#adding-new-column-definition-77", "body":"To add a new column definition, click Add new column. A selection of how to define the column is presented: Based on security key figure, or Based on a formula. Select Based on security key figure."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#adding-new-column-definition-77", "body":"Choose a unique analytics column Code. After the column definition is saved, this is not possible to change. Only non-existing codes are allowed when adding a new column."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#adding-new-column-definition-77", "body":"Choose column Name."},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#adding-new-column-definition-77", "body":"Select the coupled Key Figure from the list of Security Key Figure names. If a new Key Figure needs to be defined, navigate to Preference → Content and translations → Key figure definitions"},
{"title":"Adding new column definition", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#adding-new-column-definition-77", "body":"Once these three steps are completed, you should be up and running with your security key figure in Analytics+ and it will be available as any other field."},
{"title":"Add aggregation and formatting to an analytics column", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html", "body":"Add aggregation and formatting to an analytics column"},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#configuration-78", "body":"Setup of Analytics column definitions is done in FA Back under Preference → content and translations → Analytics+ columns."},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#configuration-78", "body":"The options for aggregation and overriding formatting will, if anything other than the default values are chosen, present new fields on the screen."},
{"title":"Defining group level aggregation and how to aggregate sub-levels", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#defining-group-level-aggregation-and-how-to-aggregate-sub-levels", "body":"Select aggregationtype which will define how sub-levels are aggregated to parent levels."},
{"title":"Defining group level aggregation and how to aggregate sub-levels", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#defining-group-level-aggregation-and-how-to-aggregate-sub-levels", "body":"If aggregation type is specified in the previous step, you can select how to aggregate children without a value"},
{"title":"Defining group level aggregation and how to aggregate sub-levels", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#defining-group-level-aggregation-and-how-to-aggregate-sub-levels", "body":"It will also allow you to define how aggregated numbers on group level are rounded, which is useful for whole number values and categorized key figures"},
{"title":"Adding custom formatting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#adding-custom-formatting", "body":"Finally, there is an option to override the formatting of the column in the field Do you want to override formatting? The usage would typically be for Date formatting, Decimal rounding and percentage formatting."},
{"title":"Adding custom formatting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#adding-custom-formatting", "body":"If you want to manually override the format of the column select Yes, override format in the dropdown and information about the column as well as formatting options will be presented."},
{"title":"Integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"integrations-and-api-s.html", "body":"Integrations are a key feature of the FA platform and essential for businesses looking to streamline their operations and improve efficiency. The FA platform currently provides two powerful integration tools, Apache Camel and GraphQL, that enable businesses to manipulate data from FA Back or route data from and to the FA platform."},
{"title":"Integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"integrations-and-api-s.html", "body":"Apache Camel is an open-source integration framework that provides routing and mediation capabilities for the FA platform. It allows you to integrate the FA platform with other systems and applications via files and message transfers. With Camel, businesses can create complex integration flows with minimal coding and configuration to connect the FA platform with other systems. To learn more about routing with Camel on FA platform, see File integrations section."},
{"title":"Integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"integrations-and-api-s.html", "body":"GraphQL, an alternative to REST API, is a query language and runtime for APIs, and it is designed for flexible and efficient data fetching and editing. The FA platform's GraphQL implementation allows you to manipulate data from the FA platform using a simple and intuitive query language. This makes it easy to retrieve the data that you need while reducing the number of API calls and improving performance. To learn how to use GraphQL API in the FA platform, see API integrations section."},
{"title":"API integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"api-integrations.html", "body":"GraphiQL is a query tool available in FA Developer App. The tool can be used to define queries and mutations. It features a GraphQL editor, as well as documentation for the available GraphQL endpoints."},
{"title":"API integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"api-integrations.html", "body":"GraphQL API provides many customization opportunities, for example:"},
{"title":"API integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"api-integrations.html", "body":"Building an integration between FA and an external application. A good example of this would be an integration between FA and your version of FA Client Portal."},
{"title":"API integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"api-integrations.html", "body":"Building a custom JSReport (for details about custom reports, see the Reporting section). JSReports use GraphQL API to fetch the report data from FA Back."},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"The GraphQL API view provides you access to the GraphiQL client to run queries and mutations to the FA GraphQL API."},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"The menu on the left shows the GraphQL endpoints you can access:"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"Portfolio management (\/graphql)"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"Fund management (\/services\/fund\/graphql)"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"Forms and workflows (\/flowable\/graphql) (see Workflows for details about forms and workflows)"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"Type in the query and get the response on the right. Use the buttons at the top to toggle the display of panes:"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"Explorer"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"The list of objects and fields to choose from for constructing a query."},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"History"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"The queries you executed."},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"Docs"},
{"title":"GraphQL API view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"api-integrations.html#graphql-api-view-in-fa-developer-app", "body":"GraphQL schema descriptions."},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"api-integrations.html#idm46709274239488", "body":"Related links"},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"api-integrations.html#idm46709274239488", "body":"Introduction to GraphQL on the GraphQL website"},
{"title":"Authentication and access", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"authentication-and-access.html", "body":"To use the GraphQL endpoint, you need an access token for all API requests: "},
{"title":"Authentication and access", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"authentication-and-access.html", "body":"To get an access token and verify your authentication, follow the steps in Authenticate in GraphQL to get an access token. "},
{"title":"Authentication and access", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"authentication-and-access.html", "body":"To use the access token, see the example in Make a GraphQL request using the access token. "},
{"title":"Authentication and access", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"authentication-and-access.html", "body":"The GraphQL API takes into account the permissions of the user. If you need to restrict access to the client data via GraphQL API, see Apply limited visibility in GraphQL."},
{"title":"Authentication and access", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"authentication-and-access.html", "body":"If you get a CORS (Cross-Origin Resource Sharing) error when using FA APIs, contact FA and tell us the domain from which you are making the request. FA will then add your domain to the valid web origins list of your FA environment."},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"Before sending requests, you need to authenticate in FA via OpenID protocol with your username and password to receive an access token. Then, use the access token in all GraphQL API requests. Once the token expires, request a new one."},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"Use the following command to verify your GraphQL authentication:"},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"curl -d \"client_id=external-api\" -d \"username=<username>\" -d \"password=<password>\" -d \"grant_type=password\" \"https:\/\/<instance>.fasolutions.com\/auth\/realms\/fa\/protocol\/openid-connect\/token\""},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"For system-to-system integration, you should use your technical user to authenticate."},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"Use the following values in the request parameters:"},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"You will get a JSON response that contains an access token if the authentication is successful. By default, the token is configured to be valid for 1 minute."},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"{  \n\t\"access_token\":\"eyJhbGciOiJSUzI1NiIs...\",\n\t\"expires_in\":60,\n\t\"refresh_expires_in\":1800,\n\t\"refresh_token\":\"eyJhbGciOiJIUzI1NiIsI...”,\n\t\"token_type\":\"bearer\",\n\t\"not-before-policy\":0,\n\t\"session_state\":\"270c5fdb...\",\n\t\"scope\":\"email profile\"\n}"},
{"title":"Make a GraphQL request using the access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"authentication-and-access.html#make-a-graphql-request-using-the-access-token", "body":"You can use your access token, for example, with a GraphQL API call to fetch a portfolio name:"},
{"title":"Make a GraphQL request using the access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"authentication-and-access.html#make-a-graphql-request-using-the-access-token", "body":"Choose a portfolio in FA Back that you want to fetch through GraphQL API and note down its ID. You can find the ID in the last part of the portfolio URL, for example:"},
{"title":"Make a GraphQL request using the access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"authentication-and-access.html#make-a-graphql-request-using-the-access-token", "body":"https:\/\/<instance>.fasolutions.com\/app\/main\/Overview\/Overview\/portfolio-<portfolio_ID>"},
{"title":"Make a GraphQL request using the access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"authentication-and-access.html#make-a-graphql-request-using-the-access-token", "body":"Query the portfolio using cURL. Apply the previously fetched parameters to the following query:"},
{"title":"Make a GraphQL request using the access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"authentication-and-access.html#make-a-graphql-request-using-the-access-token", "body":"curl -X POST -i -H \"Content-Type: application\/json\" --header \"Authorization: bearer <access_token>\" -d \"{\\\"query\\\": \\\"{ portfolio(id:<portfolio_ID>) { name } }\\\"}\" \"https:\/\/<instance>.fasolutions.com\/graphql\""},
{"title":"Make a GraphQL request using the access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"authentication-and-access.html#make-a-graphql-request-using-the-access-token", "body":"You will get the portfolio name in the response, for example:"},
{"title":"Make a GraphQL request using the access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"authentication-and-access.html#make-a-graphql-request-using-the-access-token", "body":"{  \n\t\"data\": \n\t{    \n\t\t\"portfolio\": \n\t\t{      \n\t\t\t\"name\": \"Investment portfolio\"    \n\t\t}  \n\t}\n}"},
{"title":"Apply limited visibility in GraphQL", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"authentication-and-access.html#apply-limited-visibility-in-graphql", "body":"If you need to limit access to the client and portfolio data, follow the steps:"},
{"title":"Apply limited visibility in GraphQL", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"authentication-and-access.html#apply-limited-visibility-in-graphql", "body":"Set up the limited visibility feature for the user in FA Back. For instructions, see Set up limited visibility for one user and Set up limited visibility for many users in FA Admin Guide."},
{"title":"Apply limited visibility in GraphQL", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"authentication-and-access.html#apply-limited-visibility-in-graphql", "body":"Authenticate the user's GraphQL requests with user credentials."},
{"title":"Apply limited visibility in GraphQL", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"authentication-and-access.html#apply-limited-visibility-in-graphql", "body":"Verify the user's access restriction by requesting all active contacts. The response should contain only the contacts the user has access to:"},
{"title":"Apply limited visibility in GraphQL", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"authentication-and-access.html#apply-limited-visibility-in-graphql", "body":"curl -X POST -i -H \"Content-Type: application\/json\" --header \"Authorization: bearer <access_token>\" -d \"{\\\"query\\\": \\\"{ contacts(status:\\\\\\\"A\\\\\\\") { name } }\\\"}\" \"https:\/\/<instance>.fasolutions.com\/graphql\""},
{"title":"Contact and its portfolios", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---searching-a-client-and-its-portfolios.html", "body":"Contact and its portfolios"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---searching-a-client-and-its-portfolios.html#query-84", "body":"{\n contacts(contactId:\"17509\") {\n id\n name\n portfolios {\n id\n name\n }\n }\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---searching-a-client-and-its-portfolios.html#result-84", "body":"{\n \"data\": {\n \"contacts\": [\n {\n \"id\": 322139,\n \"name\": \"Aaron Chan\",\n \"portfolios\": [\n {\n \"id\": 338315,\n \"name\": \"Insurance portfolio\"\n },\n {\n \"id\": 340224,\n \"name\": \"Investment portfolio\"\n },\n {\n \"id\": 351753,\n \"name\": \"Investment portfolio\"\n }\n ]\n }\n ]\n }\n}"},
{"title":"Portfolio details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-portfolio-details.html", "body":"This query can be used in a JSReport based report to be run against portfolios."},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-portfolio-details.html#query-85", "body":" query {\n portfoliosByIds(ids: [1029,1093] ) {\n id\n name\n analytics(\n parameters: {\n paramsSet: {\n key:\"A\"\n timePeriodCodes:[\"MONTHS-1\",\"MONTHS-2\"]\n grouppedByProperties: [PORTFOLIO]\n }\n } \n ) {\n grouppedAnalytics(key:\"A\") {\n M1:analysis(timePeriodCode:\"MONTHS-1\") {\n twr \n }\n M2:analysis(timePeriodCode:\"MONTHS-2\") {\n twr \n }\n }\n }\n }\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-portfolio-details.html#result-85", "body":"{\n \"data\": {\n \"portfoliosByIds\": [\n {\n \"id\": 1092,\n \"name\": \"Investment portfolio\",\n \"analytics\": {\n \"groups\": {\n \"M1\": {\n \"twr\": -0.9483318154666678\n },\n \"M2\": {\n \"twr\": -0.9512793797213104\n }\n }\n }\n },\n {\n \"id\": 1093,\n \"name\": \"Model 100+\",\n \"analytics\": {\n \"groups\": {\n \"M1\": {\n \"twr\": 0.03773488511663037\n },\n \"M2\": {\n \"twr\": -0.004927623593515507\n }\n }\n }\n }\n ]\n }\n}"},
{"title":"Portfolio positions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---positions-of-a-selected-portfolio.html", "body":"Portfolio positions"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---positions-of-a-selected-portfolio.html#query-86", "body":"{\n portfolio(id:340224) {\n name\n type {\n code\n name\n }\n portfolioReport {\n totalMarketValueOfThePortfolio: marketValue\n securityPositions: portfolioReportItems {\n security {\n securityCode\n name\n isinCode\n }\n units:amount\n purchaseTradeAmount\n marketTradeAmount\n valueChangeAbsolute\n }\n }\n }\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---positions-of-a-selected-portfolio.html#result-86", "body":"{\n \"data\": {\n \"portfolio\": {\n \"name\": \"Investment portfolio\",\n \"type\": {\n \"code\": \"INV\",\n \"name\": \"Investment Portfolio\"\n },\n \"portfolioReport\": {\n \"totalMarketValueOfThePortfolio\": 31673044.51,\n \"securityPositions\": [\n {\n \"security\": {\n \"securityCode\": \"VINCIT.HE\",\n \"name\": \"Vincit Oyj\",\n \"isinCode\": \"FI4000185533\"\n },\n \"units\": 155,\n \"purchaseTradeAmount\": 11185.49,\n \"marketTradeAmount\": 9020.73,\n \"valueChangeAbsolute\": -2164.76\n },\n {\n \"security\": {\n \"securityCode\": \"CORE-PREF.ST\",\n \"name\": \"Corem Property Group AB (publ)\",\n \"isinCode\": \"\"\n },\n \"units\": 2913,\n \"purchaseTradeAmount\": 473344.2,\n \"marketTradeAmount\": 961290,\n \"valueChangeAbsolute\": 487945.8\n },\n {\n \"security\": {\n \"securityCode\": \"OUT1V.HE\",\n \"name\": \"Outokumpu Oyj\",\n \"isinCode\": \"FI0009002422\"\n },\n \"units\": 666,\n \"purchaseTradeAmount\": 1898.1,\n \"marketTradeAmount\": 15115.03,\n \"valueChangeAbsolute\": 13216.93\n },\n {\n \"security\": {\n \"securityCode\": \"PLED.ST\",\n \"name\": \"PledPharma AB\",\n \"isinCode\": \"SE0003815604\"\n },\n \"units\": 1801,\n \"purchaseTradeAmount\": 57746,\n \"marketTradeAmount\": 9257.14,\n \"valueChangeAbsolute\": -48488.86\n }\n ]\n }\n }\n }\n}"},
{"title":"Portfolio transactions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---transactions-on-selected-portfolio-s-.html", "body":"This is suitable to be used in a report that is run against portfolio(s)."},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---transactions-on-selected-portfolio-s-.html#query-87", "body":"query Transactions($ids: [Long], $startDate: String, $endDate: String) {\n portfoliosByIds( ids: $ids ) {\n transactions(status:\"OK\", startDate: $startDate, endDate: $endDate) {\n portfolio:parentPortfolio {\n name\n shortName\n type {\n code\n name\n }\n primaryContact {\n name\n contactId\n }\n currency {\n code:securityCode\n name\n }\n } \n type {\n code: typeCode\n name: typeName\n }\n transactionDate\n settlementDate\n paymentDate\n tradeTime\n extId\n security {\n name\n code:securityCode\n isinCode\n type {\n name\n code\n }\n }\n currency {\n name\n code:securityCode\n }\n account {\n name\n number\n }\n quantity: amount\n unitPrice:unitPriceView\n cost\n cost2\n tax\n tax2\n totalCost\n tradeAmount\n cashFlow\n cashFlowInAccountCurrency\n cashFlowInPortfolioCurrency\n extInfo\n }\n }\n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---transactions-on-selected-portfolio-s-.html#variables-87", "body":"{\n \"ids\": [1092],\n \"startDate\": \"2020-01-01\",\n \"endDate\": \"2020-11-01\"\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---transactions-on-selected-portfolio-s-.html#result-87", "body":"{\n \"data\": {\n \"portfoliosByIds\": [\n {\n \"transactions\": [\n {\n \"portfolio\": {\n \"name\": \"Investment portfolio\",\n \"shortName\": \"123\",\n \"type\": {\n \"code\": \"INV\",\n \"name\": \"Investment portfolio\"\n },\n \"primaryContact\": {\n \"name\": \"Colin Customer\",\n \"contactId\": \"010180-123B\"\n },\n \"currency\": {\n \"code\": \"EUR\",\n \"name\": \"EUR\"\n }\n },\n \"type\": {\n \"code\": \"B\",\n \"name\": \"Buy\"\n },\n \"transactionDate\": \"2020-10-15\",\n \"settlementDate\": \"2020-10-15\",\n \"paymentDate\": null,\n \"tradeTime\": \"00:00:00\",\n \"extId\": \"636\",\n \"security\": {\n \"name\": \"Ericsson AB B\",\n \"code\": \"ERIC B\",\n \"isinCode\": \"SE0000108656\",\n \"type\": {\n \"name\": \"Stock\",\n \"code\": \"STOCK\"\n }\n },\n \"currency\": {\n \"name\": \"SEK\",\n \"code\": \"SEK\"\n },\n \"account\": null,\n \"quantity\": 10776665621,\n \"unitPrice\": 98,\n \"cost\": 0,\n \"cost2\": 0,\n \"tax\": 0,\n \"tax2\": 0,\n \"totalCost\": 0,\n \"tradeAmount\": 1056113230858,\n \"cashFlow\": 0,\n \"cashFlowInAccountCurrency\": 0,\n \"cashFlowInPortfolioCurrency\": 0,\n \"extInfo\": \"Settlement instructions to pay ASAP\"\n }\n ]\n }\n ]\n }\n}"},
{"title":"Security details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-security-details.html", "body":"Security details"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-security-details.html#idm46709274088032", "body":"Query"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---listing-security-details.html#idm46709274088032", "body":"query securityDetails ($startDate:String, $isinCode:String) {\n securities(isinCode: $isinCode) {\n securityCode\n id\n name\n isinCode\n currency {\n securityCode\n }\n exchange {\n code\n }\n latestMarketData{\n price:close\n date:obsDate\n }\n marketDataHistory(startDate: $startDate){\n price: close\n date: obsDate\n }\n }\n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-security-details.html#idm46709274087856", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---listing-security-details.html#idm46709274087856", "body":"{\n \"startDate\": \"2021-11-10\",\n \"isinCode\": \"IE00B4BNMY34\"\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-security-details.html#idm46709274085760", "body":"Result"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---listing-security-details.html#idm46709274085760", "body":"{\n \"data\": {\n \"securities\": [\n {\n \"securityCode\": \"ACN US\",\n \"id\": 566,\n \"name\": \"Accenture PLC\",\n \"isinCode\": \"IE00B4BNMY34\",\n \"currency\": {\n \"securityCode\": \"USD\"\n },\n \"exchange\": {\n \"code\": \"XNYS\"\n },\n \"latestMarketData\": {\n \"price\": 366.21,\n \"date\": \"2021-11-11\"\n },\n \"marketDataHistory\": [\n {\n \"price\": 364.74,\n \"date\": \"2021-11-10\"\n },\n {\n \"price\": 366.21,\n \"date\": \"2021-11-11\"\n }\n ]\n }\n ]\n }\n}"},
{"title":"Transaction details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-details-of-transactions.html", "body":"This query is suitable for a JSReport based report that is run against transactions."},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-details-of-transactions.html#query-89", "body":"query {\n  transactionsByIds(ids: [1118879]) {\n    id\n    typeName\n    transactionDate\n    settlementDate\n    security {\n      name\n      isinCode\n      securityCode\n      type {\n        baseType\n        code\n        name\n      }\n    }\n    marketPlaceCode\n    marketPlace {\n      name\n    }\n    settlementPlaceCode\n    settlementPlace {\n      name\n    }\n    quantity:amount\n    tradeAmount\n    unitPriceView\n    currencyCode\n    extInfo\n  }\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---listing-details-of-transactions.html#result-89", "body":"{\n  \"data\": {\n    \"transactionsByIds\": [\n      {\n        \"id\": 1118879,\n        \"typeName\": \"Buy\",\n        \"transactionDate\": \"2020-10-15\",\n        \"settlementDate\": \"2020-10-15\",\n        \"security\": {\n          \"name\": \"Ericsson AB B\",\n          \"isinCode\": \"SE0000108656\",\n          \"securityCode\": \"ERIC B\",\n          \"type\": {\n            \"baseType\": \"STOCK\",\n            \"code\": \"STOCK\",\n            \"name\": \"Stock\"\n          }\n        },\n        \"marketPlaceCode\": \"ST:17921\",\n        \"marketPlace\": {\n          \"name\": \"Stockholm, Equities\/ETFs\/Indices\"\n        },\n        \"settlementPlaceCode\": \"MGTCBEBEECL\",\n        \"settlementPlace\": {\n          \"name\": \"Euroclear\"\n        },\n        \"quantity\": 10776665621,\n        \"tradeAmount\": 1056113230858,\n        \"unitPriceView\": 98,\n        \"currencyCode\": \"SEK\",\n        \"extInfo\": \"Settlement instructions to pay ASAP\"\n      }\n    ]\n  }\n}"},
{"title":"Import and modify data via mutation API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html", "body":"Import and modify data via mutation API"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"You can import or modify FA data via GraphQL mutation API. When you import an object (for example, a contact or a portfolio), you need to provide all required fields as a parameter. When modifying an object you need to give minimum information that is enough to identify the entity. Imported attributes are updated, the left out attributes keep their previous values."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"To import or modify different object types, use the following endpoints:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"Contacts => importContacts"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"Portfolios => importPortfolios"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"Securities => importSecurities"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"Transactions => importTransactions"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"Trade orders => importTradeOrders"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"Security prices => importPrices"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"You can adjust the import behavior by using importGeneral endpoint and specifying the import parameters as you need. The import parameters are listed below:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"importGeneral:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"rows : list of objects to import (mandatory)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"withRules : boolean whether to run rules when importing (default = false)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"importAsync : boolean whether to use asynchronous importing or not (default = false)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"mode \/ sMode \/ pMode \/ prMode \/ trMode \/ oMode \/ cMode : option to control import behavior for all object types (mode) or specific object type (sMode \/ pMode \/ prMode \/ trMode \/ oMode \/ cMode). Available options are:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"0 - insert and update (default)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"1- insert only"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"2 - update only"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#overview-91", "body":"Each endpoint can be used to import or update one or many objects in one request. The response identifies if the request was successful or if it had errors (specified in the response)."},
{"title":"Define the request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#define-the-request", "body":"To define a request, decide which mutation endpoint to use. Then, define the content as a list in the parameter. The data structure and content correspond to the FA importing syntax (for details, see the Importing section in FA Back reference). Define attributes without a prefix used in FA importing. For example, the prefix for contacts is \"c\" and contact name in FA importing is defined as \"c.name\". However, in the mutation API, the prefix is left out and the attribute is only called name."},
{"title":"Define the request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#define-the-request", "body":"mutation {\n  importContacts(contactList: [\n    {\n      contactId:\"GQL1\",\n      name:\"GraphQL contact\",\n      type:\"1\",\n      taxCountry:\"FI\",\n      juridical:\"PE\",\n      status:\"A\",\n      classification:\"PROF\",\n      identity:\"ID\"\n    }, {\n      ....\n    }, \n      ...\n  ])\n}"},
{"title":"Define the request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#define-the-request", "body":"You can find an example of how to use importGeneral to control whether to run rules in Import data and trigger a business rule."},
{"title":"Interpret the response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#interpret-the-response", "body":"The response structure is similar to the request. The result contains a list of map structures. Each item in the list presents an object that was imported. All attributes including the ones not explicitly used in the request are returned. The attributes are prefixed. For example, contact name is c.name. The success is indicated in the importStatus attribute with the OK value."},
{"title":"Interpret the response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#interpret-the-response", "body":"{\n  \"data\": {\n    \"importContacts\": [\n      {\n        \"c.marketingCommunication\": \"\",\n        \"c.subType\": \"\",\n        \"c.language\": \"\",\n        \"c.type\": \"1\",\n        \"c.taxCountry\": \"FI\",\n        \"c.externalId\": \"\",\n        \"c.memo\": \"\",\n        \"c.country\": \"\",\n        \"c.phone2\": \"\",\n        \"c.phone1\": \"\",\n        \"c.juridical\": \"PE\",\n        \"c.representatives\": \"*** ,\",\n        \"c.fax\": \"\",\n        \"c.email\": \"\",\n        \"c.extContactIdList\": \"\",\n        \"c.name\": \"GraphQL contact\",\n        \"c.status\": \"A\",\n        \"c.profileAttributes\": \"\",\n        \"c.classification3\": \"\",\n        \"c.contactExchanges\": \"\",\n        \"importStatus\": \"OK\",\n        \"c.electronicCommunication\": \"\",\n        \"c.classification2\": \"\",\n        \"c.transactionExtIdLevel\": \"1\",\n        \"c.address1\": \"\",\n        \"c.address2\": \"\",\n        \"c.tags\": \"\",\n        \"c.nationality\": \"\",\n        \"c.city\": \"\",\n        \"c.classification\": \"PROF\",\n        \"c.contactId\": \"GQL1\",\n        \"c.identity\": \"ID\",\n        \"c.zipCode\": \"\"\n      },...\n  ]\n}\n    "},
{"title":"Interpret the response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#interpret-the-response", "body":"If required attributes are missing or the code is incorrect, the importStatus attribute has the ERROR value. Each attribute with an error is marked with ERROR (ERROR:[ImportError.required] in case the required value is missing)."},
{"title":"Interpret the response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-and-modify-data-with-graphql-mutation-api.html#interpret-the-response", "body":"{\n  \"data\": {\n    \"importContacts\": [\n      {\n        \"c.marketingCommunication\": \"\",\n        \"c.subType\": \"\",\n        \"c.language\": \"\",\n        \"c.type\": \"1\",\n        \"c.externalId\": \"\",\n        \"c.taxCountry\": \"ERROR:[ImportError.required]\",\n        \"c.memo\": \"\",\n        \"c.country\": \"\",\n        \"c.phone2\": \"\",\n        \"c.phone1\": \"\",\n        \"c.juridical\": \"ERROR:[ImportError.required]\",\n        \"c.representatives\": \"*** ,\",\n        \"c.fax\": \"\",\n        \"c.email\": \"\",\n        \"c.extContactIdList\": \"\",\n        \"c.name\": \"GraphQL contact\",\n        \"c.status\": \"ERROR:[ImportError.required]\",\n        \"c.profileAttributes\": \"\",\n        \"c.classification3\": \"\",\n        \"c.contactExchanges\": \"\",\n        \"importStatus\": \"ERROR\",\n        \"c.electronicCommunication\": \"\",\n        \"c.classification2\": \"\",\n        \"c.address1\": \"\",\n        \"c.address2\": \"\",\n        \"c.tags\": \"\",\n        \"c.nationality\": \"\",\n        \"c.city\": \"\",\n        \"c.classification\": \"ERROR:[ImportError.required]\",\n        \"c.contactId\": \"GQL2\",\n        \"c.identity\": \"ERROR:[ImportError.required]\",\n        \"c.zipCode\": \"\"\n      }\n    ]\n  }\n}"},
{"title":"Import data and trigger a business rule", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html", "body":"Import data and trigger a business rule"},
{"title":"Query without variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274018432", "body":"Query without variables"},
{"title":"Query without variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274018432", "body":"# Query to import a contact and \n# run rules as defined by Decision Tables\nmutation{\n importGeneral(withRules:true,rows:{\n contacts:[\n {\n contactId: \"testMutation\"\n name: \"Test Contact\"\n type: \"1\"\n juridical: \"PE\"\n status: \"A\"\n taxCountry: \"SE\"\n language: \"SE\"\n classification: \"NPROF\"\n identity: \"PASS\"\n }\n #append more contact objects here\n ]\n #add import of other object types here\n #portfolios:[]\n #transactions:[]\n #securities:[]\n })\n}"},
{"title":"Same query with variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274018304", "body":"Same query with variables"},
{"title":"Same query with variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274018304", "body":"Query"},
{"title":"Same query with variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274018304", "body":"# Query to import something and\n# option to run rules from Decision Tables\nmutation generalImport($withRules: Boolean, $rows:ImportRowsDTOInput){\n importGeneral(withRules:$withRules,rows:$rows)\n}"},
{"title":"Same query with variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274018304", "body":"Variables"},
{"title":"Same query with variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274018304", "body":"{\n \"withRules\":true, \n \"rows\":{\n \"contacts\":[\n {\n \"contactId\": \"testMutation\",\n \"name\": \"Test Contact\",\n \"type\": \"1\",\n \"juridical\": \"PE\",\n \"status\": \"A\",\n \"taxCountry\": \"SE\",\n \"language\": \"SE\",\n \"classification\": \"NPROF\",\n \"identity\": \"PASS\"\n }\n ]\n }\n}"},
{"title":"Response (same for both queries above)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274015984", "body":"Response (same for both queries above)"},
{"title":"Response (same for both queries above)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---mutation--data-import--with-decision-table-rule-trigger.html#idm46709274015984", "body":"{\n \"data\": {\n \"importGeneral\": [\n {\n \"c.marketingCommunication\": \"\",\n \"c.subType\": \"\",\n \"c.language\": \"SE\",\n \"c.type\": \"1\",\n \"c.taxCountry\": \"SE\",\n \"c.externalId\": \"\",\n \"c.memo\": \"\",\n \"c.country\": \"\",\n \"c.phone2\": \"\",\n \"c.phone1\": \"\",\n \"c.juridical\": \"PE\",\n \"c.representatives\": \"*** ,\",\n \"c.fax\": \"\",\n \"c.email\": \"\",\n \"c.extContactIdList\": \"\",\n \"c.name\": \"Test Contact\",\n \"c.status\": \"A\",\n \"c.profileAttributes\": \"\",\n \"c.classification3\": \"\",\n \"c.contactExchanges\": \"\",\n \"importStatus\": \"OK\",\n \"c.electronicCommunication\": \"\",\n \"c.classification2\": \"\",\n \"c.transactionExtIdLevel\": \"1\",\n \"c.address1\": \"\",\n \"c.address2\": \"\",\n \"c.tags\": \"\",\n \"c.nationality\": \"\",\n \"c.city\": \"\",\n \"c.classification\": \"NPROF\",\n \"c.contactId\": \"testMutation\",\n \"c.identity\": \"PASS\",\n \"c.prefix\": \"c\",\n \"c.zipCode\": \"\"\n }\n ]\n }\n}"},
{"title":"Document management via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"document-management-via-api.html", "body":"GraphQL enables you to manage documents related to contacts, portfolios, securities, trade orders, and transactions via API."},
{"title":"Document management via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"document-management-via-api.html", "body":"For example, you can do the following:"},
{"title":"Document management via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"document-management-via-api.html", "body":"List documents and their data"},
{"title":"Document management via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"document-management-via-api.html", "body":"Import, delete or modify documents"},
{"title":"Document management via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"document-management-via-api.html", "body":"Documents are represented with the FileItem objects in GraphQL. For the full list of the object properties, see the documentation tool in the GraphQL API view ."},
{"title":"Get document data via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-document-data-via-api.html", "body":"You can get the document data by querying a context, like a contact or a portfolio, or by querying all documents with a certain tag or name."},
{"title":"Get documents within a context", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-document-data-via-api.html#idm46709273991584", "body":"Get documents within a context"},
{"title":"Get documents within a context", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-document-data-via-api.html#idm46709273991584", "body":"The query below returns document data for a contact and also for its portfolios, transactions, trade orders and linked securities. Replace <contactID> with a contact ID and run the query. "},
{"title":"Get documents within a context", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-document-data-via-api.html#idm46709273991584", "body":"query {\n  contact(id:<contactID>) {\n        name\n    documents {\n      identifier\n      fileName\n      fullPath\n    }\n    portfolios {\n      name\n      documents {\n        identifier\n        fileName\n        fullPath\n      }\n      transactions {\n        security {\n          name\n          documents  {\n            identifier\n            fileName\n            fullPath\n          }\n        }\n        documents {\n          identifier\n          fileName\n          fullPath\n        }\n      }\n      tradeOrders {\n        documents {\n          identifier\n          fileName\n          fullPath\n        }\n      }\n    }\n  }\n}"},
{"title":"Get documents by tag, name, or path", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-document-data-via-api.html#idm46709273990576", "body":"Get documents by tag, name, or path"},
{"title":"Get documents by tag, name, or path", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-document-data-via-api.html#idm46709273990576", "body":"Get documents with a certain tag. In the example below, the response will list all documents with the \"Document signing-Waiting\" tag."},
{"title":"Get documents by tag, name, or path", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-document-data-via-api.html#idm46709273990576", "body":"query {\n  documents(filterTags: [\"Document signing-Waiting\"]) {\n    identifier\n    fileName\n    fullPath\n    data\n    mimeType\n    url\n  }\n}"},
{"title":"Get documents by tag, name, or path", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"get-document-data-via-api.html#idm46709273990576", "body":"Get documents with a certain name. In the example below, the response will list all documents with the Client.txt name."},
{"title":"Get documents by tag, name, or path", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"get-document-data-via-api.html#idm46709273990576", "body":"query {\n  documents(filterText:\"Client.txt\") {\n    identifier\n    fileName\n    fullPath\n    data\n    mimeType\n    url\n  }\n}"},
{"title":"Get documents by tag, name, or path", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"get-document-data-via-api.html#idm46709273990576", "body":"Get data related to the FileName.txt document saved on the contact with ID 3."},
{"title":"Get documents by tag, name, or path", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"get-document-data-via-api.html#idm46709273990576", "body":"query filterDocuments{\n    documents(filterText:\"FileName.txt\", path:\"\/Contacts\/3\/\"){\n    identifier\n    fileName\n    fullPath\n    data\n    tags\n    }\n  }"},
{"title":"Import, delete or modify documents via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import,-delete-or-modify-documents-via-api.html", "body":"GraphQL enables you to:"},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"To import a document to a portfolio, include the following in the query:"},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"Path to the portfolio."},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"Filename."},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"Base64-coded string for the file."},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"mutation {\n  uploadDocument(\n    path:\"\/Portfolios\/10527954\",\n    fileName:\"Test2.pdf\",\n    data:\"VGhpcyBpcyBhIFRlc3QgRmlsZQ\")\n}"},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"To import a document to a specific context, use the query below and change the context depending on what the target is."},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"1 = Contacts"},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"2 = Portfolios"},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"3 = Securities"},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"4 = Transactions"},
{"title":"Import a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"import,-delete-or-modify-documents-via-api.html#import-a-document", "body":"mutation {\n  uploadDocumentInContext(\n    context: \"1\",\n    id: 1234,\n    fileName:\"Test2.pdf\",\n    data:\"VGhpcyBpcyBhIFRlc3QgRmlsZQ\")\n}"},
{"title":"Add and remove document tags", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import,-delete-or-modify-documents-via-api.html#add-and-remove-document-tags", "body":"The query below removes the \"Not approved\" tag from the document with the specified ID. It also adds the \"Approved to\" tag to the same document."},
{"title":"Add and remove document tags", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import,-delete-or-modify-documents-via-api.html#add-and-remove-document-tags", "body":"mutation {\ndocumentTags(identifier:\"439d44d7\",removeTags:\"Not approved\",addTags:\"Approved\")\n}"},
{"title":"Delete a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"import,-delete-or-modify-documents-via-api.html#delete-a-document", "body":"The query below deletes a document with a certain ID."},
{"title":"Delete a document", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"import,-delete-or-modify-documents-via-api.html#delete-a-document", "body":"mutation {\n  deleteDocument(identifier:\"439d44d7\") \n}"},
{"title":"Task management via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"task-management-via-api.html", "body":"Task management via API"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"task-management-via-api.html#idm46709273955392", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"task-management-via-api.html#idm46709273955392", "body":"Tasks in FA allow the user to track processes and workflows:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"task-management-via-api.html#idm46709273955392", "body":"Manual tasks that you can use to record interactions with customers."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"task-management-via-api.html#idm46709273955392", "body":"Process tasks that let you follow automated processes, such as transaction import or reconciliation."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"task-management-via-api.html#idm46709273955392", "body":"You can manage tasks via GraphQL API. The GraphQL API enables you to:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"task-management-via-api.html#idm46709273955392", "body":"Search individual or multiple tasks, see the Get task datasection."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"task-management-via-api.html#idm46709273955392", "body":"Import, modify or delete tasks, see the Import, modify or delete a tasksection."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"task-management-via-api.html#idm46709273955392", "body":"You can find an example of the API's task JSON object in the Task data structuresection."},
{"title":"Task data structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"task-management-via-api.html#task-data-structure", "body":"The task attribute values are dependent on the data that has been entered for a task, the environment's configurations and task type (manual or process). You can find the fields of a task described in the FA Back Reference article Task window. In the GraphQL API tasks are represented with an object TaskData. You can find an example of the TaskData JSON object below:"},
{"title":"Task data structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"task-management-via-api.html#task-data-structure", "body":"\"task\": {\n      \"assignee\": \"example.user\",\n      \"attachments\": [\n        \"Example1.pdf\",\n        \"Example2.pdf\",\n      ],\n      \"category\": null,\n      \"createDate\": \"2022-06-03\",\n      \"description\": \"This is an example task\",\n      \"dueDate\": \"2022-06-03\",\n      \"durationTime\": \"01:30\",\n      \"endTime\": null,\n      \"owner\": \"example.user\",\n      \"priority\": 50,\n      \"processDefinitionId\": null,\n      \"processInstanceId\": null,\n      \"reference\": \"reference123\",\n      \"taskId\": \"745703\",\n      \"title\": \"Example task\",\n      \"type\": \"Meeting\"\n}"},
{"title":"Get task data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"task-management-via-api.html#get-task-data", "body":"You can search tasks by using following functions in the query endpoint:"},
{"title":"Get task data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"task-management-via-api.html#get-task-data", "body":"Individual task: task(taskId)."},
{"title":"Get task data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"task-management-via-api.html#get-task-data", "body":"Multiple tasks: tasks(filter, Type, maxCount)."},
{"title":"Get task data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"task-management-via-api.html#get-task-data", "body":"Search functions return you one or many TaskData objects. The TaskData object has functions for querying task attachments and linked contacts. You can find details of tasks-related functions in the FA Developer App's GraphQL API viewand the schema documentation embedded in it."},
{"title":"Import, modify or delete a task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"task-management-via-api.html#import--modify-or-delete-a-task", "body":"You can create, modify or delete tasks by using following functions in the mutation endpoint:"},
{"title":"Import, modify or delete a task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"task-management-via-api.html#import--modify-or-delete-a-task", "body":"Create a task: saveTask(Task, linkedContactIds)."},
{"title":"Import, modify or delete a task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"task-management-via-api.html#import--modify-or-delete-a-task", "body":"Delete a task: deleteTask(taskId)."},
{"title":"Import, modify or delete a task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"task-management-via-api.html#import--modify-or-delete-a-task", "body":"Add an attachment to a task: addTaskAttachment(name, content, taskId)."},
{"title":"Import, modify or delete a task", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"task-management-via-api.html#import--modify-or-delete-a-task", "body":"Delete an attachment from a task: deleteTaskAttachment(name, taskId)."},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"task-management-via-api.html#related-links-96", "body":"Task managementin FA Back Reference"},
{"title":"Reports via API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"reports-via-api.html", "body":"You can request FA to generate a JSReport and return the generated report document via GraphQL. This enables you to provide your custom JSReports in your own applications, for example in your customized FA Client Portal."},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"reports-via-api.html#idm46709273922896", "body":"Sample requests"},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"reports-via-api.html#idm46709273922896", "body":"You can find the full schema documentation for report generation in the FA Developer app GraphQL API view. The example requests for some of FA's sample JSReports are listed below."},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"reports-via-api.html#idm46709273922896", "body":"Sample request for the Transaction confirmation report (for details about the report, see Transaction confirmation report (PDF)):"},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"reports-via-api.html#idm46709273922896", "body":"query {\n report(\n reportId:\"Transaction confirmation (PDF)\", \n reportParameters: {\n transactionId:[750063], \n reportLanguage:\"en_US\"\n }\n language:\"en\"\n )\n}"},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"reports-via-api.html#idm46709273922896", "body":"Sample request for the Position report grouped by security type (for details about the report, see Positions report (PDF)):"},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"reports-via-api.html#idm46709273922896", "body":"query {\n report(\n reportId:\"Positions (Sample)\", \n reportParameters: {\n reportDate:\"2022-08-02\",\n portfolioId:[24],\n reportLanguage:\"en_US\",\n groupBy2:\"TYPE\"\n },\n language:\"en\"\n )\n}"},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"reports-via-api.html#idm46709273922896", "body":"Sample request for the Position report grouped by the ASSET asset class and sector (for details about the report, see Positions report (PDF)):"},
{"title":"Sample requests", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"reports-via-api.html#idm46709273922896", "body":"query {\n report(\n reportId:\"Positions (Sample)\", \n reportParameters: {\n reportDate:\"2022-08-02\",\n portfolioId:[24],\n reportLanguage:\"en_US\",\n group:\"ASSET\",\n groupBy2:\"SECTOR\"\n },\n language:\"en\"\n )\n}"},
{"title":"Analysis and performance metrics", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html", "body":"Analysis and performance metrics"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#overview-98", "body":"Analytics+ functionality is a powerful tool to analyze a single or a group of portfolios. This how-to article describes how it can be used to analyze a portfolio via FA's GraphQL API. The content is divided into three sections:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-use-analytics-to-analyze-portfolios.html#overview-98", "body":"Initialization of an Analytics+ call"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-use-analytics-to-analyze-portfolios.html#overview-98", "body":"Requesting one or multiple different types of analyses from the Analytics+"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-use-analytics-to-analyze-portfolios.html#overview-98", "body":"Accessing the result of an analysis"},
{"title":"Analyzing a portfolio or portfolios", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#analyzing-a-portfolio-or-portfolios", "body":"Analyzing a portfolio or portfolios"},
{"title":"Initialization of Analytics+ call", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#initialization-of-analytics--call", "body":"You can analyze the selected portfolio or portfolios efficiently in multiple ways with a single call to the Analytics+ endpoint. However, it is important to initialize the call properly to enable all the intended analyses, but at the same time keep it as efficient as possible."},
{"title":"Initialization of Analytics+ call", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-use-analytics-to-analyze-portfolios.html#initialization-of-analytics--call", "body":"First of all, there are two alternative ways to call Analytics+:"},
{"title":"Initialization of Analytics+ call", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-use-analytics-to-analyze-portfolios.html#initialization-of-analytics--call", "body":"Call Analytics+ and pass a list of portfolios to analyze"},
{"title":"Initialization of Analytics+ call", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-use-analytics-to-analyze-portfolios.html#initialization-of-analytics--call", "body":"Embed the call under a portfolio element in order to analyze that particular portfolio"},
{"title":"Call Analytics+ and pass a list of portfolios to analyze", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#call-analytics--and-pass-a-list-of-portfolios-to-analyze", "body":"Calling Analytics+ directly enables you to analyze a combination of portfolios. You need to explicitly tell, which portfolios are to be analyzed by passing the parameter pfIds, which is a list of longs. The syntax looks like this:"},
{"title":"Call Analytics+ and pass a list of portfolios to analyze", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-use-analytics-to-analyze-portfolios.html#call-analytics--and-pass-a-list-of-portfolios-to-analyze", "body":"query CallAnalyticsDirectly(...) {\n  analytics(...) {\n    ...\n  }\n}"},
{"title":"Embed the call under a portfolio element", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#embed-the-call-under-a-portfolio-element", "body":"When you embed the call under a portfolio element, you do not need to specify explicitly which portfolio to analyze. The analysis is limited to the portfolio under which the analytics call is embedded."},
{"title":"Embed the call under a portfolio element", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-use-analytics-to-analyze-portfolios.html#embed-the-call-under-a-portfolio-element", "body":"query CallAnalyticsIndirectly(...) {\n  portfolio(...) {\n     analytics(...) {\n       ...\n     }\n   }\n}"},
{"title":"Parameters for initializing the analytics", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#parameters-for-initializing-the-analytics", "body":"Parameters for an Analytics+ are defined as follows:"},
{"title":"Parameters for initializing the analytics", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-use-analytics-to-analyze-portfolios.html#parameters-for-initializing-the-analytics", "body":"query Analytics(...) {\n  analytics(\n    withoutPositionData: true\/false,\n    parameters: {\n      pfIds: [pfId1, pfId2,...],\n      startDate: \"yyyy-MM-dd\",\n      endDate: \"yyyy-MM-dd\",\n      includeDrilldownPositions: true\/false,\n      includeOnlyCashAccounts:true\/false,\n      paramsSet: {\n        ...\n      }\n    }) {\n    ...\n  }\n}"},
{"title":"Parameters for initializing the analytics", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-use-analytics-to-analyze-portfolios.html#parameters-for-initializing-the-analytics", "body":"See more detailed documentation in the Parameters for analytics requestsection."},
{"title":"Requesting one or multiple different types of analyses from Analytics+", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#requesting-one-or-multiple-different-types-of-analyses-from-analytics-", "body":"After loading the underlying data (ie. positions, securities,…), Analytics+ can perform one or multiple types of analyses on the data-set. The analyses are defined using a paramsSet data structure."},
{"title":"Requesting one or multiple different types of analyses from Analytics+", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-use-analytics-to-analyze-portfolios.html#requesting-one-or-multiple-different-types-of-analyses-from-analytics-", "body":"The structure looks like this:"},
{"title":"Requesting one or multiple different types of analyses from Analytics+", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-use-analytics-to-analyze-portfolios.html#requesting-one-or-multiple-different-types-of-analyses-from-analytics-", "body":"paramsSet: [{\n   key:\"<key>\"\n   timePeriodCodes:[\"<time period code>\"]\n   grouppedByProperties: [<grouping code(s)>]\n   includeData: true\/false\n   includeChildren: true\/false\n   calculateContribution: true\/false\n   calculateIrr: true\/false\n},\n{\n   ...\n}]"},
{"title":"Requesting one or multiple different types of analyses from Analytics+", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-use-analytics-to-analyze-portfolios.html#requesting-one-or-multiple-different-types-of-analyses-from-analytics-", "body":"See more detailed documentation Parameters for analytics request."},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"Call to Analytics+ returns a lots of data. In GraphQL, you also need to define the structure of the data returned by the call to the API. The high-level structure of a result set is defined as follows:"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"query Analytics(...) {\n  analytics(...) {\n    grouppedAnalytics(key:\"<key>\") {\n      analysis(timePeriodCode:\"<timePeriodCode>\") {...}\n      grouppedAnalyticsTimePeriod {...}\n      grouppedAnalytics { ... }\n      grouppedAnalyticsByGroup(groupCode:\"<groupCode>\") { ... }\n      indexedReturnData { ... }\n    }\n  }\n}"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"The description of the structure is as follows:"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"An example call returning a time series of daily data grouped by security type and security:"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"query Analytics(...) {\n  analytics(\n    ...\n    parameters: {\n      ...\n      paramsSet: [{\n        key:\"ALLOC\"\n        timePeriodCodes:[\"GIVEN\"]\n        grouppedByProperties: [TYPE,SECURITY]\n        includeData:true\n        includeChildren:true\n        ...\n      }]\n        }) {\n        \n    grouppedAnalytics(key:\"ALLOC\") {\n      topLevelTimeSeries:indexedReturnData {\n        date\n        marketValue\n      }\n      securityTypes:grouppedAnalytics {\n        securityTypesTimeSeries:indexedReturnData {\n          code\n          date\n          marketValue\n        }\n        positions:grouppedAnalytics {\n          positionsTimeSeries:indexedReturnData {\n            code\n            date\n            marketValue\n          }\n        }\n      }\n    }\n  }\n}"},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-for-analytics-graphql-api-call.html", "body":"Parameters for analytics request"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"analytics--grouping-options.html", "body":"Analytics+ supports different grouping options for the data. You can use the list below to find the code matching your desired grouping. See Parameters for analytics GraphQL API call for information how to use Analytics+ in GraphQL."},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"time-period-codes.html", "body":"All the examples are in relation to date 2017-08-26. To form a code, take a word from the left and match it with the number at the top (e.g. MONTHS-1) to get the example values."},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"time-period-codes.html", "body":"If you add prefix R (e.g RCALMONTH), the time period code is converted to:"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"time-period-codes.html", "body":"CALMONTH, if the given date is the last day of the month"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"time-period-codes.html", "body":"MONTH, if the given date is not the last day of the month"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"time-period-codes.html", "body":"GIVEN means from start date till end date."},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-overview-with-position,-performance-history-and-trade-orders.html#query-103", "body":"query PortfolioOverview {\n portfolio(id: 340224) {\n client: primaryContact {\n name\n }\n portfolioName: name\n portfolioReport: portfolioReport(\n calculateExpectedAmountBasedOpenTradeOrders: true) {\n marketValue: positionMarketValue\n cashBalance: accountBalance\n netAssetValue: marketValue\n investments: portfolioReportItems {\n security {\n name\n securityCode\n }\n amount\n amountAfterOpenTradeOrders\n purchaseValue:purchaseTradeAmount\n positionValue: marketTradeAmount\n changePercent: valueChangeRelative\n }\n }\n graph:analytics(withoutPositionData:true,\n parameters: {\n paramsSet: {\n timePeriodCodes:\"GIVEN\"\n includeData:true\n drilldownEnabled:false\n limit: 0\n },\n includeDrilldownPositions:false\n }) {\n dailyValues:grouppedAnalytics(key:\"1\") {\n dailyValue:indexedReturnData {\n date\n portfolioMinus100:indexedValue\n benchmarkMinus100:benchmarkIndexedValue\n }\n }\n }\n tradeOrders {\n orderStatus\n securityCode\n securityName\n amount\n tradeOrderType\n typeName\n orderStatus\n orderDate:transactionDate\n }\n }\n} "},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-overview-with-position,-performance-history-and-trade-orders.html#result-103", "body":"{\n \"data\": {\n \"portfolio\": {\n \"client\": {\n \"name\": \"Aaron Chan\"\n },\n \"portfolioName\": \"Investment portfolio\",\n \"portfolioReport\": {\n \"marketValue\": 994682.9,\n \"cashBalance\": 30678361.61,\n \"netAssetValue\": 31673044.51,\n \"investments\": [\n {\n \"security\": {\n \"name\": \"Vincit Oyj\",\n \"securityCode\": \"VINCIT.HE\"\n },\n \"amount\": 155,\n \"amountAfterOpenTradeOrders\": 155,\n \"purchaseValue\": 11185.49,\n \"positionValue\": 9020.73,\n \"changePercent\": -0.193532871604194\n },\n {\n \"security\": {\n \"name\": \"Corem Property Group AB (publ)\",\n \"securityCode\": \"CORE-PREF.ST\"\n },\n \"amount\": 2913,\n \"amountAfterOpenTradeOrders\": 2913,\n \"purchaseValue\": 473344.2,\n \"positionValue\": 961290,\n \"changePercent\": 1.030847742509573\n },\n {\n \"security\": {\n \"name\": \"Outokumpu Oyj\",\n \"securityCode\": \"OUT1V.HE\"\n },\n \"amount\": 666,\n \"amountAfterOpenTradeOrders\": 666,\n \"purchaseValue\": 1898.1,\n \"positionValue\": 15115.03,\n \"changePercent\": 6.963242189557979\n },\n {\n \"security\": {\n \"name\": \"PledPharma AB\",\n \"securityCode\": \"PLED.ST\"\n },\n \"amount\": 1801,\n \"amountAfterOpenTradeOrders\": 1801,\n \"purchaseValue\": 57746,\n \"positionValue\": 9257.14,\n \"changePercent\": -0.839692099885706\n },\n {\n \"security\": {\n \"name\": \"AB CALIFORNIA PORTFOLIO CLASS B\",\n \"securityCode\": \"ALCBX.NMFQS\"\n },\n \"amount\": 0,\n \"amountAfterOpenTradeOrders\": 1000,\n \"purchaseValue\": 0,\n \"positionValue\": 0,\n \"changePercent\": 0\n }\n ]\n },\n \"graph\": {\n \"dailyValues\": {\n \"dailyValue\": [\n {\n \"date\": \"2014-06-03\",\n \"portfolioMinus100\": 100,\n \"benchmarkMinus100\": 100\n },\n {\n \"date\": \"2014-06-04\",\n \"portfolioMinus100\": 99.66609551425685,\n \"benchmarkMinus100\": 100\n },\n {\n \"date\": \"2014-06-05\",\n \"portfolioMinus100\": 99.166337155661,\n \"benchmarkMinus100\": 100\n },\n ...\n {\n \"date\": \"2020-10-11\",\n \"portfolioMinus100\": 115.96240832271533,\n \"benchmarkMinus100\": 100\n },\n {\n \"date\": \"2020-10-12\",\n \"portfolioMinus100\": 115.96240832271533,\n \"benchmarkMinus100\": 100\n },\n {\n \"date\": \"2020-10-13\",\n \"portfolioMinus100\": 115.96240832271533,\n \"benchmarkMinus100\": 100\n }\n ]\n }\n },\n \"tradeOrders\": [\n {\n \"orderStatus\": \"1\",\n \"securityCode\": \"ALCBX.NMFQS\",\n \"securityName\": \"AB CALIFORNIA PORTFOLIO CLASS B\",\n \"amount\": 1000,\n \"tradeOrderType\": 2,\n \"typeName\": \"Buy\",\n \"orderDate\": \"2020-09-01\"\n }\n ]\n }\n }\n}"},
{"title":"Portfolio allocation by type and security", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-allocation-by-type-and-security.html", "body":"Portfolio allocation by type and security"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-allocation-by-type-and-security.html#query-104", "body":"query PortfolioHierarchyByTypeAndSecurity {\n portfolio(id: 340224) {\n client: primaryContact {\n name\n }\n portfolioName: name\n analytics(\n parameters: {\n paramsSet: {\n key:\"ALLOC\"\n timePeriodCodes:\"DAYS-0\"\n grouppedByProperties: [TYPE,SECURITY]\n includeData:false\n includeChildren:true\n drilldownEnabled:false\n limit: 0\n },\n includeDrilldownPositions:false\n }) { \n allocationTopLevel:grouppedAnalytics(key:\"ALLOC\") {\n figures:firstAnalysis {\n marketValue \n }\n allocationBySecurityType:grouppedAnalytics {\n code\n name\n figures:firstAnalysis {\n marketValue\n shareOfTotal\n }\n allocationBySecurity:grouppedAnalytics {\n code\n name\n figures:firstAnalysis {\n marketValue\n shareOfParent\n shareOfTotal\n }\n }\n }\n }\n }\n }\n} "},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-allocation-by-type-and-security.html#result-104", "body":"{\n \"data\": {\n \"portfolio\": {\n \"client\": {\n \"name\": \"Aaron Chan\"\n },\n \"portfolioName\": \"Investment portfolio\",\n \"analytics\": {\n \"allocationTopLevel\": {\n \"figures\": {\n \"marketValue\": 31673044.509999998\n },\n \"allocationBySecurityType\": [\n {\n \"code\": \"CURRENCY\",\n \"name\": \"Currency\",\n \"figures\": {\n \"marketValue\": 30678361.61,\n \"shareOfTotal\": 0.9685952861372088\n },\n \"allocationBySecurity\": [\n {\n \"code\": \"EUR\",\n \"name\": \"EUR\",\n \"figures\": {\n \"marketValue\": 30678361.61,\n \"shareOfParent\": 1,\n \"shareOfTotal\": 0.9685952861372088\n }\n }\n ]\n },\n {\n \"code\": \"STOCK\",\n \"name\": \"Listed Equity\",\n \"figures\": {\n \"marketValue\": 994682.9,\n \"shareOfTotal\": 0.031404713862791214\n },\n \"allocationBySecurity\": [\n {\n \"code\": \"CORE-PREF.ST\",\n \"name\": \"Corem Property Group AB (publ)\",\n \"figures\": {\n \"marketValue\": 961290,\n \"shareOfParent\": 0.9664285974957446,\n \"shareOfTotal\": 0.030350413573172478\n }\n },\n {\n \"code\": \"OUT1V.HE\",\n \"name\": \"Outokumpu Oyj\",\n \"figures\": {\n \"marketValue\": 15115.03,\n \"shareOfParent\": 0.015195827735653242,\n \"shareOfTotal\": 0.00047722062194645656\n }\n },\n {\n \"code\": \"PLED.ST\",\n \"name\": \"PledPharma AB\",\n \"figures\": {\n \"marketValue\": 9257.14,\n \"shareOfParent\": 0.009306624251809295,\n \"shareOfTotal\": 0.00029227187165658424\n }\n },\n {\n \"code\": \"VINCIT.HE\",\n \"name\": \"Vincit Oyj\",\n \"figures\": {\n \"marketValue\": 9020.73,\n \"shareOfParent\": 0.009068950516792839,\n \"shareOfTotal\": 0.0002848077960156916\n }\n }\n ]\n }\n ]\n }\n }\n }\n }\n}"},
{"title":"Portfolio allocation by group and security", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-allocation-by-group-and-security.html", "body":"The sample demonstrates how to get multiple differently grouped Analytics+ result sets with a single request. The steps to achieve this are as follows:"},
{"title":"Portfolio allocation by group and security", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-allocation-by-group-and-security.html", "body":"Formulate an analytics query with the parameters argument object."},
{"title":"Portfolio allocation by group and security", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-allocation-by-group-and-security.html", "body":"Define grouping parameter sets with unique keys and place them in a list as the value of paramsSet field of parameters."},
{"title":"Portfolio allocation by group and security", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-allocation-by-group-and-security.html", "body":"Under analytics, add multiple grouppedAnalytics fields, each with a unique alias and an argument matching a parameter set key."},
{"title":"Portfolio allocation by group and security", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-allocation-by-group-and-security.html", "body":"For information about available parameters, see Parameters for analytics request. For grouping options, see Analytics+ grouping options."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-allocation-by-group-and-security.html#idm46709273641568", "body":"Example request"},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-allocation-by-group-and-security.html#idm46709273641568", "body":"Requests the following:"},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-allocation-by-group-and-security.html#idm46709273641568", "body":"Portfolio allocation for a given date with grouping options passed as variables."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-allocation-by-group-and-security.html#idm46709273641568", "body":"Portfolio allocation for a given date with grouping by security."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-allocation-by-group-and-security.html#idm46709273641568", "body":"query AllocationByTypeAndSecurity ($ids: [Long], $reportDate: String, $locale:Locale, $groupBy:[GroupBy], $groupCode: String) {\n    analytics(\n        parameters: {\n            pfIds: $ids\n            startDate: $reportDate\n            endDate: $reportDate\n            paramsSet: [{\n                key:\"ALLOCGROUP\"\n                timePeriodCodes:\"GIVEN\"\n                grouppedByProperties: $groupBy\n                groupCode: $groupCode\n                locale: $locale\n                includeData:false\n                includeChildren:true\n            }, {\n                key:\"ALLOCSECURITY\"\n                timePeriodCodes: \"GIVEN\"\n                grouppedByProperties: SECURITY\n                locale: $locale\n                includeData: false\n                includeChildren: true\n            }]\n            includeDrilldownPositions:false\n        }\n    ){    \n        allocationGroupTotal:grouppedAnalytics(key:\"ALLOCGROUP\") {\n            figures:firstAnalysis {\n                marketValue   \n            }\n            allocationByGroup:grouppedAnalytics {\n                code\n                name\n                figures:firstAnalysis {\n                    marketValue\n                    shareOfTotal\n                }\n            }\n        }\n        allocationSecTotal:grouppedAnalytics(key:\"ALLOCSECURITY\") {\n            figures: firstAnalysis {\n                marketValue\n            }\n            allocationBySecurity: grouppedAnalytics {\n                code\n                name\n                figures: firstAnalysis {\n                marketValue\n                shareOfTotal\n                }\n            }\n        }\n    }\n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-allocation-by-group-and-security.html#idm46709273641360", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-allocation-by-group-and-security.html#idm46709273641360", "body":"{\n  \"reportDate\": \"2022-07-20\",\n  \"ids\": [214, 215, 233],\n  \"groupBy\": \"GROUP\",\n  \"groupCode\": \"ASSET\",\n  \"locale\": \"en-US\"\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-allocation-by-group-and-security.html#idm46709273636368", "body":"Result"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-allocation-by-group-and-security.html#idm46709273636368", "body":"{\n  \"data\": {\n    \"analytics\": {\n      \"allocationGroupTotal\": {\n        \"figures\": {\n          \"marketValue\": 410732441.6700001\n        },\n        \"allocationByGroup\": [\n          {\n            \"code\": \"EQUITY\",\n            \"name\": \"Equity\",\n            \"figures\": {\n              \"marketValue\": 360722143.10717094,\n              \"shareOfTotal\": 0.8782411772503484\n            }\n          },\n          {\n            \"code\": \"FIXED INCOME\",\n            \"name\": \"Fixed Income\",\n            \"figures\": {\n              \"marketValue\": 13068052.612829065,\n              \"shareOfTotal\": 0.03181646075896896\n            }\n          },\n          {\n            \"code\": \"ALTERNATIVE\",\n            \"name\": \"Alternative\",\n            \"figures\": {\n              \"marketValue\": 10130117.35,\n              \"shareOfTotal\": 0.02466354327603605\n            }\n          },\n          {\n            \"code\": \"OTHER\",\n            \"name\": \"Other\",\n            \"figures\": {\n              \"marketValue\": 26812128.599999998,\n              \"shareOfTotal\": 0.06527881871464637\n            }\n          }\n        ]\n      },\n      \"allocationSecTotal\": {\n        \"figures\": {\n          \"marketValue\": 410732441.67\n        },\n        \"allocationBySecurity\": [\n          {\n            \"code\": \"SE0000739161_SEK\",\n            \"name\": \"AMF Aktiefond Världen\",\n            \"figures\": {\n              \"marketValue\": 283465.66,\n              \"shareOfTotal\": 0.0006901467506376046\n            }\n          },\n          {\n            \"code\": \"NO0010668106_NOK\",\n            \"name\": \"Alfred Berg Nordic High Yield C\",\n            \"figures\": {\n              \"marketValue\": 3060419.89,\n              \"shareOfTotal\": 0.00745112774037672\n            }\n          },\n          {\n            \"code\": \"GOOGL US\",\n            \"name\": \"Alphabet Inc\",\n            \"figures\": {\n              \"marketValue\": 101572.67,\n              \"shareOfTotal\": 0.00024729643849659145\n            }\n          },\n          {\n            \"code\": \"AMZN US\",\n            \"name\": \"Amazon.com Inc\",\n            \"figures\": {\n              \"marketValue\": 168799.3,\n              \"shareOfTotal\": 0.0004109714326768971\n            }\n          },\n          {\n            \"code\": \"NO0010102866_NOK\",\n            \"name\": \"DNB Grønt Norden A\",\n            \"figures\": {\n              \"marketValue\": 493788.94,\n              \"shareOfTotal\": 0.0012022155785705651\n            }\n          },\n          {\n            \"code\": \"DIJP DC\",\n            \"name\": \"Danske Invest-Japan Fund\",\n            \"figures\": {\n              \"marketValue\": 16892736.72,\n              \"shareOfTotal\": 0.04112832346847427\n            }\n          },\n          {\n            \"code\": \"FAFiXED B\",\n            \"name\": \"FA Fixed Income B\",\n            \"figures\": {\n              \"marketValue\": 32672752.03,\n              \"shareOfTotal\": 0.0795475319581663\n            }\n          },\n          {\n            \"code\": \"FAMIXED C\",\n            \"name\": \"FA Mixed + C\",\n            \"figures\": {\n              \"marketValue\": 468361.82,\n              \"shareOfTotal\": 0.0011403088056440936\n            }\n          },\n          {\n            \"code\": \"FAMIXED A\",\n            \"name\": \"FA Mixed+ A Inst\",\n            \"figures\": {\n              \"marketValue\": 72340263.53,\n              \"shareOfTotal\": 0.176125029802543\n            }\n          },\n          {\n            \"code\": \"PE\",\n            \"name\": \"FA Private Equity A\",\n            \"figures\": {\n              \"marketValue\": 10130117.35,\n              \"shareOfTotal\": 0.024663543276036055\n            }\n          },\n          {\n            \"code\": \"FI0008800438_EUR\",\n            \"name\": \"Nordea Nordic Small Cap K EUR\",\n            \"figures\": {\n              \"marketValue\": 4845594.5,\n              \"shareOfTotal\": 0.01179744770171614\n            }\n          },\n          {\n            \"code\": \"NOK\",\n            \"name\": \"Norwegian krone\",\n            \"figures\": {\n              \"marketValue\": 26812128.599999998,\n              \"shareOfTotal\": 0.06527881871464637\n            }\n          },\n          {\n            \"code\": \"NO0010140502_NOK\",\n            \"name\": \"SKAGEN Kon-Tiki A\",\n            \"figures\": {\n              \"marketValue\": 228318191.4,\n              \"shareOfTotal\": 0.5558805885205449\n            }\n          },\n          {\n            \"code\": \"NO0010936917_NOK\",\n            \"name\": \"STBNO Float 02\/23\/31\",\n            \"figures\": {\n              \"marketValue\": 10026260.69,\n              \"shareOfTotal\": 0.02441068606422749\n            }\n          },\n          {\n            \"code\": \"NO0010788292_NOK\",\n            \"name\": \"Storebrand Global ESG Plus A\",\n            \"figures\": {\n              \"marketValue\": 1445234.66,\n              \"shareOfTotal\": 0.003518676669716689\n            }\n          },\n          {\n            \"code\": \"ERICA EU\",\n            \"name\": \"Telefonaktiebolaget LM Ericsso\",\n            \"figures\": {\n              \"marketValue\": 1543703.91,\n              \"shareOfTotal\": 0.0037584172891808668\n            }\n          },\n          {\n            \"code\": \"TEL NO\",\n            \"name\": \"Telenor ASA\",\n            \"figures\": {\n              \"marketValue\": 1129050,\n              \"shareOfTotal\": 0.0027488697883453943\n            }\n          }\n        ]\n      }\n    }\n  }\n}"},
{"title":"Portfolio daily allocation by asset class", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-daily-allocation-by-asset-class.html", "body":"Portfolio daily allocation by asset class"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-daily-allocation-by-asset-class.html#idm46709273619536", "body":"Query"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---portfolio-daily-allocation-by-asset-class.html#idm46709273619536", "body":"query dailyAllocatioByAssetClass($ids: [Long], $groupCode: String, $groupBy: [GroupBy], $startDate:String, $endDate:String) {\n analysis: analytics(\n withoutPositionData: false\n parameters: {\n pfIds: $ids,\n startDate: $startDate,\n endDate: $endDate,\n paramsSet: [\n {key: \"ALLOC\", \n timePeriodCodes: [\"GIVEN\"], \n grouppedByProperties: $groupBy,\n groupCode: $groupCode,\n includeData: true, \n includeChildren: true, \n drilldownEnabled: false\n }\n ]\n }\n ) {\n dailyValues: grouppedAnalytics(key: \"ALLOC\") {\n portfolioLevelDailyValues: indexedReturnData {\n date\n marketValue\n }\n assetClassLevelDailyValues: grouppedAnalytics {\n assetClassDailyValues: indexedReturnData {\n code\n name\n date\n marketValue\n }\n }\n }\n }\n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-daily-allocation-by-asset-class.html#idm46709273619344", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---portfolio-daily-allocation-by-asset-class.html#idm46709273619344", "body":"{\n \"ids\": [24],\n \"groupBy\": [\"SECTOR\"],\n \"groupCode\": \"ASSET\",\n \"startDate\": \"2021-09-01\",\n \"endDate\": \"2021-09-02\"\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-daily-allocation-by-asset-class.html#idm46709273616688", "body":"Result"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---portfolio-daily-allocation-by-asset-class.html#idm46709273616688", "body":"{\n \"data\": {\n \"analysis\": {\n \"dailyValues\": {\n \"portfolioLevelDailyValues\": [\n {\n \"date\": \"2021-09-01\",\n \"marketValue\": 99125.87000000004\n },\n {\n \"date\": \"2021-09-02\",\n \"marketValue\": 98752.06000000001\n }\n ],\n \"assetClassLevelDailyValues\": [\n {\n \"assetClassDailyValues\": [\n {\n \"code\": \"OTHER\",\n \"name\": \"Other\",\n \"date\": \"2021-09-01\",\n \"marketValue\": 6394.7\n },\n {\n \"code\": \"OTHER\",\n \"name\": \"Other\",\n \"date\": \"2021-09-02\",\n \"marketValue\": 6394.7\n }\n ]\n },\n {\n \"assetClassDailyValues\": [\n {\n \"code\": \"10\",\n \"name\": \"Communications\",\n \"date\": \"2021-09-01\",\n \"marketValue\": 12698.504991578498\n },\n {\n \"code\": \"10\",\n \"name\": \"Communications\",\n \"date\": \"2021-09-02\",\n \"marketValue\": 12514.4984664054\n }\n ]\n },\n .\n .\n .\n {\n \"assetClassDailyValues\": [\n {\n \"code\": \"20\",\n \"name\": \"Utilities\",\n \"date\": \"2021-09-01\",\n \"marketValue\": 413.91938412\n },\n {\n \"code\": \"20\",\n \"name\": \"Utilities\",\n \"date\": \"2021-09-02\",\n \"marketValue\": 433.11142427590005\n }\n ]\n }\n ]\n }\n }\n }\n}"},
{"title":"Portfolio's monthly TWR", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-s-monthly-twr.html", "body":"Portfolio's monthly TWR"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-s-monthly-twr.html#idm46709273605584", "body":"Query"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---portfolio-s-monthly-twr.html#idm46709273605584", "body":"query PortfolioOverview ($id:Long, $startDate: String, $endDate: String){\n portfolio(id: $id) {\n client: primaryContact {\n name\n }\n portfolioName: name\n analytics(withoutPositionData:true,\n parameters: {\n startDate:$startDate,\n endDate: $endDate,\n paramsSet: {\n timePeriodCodes:\"CALMONTHS-1\",\n includeData:false,\n includeFrequencyData:true,\n includeChildren:true,\n drilldownEnabled:false,\n frequency:\"CALMONTHS-1\"\n },\n includeDrilldownPositions:false\n }) {\n analyticsTimeSeries(key:\"1\") {\n timeSeries {\n startDate\n endDate\n firstAnalysis {\n twr\n }\n }\n }\n }\n }\n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-s-monthly-twr.html#idm46709273605456", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---portfolio-s-monthly-twr.html#idm46709273605456", "body":"{\n \"id\": 24,\n \"startDate\": \"2021-05-01\",\n \"endDate\": \"2021-09-30\"\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---portfolio-s-monthly-twr.html#idm46709273603008", "body":"Result"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---portfolio-s-monthly-twr.html#idm46709273603008", "body":"{\n \"data\": {\n \"portfolio\": {\n \"client\": {\n \"name\": \"Ari Model\"\n },\n \"portfolioName\": \"Investments\",\n \"analytics\": {\n \"analyticsTimeSeries\": {\n \"timeSeries\": [\n {\n \"startDate\": \"2021-05-01\",\n \"endDate\": \"2021-05-31\",\n \"firstAnalysis\": {\n \"twr\": -0.06768089999999982\n }\n },\n {\n \"startDate\": \"2021-06-01\",\n \"endDate\": \"2021-06-30\",\n \"firstAnalysis\": {\n \"twr\": 0.0386648734322832\n }\n },\n .\n .\n .\n {\n \"startDate\": \"2021-09-01\",\n \"endDate\": \"2021-09-30\",\n \"firstAnalysis\": {\n \"twr\": -0.02348759679546286\n }\n }\n ]\n }\n }\n }\n }\n}"},
{"title":"Security analysis with daily values", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security-analysis-with-daily-values.html", "body":"Security analysis with daily values"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security-analysis-with-daily-values.html#idm46709273592992", "body":"Query"},
{"title":"Query", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"security-analysis-with-daily-values.html#idm46709273592992", "body":"query SecuritySearch($securityIds: [Long], $benchmarkId: String) {\n analytics(\n parameters: {\n startDate: \"2021-12-01\",\n endDate: \"2021-12-03\",\n benchmarkId: $benchmarkId,\n secIds: $securityIds\n paramsSet: {\n startDate: \"2021-12-01\",\n endDate: \"2021-12-03\",\n timePeriodCodes: \"GIVEN\",\n key: \"1\",\n includeData: true,\n includeChildren: true,\n grouppedByProperties: [SECURITY]\n }\n }) {\n grouppedAnalytics(key: \"1\") {\n grouppedAnalytics {\n name\n code\n grouppedAnalyticsTimePeriod {\n startDate\n endDate\n timePeriodCode\n marketValue\n twr\n twrBm\n }\n indexedReturnData {\n date\n marketValueStart\n marketValue\n indexedValue\n benchmarkIndexedValue\n }\n }\n }\n }\n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security-analysis-with-daily-values.html#idm46709273592864", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"security-analysis-with-daily-values.html#idm46709273592864", "body":"{\n \"securityIds\": [625, 1098],\n \"benchmarkId\": \"26\"\n}"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security-analysis-with-daily-values.html#idm46709273590224", "body":"Result"},
{"title":"Result", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"security-analysis-with-daily-values.html#idm46709273590224", "body":"{\n \"data\": {\n \"analytics\": {\n \"grouppedAnalytics\": {\n \"grouppedAnalytics\": [\n {\n \"name\": \"Danske Invest-Japan Fund\",\n \"code\": \"DIJP DC\",\n \"grouppedAnalyticsTimePeriod\": [\n {\n \"startDate\": \"2021-12-01\",\n \"endDate\": \"2021-12-03\",\n \"timePeriodCode\": \"GIVEN\",\n \"marketValue\": 139.55,\n \"twr\": 0.017499088589135958,\n \"twrBm\": -0.0026827158968565357\n }\n ],\n \"indexedReturnData\": [\n {\n \"date\": \"2021-12-01\",\n \"marketValueStart\": 137.15,\n \"marketValue\": 139.1,\n \"indexedValue\": 100,\n \"benchmarkIndexedValue\": 100\n },\n {\n \"date\": \"2021-12-02\",\n \"marketValueStart\": 139.1,\n \"marketValue\": 137.15,\n \"indexedValue\": 99.99999999999999,\n \"benchmarkIndexedValue\": 100.36240197203152\n },\n {\n \"date\": \"2021-12-03\",\n \"marketValueStart\": 137.15,\n \"marketValue\": 139.55,\n \"indexedValue\": 101.74990885891359,\n \"benchmarkIndexedValue\": 99.73172841031435\n }\n ]\n },\n {\n \"name\": \"UBS Lux Fund Solutions - MSCI\",\n \"code\": \"CANA SW\",\n \"grouppedAnalyticsTimePeriod\": [\n {\n \"startDate\": \"2021-12-01\",\n \"endDate\": \"2021-12-03\",\n \"timePeriodCode\": \"GIVEN\",\n \"marketValue\": 21.98,\n \"twr\": -0.008793686583991045,\n \"twrBm\": -0.0026827158968565357\n }\n ],\n \"indexedReturnData\": [\n {\n \"date\": \"2021-12-01\",\n \"marketValueStart\": 22.175,\n \"marketValue\": 22.225,\n \"indexedValue\": 100,\n \"benchmarkIndexedValue\": 100\n },\n {\n \"date\": \"2021-12-02\",\n \"marketValueStart\": 22.225,\n \"marketValue\": 22,\n \"indexedValue\": 99.2108229988726,\n \"benchmarkIndexedValue\": 100.36240197203152\n },\n {\n \"date\": \"2021-12-03\",\n \"marketValueStart\": 22,\n \"marketValue\": 21.98,\n \"indexedValue\": 99.1206313416009,\n \"benchmarkIndexedValue\": 99.73172841031435\n }\n ]\n }\n ]\n }\n }\n }\n}"},
{"title":"Fund and share class details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fund-and-share-class-details.html", "body":"GraphQL gives you access to NAV and fund report data. You can query the data from FA's \/services\/fund\/graphql endpoint (e.g. https:\/\/company.fasolutions.com\/services\/fund\/graphql)."},
{"title":"Get NAV details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-nav-details.html", "body":"Fund NAV data is stored in a NAVCalculationDTO object. Highlights of its contents are:"},
{"title":"Get NAV details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-nav-details.html", "body":"Fund's NAV calculation details"},
{"title":"Get NAV details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-nav-details.html", "body":"NAV calculation details by share class"},
{"title":"Get NAV details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"get-nav-details.html", "body":"Positions of the fund portfolio"},
{"title":"Get NAV details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"get-nav-details.html", "body":"Warnings generated during the NAV calculation"},
{"title":"Get NAV details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"get-nav-details.html", "body":"For an easy comparison of NAVs between subsequent calculations, you can query a NAVPreview object. It contains the NAVCalculationDTOs for a given calculation date, the previous calculation date and the changes between the two."},
{"title":"Get NAV details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"get-nav-details.html", "body":"To inspect the full contents of NAVCalculationDTO and NAVPreview, see the documentation in the GraphQL API view."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-nav-details.html#idm46709273565840", "body":"Example request"},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-nav-details.html#idm46709273565840", "body":"Requesting the following:"},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-nav-details.html#idm46709273565840", "body":"Fund's NAV calculation details for a given date."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"get-nav-details.html#idm46709273565840", "body":"Share class NAV details."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"get-nav-details.html#idm46709273565840", "body":"Positions of the fund portfolio."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"get-nav-details.html#idm46709273565840", "body":"Warnings."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"get-nav-details.html#idm46709273565840", "body":"NAV calculation details from the previous calculation date."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"get-nav-details.html#idm46709273565840", "body":"Change between the given and the previous calculation date."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"get-nav-details.html#idm46709273565840", "body":"query getNAVCalculationData($id: Long, $calcDate: String) {\n navPreview(id: $id, date: $calcDate) {\n current {\n portfolioName\n status\n grossAssetValue\n positionsMarketValue\n accruedInterest\n accountBalance\n totalReceivables\n totalLiabilities\n totalPositiveAccrueds\n totalFees\n totalNegativeAccrueds\n netAssetValue\n netIncome\n calcDate\n positions {\n securityName\n dirtyValue\n }\n receivables\n liabilities\n receivableDTOs\n liabilityDTOs\n allFees {\n category\n code\n }\n shareClassDTOs {\n securityName\n nav\n newUnitPrice\n prevPrice\n changePercentage\n }\n warnings {\n category\n code\n description\n status\n }\n }\n previous {\n grossAssetValue\n positionsMarketValue\n accruedInterest\n accountBalance\n totalReceivables\n totalLiabilities\n totalPositiveAccrueds\n totalFees\n totalNegativeAccrueds\n netAssetValue\n netIncome\n calcDate\n }\n change {\n grossAssetValue\n positionsMarketValue\n accruedInterest\n accountBalance\n totalReceivables\n totalLiabilities\n totalPositiveAccrueds\n totalFees\n totalNegativeAccrueds\n netAssetValue\n netIncome\n }\n } \n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-nav-details.html#idm46709273565712", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-nav-details.html#idm46709273565712", "body":"{\n \"id\": 289,\n \"calcDate\": \"2022-03-25\"\n}"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-nav-details.html#idm46709273560240", "body":"Response"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-nav-details.html#idm46709273560240", "body":"The response body is shortened for readability. \"...\" indicates removed items in the response."},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-nav-details.html#idm46709273560240", "body":"{\n \"data\": {\n \"navPreview\": {\n \"current\": {\n \"portfolioName\": \"FA ABC Fund\",\n \"status\": \"ACCEPTED\",\n \"grossAssetValue\": 21540040.340000004,\n \"positionsMarketValue\": 21955603.12,\n \"accruedInterest\": 0,\n \"accountBalance\": -423873.3300000001,\n \"totalReceivables\": 5308933.869999999,\n \"totalLiabilities\": -5308933.869999999,\n \"totalPositiveAccrueds\": 0,\n \"totalFees\": -94.06,\n \"totalNegativeAccrueds\": -14665437.59,\n \"netAssetValue\": 6874508.690000004,\n \"netIncome\": 0,\n \"calcDate\": \"2022-03-25\",\n \"positions\": [\n {\n \"securityName\": \"Credit Agricole SA\",\n \"dirtyValue\": 2135200\n },\n {\n \"securityName\": \"Equinor ASA\",\n \"dirtyValue\": 5155674.94\n },\n {\n \"securityName\": \"FX FWD #2029 2022-09-05 EUR +1.6m\",\n \"dirtyValue\": 1643443.25\n },\n {\n \"securityName\": \"FX FWD #2029 2022-09-05 NOK -16m\",\n \"dirtyValue\": -1716557.29\n },\n ...\n ],\n \"receivables\": {\n \"Forward cashflow out, FX SWAP #2009 2022-09-05 NOK -27m (NOK) \": 2799598.8,\n \"Forward cashflow out, FX SWAP #2000 2022-09-05 SEK -26m (SEK) \": 2509335.07\n },\n \"liabilities\": {\n \"Forward cashflow in, FX SWAP #2000 2022-09-05 EUR +2.5m (EUR) \": -2509335.07,\n \"Forward cashflow out, FX SWAP #1990 2022-09-05 GBP -2.4m (GBP) \": 0,\n \"Forward cashflow in, FX SWAP #2009 2022-09-05 EUR +2.7m (EUR) \": -2799598.8,\n \"Forward cashflow out, FX FWD #2029 2022-09-05 NOK -16m (NOK) \": 0,\n \"Forward cashflow in, FX SWAP #1990 2022-09-05 EUR +2.9m (EUR) \": 0,\n \"Forward cashflow in, FX FWD #2029 2022-09-05 EUR +1.6m (EUR) \": 0\n },\n \"receivableDTOs\": {\n \"Forward cashflow out\": [\n {\n \"securityName\": \"FX SWAP #2000 2022-09-05 SEK -26m\",\n \"securityCode\": \"975625eb-9ecb-46ec-8b69-d3a67f61c895\",\n \"securityType\": \"FUTCF\",\n \"securityId\": 1420,\n \"trTypeCode\": \"FCOUT\",\n \"tradeAmount\": 2509335.07,\n \"tradeAmountInSec\": 26907600,\n \"name\": \"Forward cashflow out, FX SWAP #2000 2022-09-05 SEK -26m (SEK) \"\n },\n {\n \"securityName\": \"FX SWAP #2009 2022-09-05 NOK -27m\",\n \"securityCode\": \"313c8b95-c1e5-45aa-b87e-b8883669d93e\",\n \"securityType\": \"FUTCF\",\n \"securityId\": 1423,\n \"trTypeCode\": \"FCOUT\",\n \"tradeAmount\": 2799598.8,\n \"tradeAmountInSec\": 27912000,\n \"name\": \"Forward cashflow out, FX SWAP #2009 2022-09-05 NOK -27m (NOK) \"\n }\n ]\n },\n \"liabilityDTOs\": {\n \"Forward cashflow in\": [\n {\n \"securityName\": \"FX SWAP #1990 2022-09-05 EUR +2.9m\",\n \"securityCode\": \"3fc047d0-0866-40e6-949c-62c29b18de92\",\n \"securityType\": \"FUTCF\",\n \"securityId\": 1416,\n \"trTypeCode\": \"FCIN\",\n \"tradeAmount\": 0,\n \"tradeAmountInSec\": 0,\n \"name\": \"Forward cashflow in, FX SWAP #1990 2022-09-05 EUR +2.9m (EUR) \"\n },\n {\n \"securityName\": \"FX SWAP #2000 2022-09-05 EUR +2.5m\",\n \"securityCode\": \"dd8329f9-120f-49a4-a4ca-8e1b876da3bf\",\n \"securityType\": \"FUTCF\",\n \"securityId\": 1419,\n \"trTypeCode\": \"FCIN\",\n \"tradeAmount\": -2509335.07,\n \"tradeAmountInSec\": 2509335.07,\n \"name\": \"Forward cashflow in, FX SWAP #2000 2022-09-05 EUR +2.5m (EUR) \"\n },\n ...\n ],\n \"Forward cashflow out\": [\n {\n \"securityName\": \"FX SWAP #1990 2022-09-05 GBP -2.4m\",\n \"securityCode\": \"4d656504-8627-4ac7-a8a7-2ce595c5b7d6\",\n \"securityType\": \"FUTCF\",\n \"securityId\": 1417,\n \"trTypeCode\": \"FCOUT\",\n \"tradeAmount\": 0,\n \"tradeAmountInSec\": 0,\n \"name\": \"Forward cashflow out, FX SWAP #1990 2022-09-05 GBP -2.4m (GBP) \"\n },\n {\n \"securityName\": \"FX FWD #2029 2022-09-05 NOK -16m\",\n \"securityCode\": \"c1b32faa-0d43-4ff3-acc6-ede15a698d9c\",\n \"securityType\": \"FUTCF\",\n \"securityId\": 1429,\n \"trTypeCode\": \"FCOUT\",\n \"tradeAmount\": 0,\n \"tradeAmountInSec\": 0,\n \"name\": \"Forward cashflow out, FX FWD #2029 2022-09-05 NOK -16m (NOK) \"\n }\n ]\n },\n \"allFees\": [\n {\n \"category\": \"Other\",\n \"code\": \"INT\"\n },\n {\n \"category\": \"Other\",\n \"code\": \"MFEE\"\n },\n {\n \"category\": \"Other\",\n \"code\": \"MFEE\"\n }\n ],\n \"shareClassDTOs\": [\n {\n \"securityName\": \"FA ABC Fund class A\",\n \"nav\": 7668753.26,\n \"newUnitPrice\": 547.7681,\n \"prevPrice\": 531.8234,\n \"changePercentage\": 2.9981193005046425\n },\n {\n \"securityName\": \"FA ABC Fund class B\",\n \"nav\": -794244.57,\n \"newUnitPrice\": -8.8249,\n \"prevPrice\": -8.6578,\n \"changePercentage\": 1.930051514241482\n }\n ],\n \"warnings\": [\n {\n \"category\": \"NAV\",\n \"code\": \"\",\n \"description\": \"Missing account to hold accrued fees for fee type HDGS\",\n \"status\": \"WARNING\"\n },\n {\n \"category\": \"PORTFOLIO\",\n \"code\": \"Negative cash account balance\",\n \"description\": \"Units on USD account was -6203180.0\",\n \"status\": \"WARNING\"\n }\n ]\n },\n \"previous\": {\n \"grossAssetValue\": 21364048.8,\n \"positionsMarketValue\": 21748556.76,\n \"accruedInterest\": 0,\n \"accountBalance\": -416797.2400000002,\n \"totalReceivables\": 5308933.869999999,\n \"totalLiabilities\": -5308933.869999999,\n \"totalPositiveAccrueds\": 0,\n \"totalFees\": -90.88,\n \"totalNegativeAccrueds\": -14697635.73,\n \"netAssetValue\": 6666322.19,\n \"netIncome\": 0,\n \"calcDate\": \"2022-03-24\"\n },\n \"change\": {\n \"grossAssetValue\": 175991.54000000283,\n \"positionsMarketValue\": 207046.3599999994,\n \"accruedInterest\": 0,\n \"accountBalance\": -7076.089999999851,\n \"totalReceivables\": 0,\n \"totalLiabilities\": 0,\n \"totalPositiveAccrueds\": 0,\n \"totalFees\": -3.180000000000007,\n \"totalNegativeAccrueds\": 32198.140000000596,\n \"netAssetValue\": 208186.50000000373,\n \"netIncome\": 0\n }\n }\n }\n}"},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-nav-details.html#related-links-110", "body":" NAV window and NAV details in FA Back reference"},
{"title":"Get fund reporting details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-fund-reporting-details.html", "body":"Fund reporting data calculated for a fund is stored in the FundReportingData object. It includes:"},
{"title":"Get fund reporting details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-fund-reporting-details.html", "body":"The fund's positions on the reporting date."},
{"title":"Get fund reporting details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-fund-reporting-details.html", "body":"Share class analysis figures."},
{"title":"Get fund reporting details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"get-fund-reporting-details.html", "body":"Fund portfolio analysis figures."},
{"title":"Get fund reporting details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"get-fund-reporting-details.html", "body":"Daily indexed value of the fund portfolio."},
{"title":"Get fund reporting details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"get-fund-reporting-details.html", "body":"To inspect the full contents of FundReportingData, use the documentation tool in FA visual GraphQL interface."},
{"title":"Get fund reporting details", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"get-fund-reporting-details.html", "body":"FileItemdata is queried from from the GraphQL interface."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"Example request"},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"Requesting the following:"},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"End date of the analysis."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"Status of the calculation."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"Fund portfolio ID."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"List of fund positions, their market value and share of total."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"List of share classes and their respective analysis figures."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"Daily indexed value of the fund."},
{"title":"Example request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"get-fund-reporting-details.html#idm46709273533424", "body":"query getFundAnalysis($fundPortfolioId: Long, $reportingDate: String){\n fundAnalytics(id:$fundPortfolioId, date: $reportingDate){\n analysisDate\n status\n portfolioId\n positions\n securityData\n fundPortfolioData\n }\n}"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-fund-reporting-details.html#idm46709273533232", "body":"Variables"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-fund-reporting-details.html#idm46709273533232", "body":"{\"fundPortfolioId\": 8, \"reportingDate\": \"2022-05-23\"}"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-fund-reporting-details.html#idm46709273529136", "body":"Response"},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"get-fund-reporting-details.html#idm46709273529136", "body":"The response body is shortened for readability. \"...\" indicates removed items in the response."},
{"title":"Response", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"get-fund-reporting-details.html#idm46709273529136", "body":"{\n \"data\": {\n \"fundAnalytics\": {\n \"analysisDate\": \"2022-05-23\",\n \"status\": \"ACCEPTED\",\n \"portfolioId\": 8,\n \"positions\": {\n \"holdings\": {\n \"grouppedAnalytics\": [\n {\n \"name\": \"Air France-KLM\",\n \"analysis\": {\n \"marketValue\": 1112578.17,\n \"shareOfTotal\": 0.10074663322476865\n }\n },\n {\n \"name\": \"Allianz SE\",\n \"analysis\": {\n \"marketValue\": 1005685.2,\n \"shareOfTotal\": 0.09106721731200074\n }\n },\n {\n \"name\": \"Amazon.com Inc\",\n \"analysis\": {\n \"marketValue\": 305540.51,\n \"shareOfTotal\": 0.027667429153565685\n }\n },\n ...\n ]\n }\n },\n \"securityData\": {\n \"grouppedAnalytics\": [\n {\n \"security\": {\n \"id\": 667,\n \"securityCode\": \"FAEQUITY A\"\n },\n \"name\": \"FA Equity Fund A \",\n \"grouppedAnalyticsTimePeriod\": [\n {\n \"twr\": -0.026697099999999696,\n \"alpha\": -0.036944690238235545,\n \"beta\": -0.05483768835269769,\n \"trackingError\": 0.23908063533472163,\n \"volAnn\": 0.17385334556789925,\n \"informationRatio\": 0.419166118647502,\n \"timePeriodCode\": \"GIVEN\"\n },\n {\n \"twr\": 0,\n \"alpha\": 0,\n \"beta\": 0,\n \"trackingError\": 0.25865504732950645,\n \"volAnn\": 0,\n \"informationRatio\": 2.338733702945758,\n \"timePeriodCode\": \"MONTHS-1\"\n },\n {\n \"twr\": 0,\n \"alpha\": 0,\n \"beta\": 0,\n \"trackingError\": 0.19157878996469066,\n \"volAnn\": 0,\n \"informationRatio\": 1.5362311359357579,\n \"timePeriodCode\": \"MONTHS-6\"\n },\n {\n \"twr\": -0.026697099999999696,\n \"alpha\": -0.036944690238235545,\n \"beta\": -0.05483768835269769,\n \"trackingError\": 0.23908063533472163,\n \"volAnn\": 0.17385334556789925,\n \"informationRatio\": 0.419166118647502,\n \"timePeriodCode\": \"YEARS-1\"\n },\n ...\n ]\n },\n ...\n ]\n },\n \"fundPortfolioData\": {\n \"grouppedAnalyticsTimePeriod\": [\n {\n \"twr\": -0.019213574342864748,\n \"volAnn\": 0.17393394950519186,\n \"timePeriodCode\": \"GIVEN\"\n },\n {\n \"twr\": 0,\n \"volAnn\": 0,\n \"timePeriodCode\": \"MONTHS-1\"\n },\n {\n \"twr\": 0,\n \"volAnn\": 0,\n \"timePeriodCode\": \"MONTHS-6\"\n },\n {\n \"twr\": -0.019213574342864748,\n \"volAnn\": 0.17393394950519186,\n \"timePeriodCode\": \"YEARS-1\"\n },\n ...\n ],\n \"indexedReturnData\": [\n {\n \"indexedValue\": 100,\n \"date\": \"2021-06-28\"\n },\n {\n \"indexedValue\": 100,\n \"date\": \"2021-06-29\"\n },\n {\n \"indexedValue\": 99.92841329952716,\n \"date\": \"2021-06-30\"\n },\n {\n \"indexedValue\": 100.36618652991027,\n \"date\": \"2021-07-01\"\n },\n {\n \"indexedValue\": 100.75555006025516,\n \"date\": \"2021-07-02\"\n },\n {\n \"indexedValue\": 100.75555006025516,\n \"date\": \"2021-07-03\"\n },\n {\n \"indexedValue\": 100.75555006025516,\n \"date\": \"2021-07-04\"\n },\n ...\n ]\n }\n }\n }\n}"},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"get-fund-reporting-details.html#related-links-111", "body":"Reporting data window in FA Fund Management reference"},
{"title":"File integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"file-integrations.html", "body":"In FA platform, you can make custom file integrations by developing Camel routes with XML syntax and deploying them to the FA Connector microservice. For example, you can use file integrations to import custom CSV files with data in FA."},
{"title":"File integrations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"file-integrations.html", "body":"To learn more about Camel routes, see Apache Camel site."},
{"title":"Integrations view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"file-integrations.html#integrations-view-in-fa-developer-app", "body":"The Integrations view in FA Developer app lets you manage your Camel routes. Camel routes are used in FA to:"},
{"title":"Integrations view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"file-integrations.html#integrations-view-in-fa-developer-app", "body":"Automatically pass files from a specified directory to a process in FA Back."},
{"title":"Integrations view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"file-integrations.html#integrations-view-in-fa-developer-app", "body":"Move files from one location to another."},
{"title":"Integrations view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"file-integrations.html#integrations-view-in-fa-developer-app", "body":"Fetch or send files via (S)FTP."},
{"title":"Upload and download section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"file-integrations.html#upload-and-download-section", "body":"The Upload and download section lets you:"},
{"title":"Upload and download section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"file-integrations.html#upload-and-download-section", "body":"Upload, download and delete your custom integration code in the routes\/ folder."},
{"title":"Upload and download section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"file-integrations.html#upload-and-download-section", "body":"Upload, download and delete files to test file-based integrations in the fa-back\/ folder."},
{"title":"Routes section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"file-integrations.html#routes-section", "body":"The Routes section lets you:"},
{"title":"Routes section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"file-integrations.html#routes-section", "body":"View the Camel routes and their status."},
{"title":"Routes section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"file-integrations.html#routes-section", "body":"Start, stop or restart Camel routes."},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"file-integrations.html#monitoring-section", "body":"The Monitoring section shows application logs for the Connector microservice:"},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"file-integrations.html#monitoring-section", "body":"Events during selected time"},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"file-integrations.html#monitoring-section", "body":"The number of events during the selected time period, broken down by direction (inbound\/outbound) and channel."},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"file-integrations.html#monitoring-section", "body":"Success\/ errors per minute"},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"file-integrations.html#monitoring-section", "body":"The number of successful and failed events per minute, broken down by direction (inbound\/outbound)."},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"file-integrations.html#monitoring-section", "body":"Events per minute"},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"file-integrations.html#monitoring-section", "body":"The number of successful and failed events per minute, broken down by direction (inbound\/outbound) and channel."},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"file-integrations.html#monitoring-section", "body":"Connector microservice logs"},
{"title":"Monitoring section", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"file-integrations.html#monitoring-section", "body":"System logs for the connector microservice that is used for standard and custom integrations."},
{"title":"Create a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"create-a-camel-route.html", "body":"A Camel route can be seen as an application that receives an input file and then transforms or processes the file before it is passed on to a folder or an application."},
{"title":"Create a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"create-a-camel-route.html", "body":"For example, a Camel route task can be to:"},
{"title":"Create a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"create-a-camel-route.html", "body":"Move a file to and from an FTP\/SFTP."},
{"title":"Create a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"create-a-camel-route.html", "body":"Move a file within FA."},
{"title":"Create a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"create-a-camel-route.html", "body":"Transform and move a file to its destination."},
{"title":"Create a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"create-a-camel-route.html", "body":"For more information about processing files in Camel routes, visit Apache Camel site. "},
{"title":"Example of a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"create-a-camel-route.html#idm46709273476768", "body":"Example of a Camel route"},
{"title":"Example of a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"create-a-camel-route.html#idm46709273476768", "body":"The route configuration below moves all files starting with \"Positions\" from the source directory to the end destination."},
{"title":"Example of a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"create-a-camel-route.html#idm46709273476768", "body":"<routes xmlns=\"http:\/\/camel.apache.org\/schema\/spring\">\n    <route id=\"MoveReconFile\">\n    \t<from uri=\"file:{{back.writable.dir}}\/Input\/?antInclude=Positions*&amp;readLock=changed&amp;readLockCheckInterval=5000&amp;move=.done\/${file:name.noext}-${date:now:yyyyMMdd}.${file:ext}&amp;moveFailed=.failed\" \/>\n\t\t<to uri=\"file:{{back.writable.dir}}\/Output\/Reconciliation\/Import\/Processed\"\/>\n\t<\/route>\n<\/routes>"},
{"title":"Camel route XML tags", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"create-a-camel-route.html#idm46709273468384", "body":"Camel route XML tags"},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"create-a-camel-route.html#idm46709273468160", "body":"Endpoint URI parameters"},
{"title":"Deploy Camel routes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-deploy-camel-routes.html", "body":"You can deploy custom Camel routes in the Integrations view of FA Developer app. To do this:"},
{"title":"Deploy Camel routes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-deploy-camel-routes.html", "body":"Create your Camel route file(s) using XML syntax."},
{"title":"Deploy Camel routes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-deploy-camel-routes.html", "body":"In the Upload and download section, upload you route file(s) to the routes folder."},
{"title":"Deploy Camel routes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-deploy-camel-routes.html", "body":"In the Routes section, click Restart all routes to deploy all routes in the routes folder."},
{"title":"Deploy Camel routes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-deploy-camel-routes.html", "body":"The deployed routes appear on the List of routes with the \"Running\" status."},
{"title":"Logging", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-deploy-camel-routes.html#idm46709273434656", "body":"Logging"},
{"title":"Logging", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-deploy-camel-routes.html#idm46709273434656", "body":"You can use Camel's Log EIP to log messages from your routes. These are logged in the Connector microservice logs, which you can read in the Monitoring section of the Integrations view."},
{"title":"Logging", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-deploy-camel-routes.html#idm46709273434656", "body":"Example log message:"},
{"title":"Logging", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-deploy-camel-routes.html#idm46709273434656", "body":"<log message=\"Hello World!\"\/>"},
{"title":"Fetch files from an SFTP server", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-fetch-files-from-sftp-server.html", "body":"Camel has an SFTP component (see Camel documentation) that enables fetching files from an SFTP server. A simple SFTP route for fetching files can look like this:"},
{"title":"Fetch files from an SFTP server", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-fetch-files-from-sftp-server.html", "body":"<routes xmlns=\"http:\/\/camel.apache.org\/schema\/spring\">\n  <route id=\"example.sftp.fa\">\n    <from uri=\"sftp:\/\/fa@123.45.67.891\/inbox\/files?username=fa&amp;password=1234&amp;reconnectDelay=10000&amp;delay=60000&amp;disconnect=true&amp;delete=true\" \/>\n    <to uri=\"file:{{back.writable.dir}}\/integrations\/custom?autoCreate=true\" \/>\n  <\/route>\n<\/routes>"},
{"title":"Fetch files from an SFTP server", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-fetch-files-from-sftp-server.html", "body":"The above route:"},
{"title":"Fetch files from an SFTP server", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-fetch-files-from-sftp-server.html", "body":"Fetches (copies) files from the SFTP server \"123.45.67.891\/inbox\/files\" directory (authenticating with username and password, polling once every 60 seconds)."},
{"title":"Fetch files from an SFTP server", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-fetch-files-from-sftp-server.html", "body":"Places the files to the \/integrations\/custom FA directory."},
{"title":"Fetch files from an SFTP server", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-fetch-files-from-sftp-server.html", "body":"Deletes the original files from the SFTP server directory after successful processing."},
{"title":"Fetch files from an SFTP server", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-fetch-files-from-sftp-server.html", "body":"You might need to apply other SFTP connection parameters as well depending on the requirements of the SFTP server you connect to."},
{"title":"Import custom CSV files to FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-custom-csv-files-to-fa.html", "body":"Import custom CSV files to FA"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-custom-csv-files-to-fa.html#overview-116", "body":"FA enables you to import custom CSV files in the FA system to:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-custom-csv-files-to-fa.html#overview-116", "body":"import contacts, portfolios, transactions, trade orders, contracts, securities, positions, market prices or corporate actions"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-custom-csv-files-to-fa.html#overview-116", "body":"reconcile portfolio holdings based on transaction or settlement date"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-custom-csv-files-to-fa.html#overview-116", "body":"This is possible by using FA's data mapping tools and related processes together with your custom Camel route."},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-custom-csv-files-to-fa.html#idm46709273408496", "body":"Steps"},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-custom-csv-files-to-fa.html#idm46709273408496", "body":"To use custom CSV data together with data mapping and FA's processes you need to:"},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-custom-csv-files-to-fa.html#idm46709273408496", "body":"Configure your data mapping to map your custom CSV data to one of the FA's standard formats"},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-custom-csv-files-to-fa.html#idm46709273408496", "body":"Create a Camel route that fetches your custom CSV file, selects the data mapping and triggers the FA's import or reconciliation process. In practice, the data mapping and the FA process selection is done in your custom camel route by renaming your CSV file in specific way and moving the CSV file in specific FA directory, depending on how you want your data to be processed. Once the file is saved, FA's standard route converts it into the FA standard format and triggers import or reconciliation process."},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-import-custom-csv-files-to-fa.html#idm46709273408496", "body":"Please also check out the related Samples Import transactions with format readerand Import positions in a custom CSV file."},
{"title":"Configuring the data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-custom-csv-files-to-fa.html#configuring-the-data-mapping", "body":"FA has two different ways of making the data mapping:"},
{"title":"Configuring the data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-custom-csv-files-to-fa.html#configuring-the-data-mapping", "body":"data mapping"},
{"title":"Configuring the data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-custom-csv-files-to-fa.html#configuring-the-data-mapping", "body":"reader format configuration"},
{"title":"Configuring the data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-custom-csv-files-to-fa.html#configuring-the-data-mapping", "body":"You need to select the data mapping option based on the process you wish to use. See Available processes and data mapping options."},
{"title":"Configuring the data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-import-custom-csv-files-to-fa.html#configuring-the-data-mapping", "body":"The preference key \/ name of the mapping (e.g. \"my-mapping\") in FA Back must match your route's output file name (e.g. \"myfile.my-mapping.csv\") as this is used to identify the correct mapping when file is processed."},
{"title":"Creating the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-custom-csv-files-to-fa.html#creating-the-camel-route", "body":"The custom Camel route's job is to:"},
{"title":"Creating the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-custom-csv-files-to-fa.html#creating-the-camel-route", "body":"Prepare the incoming file as a semicolon-separated CSV if its original delimiter is not semicolon. This is required for data mapping."},
{"title":"Creating the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-custom-csv-files-to-fa.html#creating-the-camel-route", "body":"Rename the file so that the mapping's preference key \/ name is a second file extension (for example, \"myfile.my-mapping.csv\")"},
{"title":"Creating the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-custom-csv-files-to-fa.html#creating-the-camel-route", "body":"Save the renamed file in the correct directory for further processing. See Available processes and data mapping options. FA's standard camel routes log each file that has been processed from these directories."},
{"title":"Available processes and data mapping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-import-custom-csv-files-to-fa.html#available-processes-and-data-mapping-options", "body":"Lists of available processes, data mapping options and directories:"},
{"title":"Import positions in a custom CSV file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-positions-in-custom-csv-file.html", "body":"This sample shows how you can use Camel route and data mapping to import a custom CSV file with portfolio positions to FA. The highlights of the sample are:"},
{"title":"Import positions in a custom CSV file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-positions-in-custom-csv-file.html", "body":"Reading a tab-delimited CSV file and converting it to a semicolon-separated file for data mapping."},
{"title":"Import positions in a custom CSV file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"importing-positions-in-custom-csv-file.html", "body":"Creating a data mapping from the received file's format to FA position import format."},
{"title":"Import positions in a custom CSV file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"importing-positions-in-custom-csv-file.html", "body":"Feeding the semicolon-separated file to data mapper and further to the position import process."},
{"title":"Starting point", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-positions-in-custom-csv-file.html#idm46709273365504", "body":"Starting point"},
{"title":"Starting point", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-positions-in-custom-csv-file.html#idm46709273365504", "body":"You have a tab-separated CSV file custom_positions.csv that looks like this:"},
{"title":"Starting point", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"importing-positions-in-custom-csv-file.html#idm46709273365504", "body":"PORTFOLIO    PRODUCT    CURR    IDENTIFICATION    OFFER    VOLUME    INFOXYZ    ZDATE\n1000952    FI0010805360    SEK    DOOBA 24    100.250000    1100000.000000    100.300000    2022-02-10\n1000952    NO0012675485    SEK    VARENNE RB 3    0    275400.000000    100.045098    2022-02-10"},
{"title":"Starting point", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"importing-positions-in-custom-csv-file.html#idm46709273365504", "body":"You need to import the positions to FA. The standard FA file format for importing positions (semicolon-separated) looks like this:"},
{"title":"Starting point", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"importing-positions-in-custom-csv-file.html#idm46709273365504", "body":"portfolio;security;currency;amount;date\n1000952;FI0010805360;SEK;1100000.000000;2022-02-10\n1000952;NO0012675485;SEK;275400.000000;2022-02-10"},
{"title":"Camel route to change CSV delimiter and feed the file to data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-positions-in-custom-csv-file.html#idm46709273365376", "body":"Camel route to change CSV delimiter and feed the file to data mapping"},
{"title":"Camel route to change CSV delimiter and feed the file to data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-positions-in-custom-csv-file.html#idm46709273365376", "body":"The Camel route below:"},
{"title":"Camel route to change CSV delimiter and feed the file to data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"importing-positions-in-custom-csv-file.html#idm46709273365376", "body":"Reacts to all files with the name that ends with positions.csv (antInclude=*positions.csv) placed in the \/integrations\/customFiles\/ directory."},
{"title":"Camel route to change CSV delimiter and feed the file to data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"importing-positions-in-custom-csv-file.html#idm46709273365376", "body":"Reads the original file using Camel's CSV file format and tab (\"&#x9;\") as a delimiter."},
{"title":"Camel route to change CSV delimiter and feed the file to data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"importing-positions-in-custom-csv-file.html#idm46709273365376", "body":"Archives the original file in the monthly folders after processing (move=.\/history\/${date:now:MM_yyyy}\/${file:onlyname})."},
{"title":"Camel route to change CSV delimiter and feed the file to data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"importing-positions-in-custom-csv-file.html#idm46709273365376", "body":"Feeds the processed file in the position import mapping directory and adds the mapping name to processed file name extension (custom_positions.custom-mapping.csv)."},
{"title":"Camel route to change CSV delimiter and feed the file to data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"importing-positions-in-custom-csv-file.html#idm46709273365376", "body":"<routes xmlns=\"http:\/\/camel.apache.org\/schema\/spring\">\n    <route id=\"customPositionsImportMapping\">\n        <from uri=\"file:{{back.writable.dir}}\/integrations\/customFiles\/?antInclude=*positions.csv&amp;autoCreate=true&amp;charset=iso-8859-1&amp;readLock=changed&amp;readLockCheckInterval=5000&amp;moveFailed=.failed&amp;move=.\/history\/${date:now:MM_yyyy}\/${file:onlyname}\"\/>        \n        <unmarshal>\n            <csv delimiter=\"&#x9;\" ignoreSurroundingSpaces=\"true\" ignoreEmptyLines=\"true\"\/>\n        <\/unmarshal>\n        <marshal>\n            <csv skipHeaderRecord=\"false\" delimiter=\";\"\/>\n        <\/marshal>\n        <to uri=\"file:{{back.writable.dir}}\/positionImport\/mapped\/?autoCreate=true&amp;fileName=${file:onlyname.noext}.custom-mapping.${file:ext}&amp;charset=iso-8859-1\"\/>\n    <\/route>\n<\/routes>"},
{"title":"Data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-positions-in-custom-csv-file.html#idm46709273362000", "body":"Data mapping"},
{"title":"Data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-positions-in-custom-csv-file.html#idm46709273362000", "body":"Data mapping receives the semicolon-separated CSV file custom_positions.custom-mapping.csv that looks as follows:"},
{"title":"Data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"importing-positions-in-custom-csv-file.html#idm46709273362000", "body":"PORTFOLIO;PRODUCT;CURR;IDENTIFICATION;OFFER;VOLUME;INFOXYZ;ZDATE\n1000952;FI0010805360;SEK;DOOBA 24;100.250000;1100000.000000;100.300000;2022-02-10\n1000952;NO0012675485;SEK;VARENNE RB 3;0;275400.000000;100.045098;2022-02-10"},
{"title":"Data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"importing-positions-in-custom-csv-file.html#idm46709273362000", "body":"Before using the route, you need to configure the data mapping in FA Back. Data mapping creation is described in Import files in custom CSV formats to the system. Enter the custom-mapping preference key and import the following custom-mapping definition in the Data mapping window:"},
{"title":"Data mapping", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"importing-positions-in-custom-csv-file.html#idm46709273362000", "body":"[{\"rowNr\":\"1\",\"extCode\":\"PORTFOLIO\",\"valueMapping\":\"\",\"FAField\":\"portfolio\",\"customScript\":\"\"},\n{\"rowNr\":\"2\",\"extCode\":\"VOLUME\",\"valueMapping\":\"\",\"FAField\":\"amount\",\"customScript\":\"\"},\n{\"rowNr\":\"3\",\"extCode\":\"CURR\",\"valueMapping\":\"\",\"FAField\":\"currency\",\"customScript\":\"\"},\n{\"rowNr\":\"4\",\"extCode\":\"ZDATE\",\"valueMapping\":\"\",\"FAField\":\"date\",\"customScript\":\"\"},\n{\"rowNr\":\"5\",\"extCode\":\"PRODUCT\",\"valueMapping\":\"\",\"FAField\":\"security\",\"customScript\":\"\"}]"},
{"title":"Position import", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-positions-in-custom-csv-file.html#idm46709273356672", "body":"Position import"},
{"title":"Position import", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-positions-in-custom-csv-file.html#idm46709273356672", "body":"After the custom_positions.custom-mapping.csv file is run through the custom-mapping, you receive an outcome file that follows FA file format for importing positions."},
{"title":"Import transactions with format reader", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-transactions-with-format-reader.html", "body":"This sample shows how to import transactions in custom CSV format to FA using reader format configuration and a Camel route. The highlights of this sample are:"},
{"title":"Import transactions with format reader", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-transactions-with-format-reader.html", "body":"Creating a reader format configuration to convert the custom file format to FA transaction import format."},
{"title":"Import transactions with format reader", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"importing-transactions-with-format-reader.html", "body":"Setting up a camel route and feeding the file to the reader format configuration and further to the transaction import process."},
{"title":"Starting point", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-transactions-with-format-reader.html#starting-point-118", "body":"You have a semicolon-separated file that looks like this:"},
{"title":"Starting point", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-transactions-with-format-reader.html#starting-point-118", "body":"Transaction type;Status;Transaction date;Amount;Price;Trade amount;Parent portfolio\nBuy;Active;2022-02-08;10;100;1000;Clark Kent "},
{"title":"Create the reader format configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-transactions-with-format-reader.html#idm46709273336768", "body":"Create the reader format configuration"},
{"title":"Create the reader format configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-transactions-with-format-reader.html#idm46709273336768", "body":"Go to Preference > Importing > Reader format configuration in FA Back, fill in the fields in the Basic info tab and click next. You can find instructions about the Reader format configuration in the FA Back reference: Preference - Importing."},
{"title":"Create the reader format configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"importing-transactions-with-format-reader.html#idm46709273336768", "body":"In this sample, you need to set the field order in the right column according to this:"},
{"title":"Create the reader format configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"importing-transactions-with-format-reader.html#idm46709273336768", "body":"Type,Status,trasactionDate,Amount,Price,TradeAmount,parentPortfolio"},
{"title":"Set up the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"importing-transactions-with-format-reader.html#idm46709273335088", "body":"Set up the Camel route"},
{"title":"Set up the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"importing-transactions-with-format-reader.html#idm46709273335088", "body":"Upload the Camel route in FA back. For the instructions, see Deploy Camel routes"},
{"title":"Set up the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"importing-transactions-with-format-reader.html#idm46709273335088", "body":"The route below:"},
{"title":"Set up the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"importing-transactions-with-format-reader.html#idm46709273335088", "body":"Reacts to all files with the name that ends with Transactions.csv (antInclude=*Transactions.csv) placed in the \/integrations\/customFiles\/ directory."},
{"title":"Set up the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"importing-transactions-with-format-reader.html#idm46709273335088", "body":"Archives the original file in the monthly folders after processing (move=.\/history\/${date:now:MM_yyyy}\/${file:onlyname})"},
{"title":"Set up the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"importing-transactions-with-format-reader.html#idm46709273335088", "body":"Feeds the processed file for transaction import mapping directory and adds the mapping name to the processed file name extension (custom_transactions.custom-reader.csv). The route knows which reader format configuration to apply by matching the import reader configuration name and the file name, in this case they are custom-reader."},
{"title":"Set up the Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"importing-transactions-with-format-reader.html#idm46709273335088", "body":"<routes xmlns=\"http:\/\/camel.apache.org\/schema\/spring\">\n    <route id=\"customTransactionImportMapping\">\n        <from uri=\"file:{{back.writable.dir}}\/integrations\/customFiles\/?antInclude=*Transactions.csv&amp;autoCreate=true&amp;charset=iso-8859-1&amp;readLock=changed&amp;readLockCheckInterval=5000&amp;moveFailed=.failed&amp;move=.\/history\/${date:now:MM_yyyy}\/${file:onlyname}\"\/>        \n        <to uri=\"file:{{back.writable.dir}}\/fa\/import\/general\/csv-auto\/mapped-transactions?autoCreate=true&amp;fileName=${file:onlyname.noext}.custom-reader.${file:ext}&amp;charset=iso-8859-1\"\/>\n    <\/route>\n<\/routes>"},
{"title":"Convert an XML file to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-convert-an-xml-file-to-csv.html", "body":"Camel has built-in support for XSLT templates that can be used to convert XML into different formats. In the XSLT, you can define which nodes to pick from the XML tree and which structures to loop over to get the required data."},
{"title":"Convert an XML file to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-convert-an-xml-file-to-csv.html", "body":"This article shows how to create an XSLT template and produce a CSV file."},
{"title":"Example XML-file to be converted to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273312944", "body":"Example XML-file to be converted to CSV"},
{"title":"Example XML-file to be converted to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273312944", "body":"The file contains information about two transactions."},
{"title":"Example XML-file to be converted to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273312944", "body":"<feed>\n <entry>\n <content type=\"application\/xml\">\n <properties>\n <ID>12345678<\/ID>\n <CustomerID>123456<\/CustomerID>\n <AccountID>0123456789<\/AccountID>\n <CurrencyCode>SEK<\/CurrencyCode>\n <TransactionDate>2020-10-08<\/TransactionDate>\n <ValueDate>2020-10-12<\/ValueDate>\n <TransactionTypeText>Salg<\/TransactionTypeText>\n <ISIN>SE0014609087<\/ISIN>\n <InstrumentName>Sectra Redemption share<\/InstrumentName>\n <NetAmount>7355.03<\/NetAmount>\n <TransactionCurrencyPrice>71.161940<\/TransactionCurrencyPrice>\n <\/properties>\n <\/content>\n <\/entry>\n <entry>\n <content type=\"application\/xml\">\n <properties>\n <ID>87654321<\/ID>\n <CustomerID>654321<\/CustomerID>\n <AccountID>9876543210<\/AccountID>\n <CurrencyCode>SEK<\/CurrencyCode>\n <TransactionDate>2020-10-09<\/TransactionDate>\n <ValueDate>2020-10-13<\/ValueDate>\n <TransactionTypeText>Salg<\/TransactionTypeText>\n <ISIN>SE0014609087<\/ISIN>\n <InstrumentName>Sectra Redemption share<\/InstrumentName>\n <NetAmount>73.03<\/NetAmount>\n <TransactionCurrencyPrice>71.161940<\/TransactionCurrencyPrice>\n <\/properties>\n <\/content>\n <\/entry>\n<\/feed>"},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"Example XSLT used for converting XML to CSV"},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"The file contains information on how the XML-file should be processed to CSV."},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"<?xml version=\"1.0\"?>\n<xsl:stylesheet version=\"2.0\" xmlns:xsl=\"http:\/\/www.w3.org\/1999\/XSL\/Transform\">\n <xsl:output method=\"text\" encoding=\"utf-8\" \/> \n <xsl:template match=\"feed\">\n <xsl:text>ID;CustomerID;AccountID;CurrencyCode;TransactionDate;ValueDate;TransactionTypeText;ISIN;InstrumentName;NetAmount;TransactionCurrencyPrice&#xA;<\/xsl:text>\n <xsl:for-each select=\"entry\">\n <xsl:value-of select=\"content\/properties\/ID\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/CustomerID\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/AccountID\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/CurrencyCode\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/TransactionDate\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/ValueDate\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/TransactionTypeText\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/ISIN\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/InstrumentName\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/NetAmount\" \/>\n <xsl:text>;<\/xsl:text>\n <xsl:value-of select=\"content\/properties\/TransactionCurrencyPrice\" \/>\n <xsl:text>&#xA;<\/xsl:text>\n <\/xsl:for-each>\n <\/xsl:template>\n<\/xsl:stylesheet>"},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"Define the xsl:output tag to output UTF-8 encoded text."},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"Define the feed tag."},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"Define the header rows with <xsl:text>header1;header2;...headerN;."},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"Pick up the transaction information from each entry with a for-each loop."},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"Select each value with a tag."},
{"title":"Example XSLT used for converting XML to CSV", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"how-to-convert-an-xml-file-to-csv.html#idm46709273310176", "body":"Add a separator between each row."},
{"title":"Using the XSLT template in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-convert-an-xml-file-to-csv.html#using-the-xslt-template-in-a-camel-route", "body":"Include the XSLT template in the Camel route by adding URI. Camel will process the XML and output CSV according to the rules defined in the XSLT."},
{"title":"Using the XSLT template in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-convert-an-xml-file-to-csv.html#using-the-xslt-template-in-a-camel-route", "body":"Example shows the following URIs:"},
{"title":"Using the XSLT template in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-convert-an-xml-file-to-csv.html#using-the-xslt-template-in-a-camel-route", "body":"Path to the output XSLT file \"ExampleXSLT.xslt\"."},
{"title":"Using the XSLT template in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-convert-an-xml-file-to-csv.html#using-the-xslt-template-in-a-camel-route", "body":"Path to the output CSV."},
{"title":"Using the XSLT template in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-convert-an-xml-file-to-csv.html#using-the-xslt-template-in-a-camel-route", "body":"<routes xmlns=\"http:\/\/camel.apache.org\/schema\/spring\"> \n <route id=\"convertCustodyTransactionFile\">\n <from uri=\"file:{{back.writable.dir}}\/integrations\/customFiles\/xml?antInclude=*.xml&amp;noop=false&amp;readLock=changed&amp;readLockCheckInterval=5000&amp;moveFailed=.failed&amp;move=.camel\" \/>\n <to uri=\"xslt:file:{{back.writable.dir}}\/integrations\/customFiles\/xslt\/ExampleXSLT.xslt\"\/> \n <to uri=\"file:{{back.writable.dir}}\/integrations\/customFiles\/csv?autoCreate=true&amp;fileName=${file:onlyname.noext}.csv&amp;charset=iso-8859-1\"\/>\n <\/route>\n<\/routes>"},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"Most FA readers expect CSV files to use point as a decimal separator. If your file uses a different separator, you can change it by using Camel CSV decimal format change processor included in FA Connector."},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"To use the processor in your Camel route:"},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"Set the following headers:"},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"CamelCSVOriginalDecimalSeparator and the original CSV separator as its value."},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"CamelCSVNewDecimalSeparator and the new CSV separator as its value."},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"CamelCSVFieldsToReplace and the fields you want the change to apply to as its value."},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"Transform the CSV message into a list of maps by unmarshalling with useMaps option set to true. "},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"Call the csvDecimalFormatChangeProcessor process."},
{"title":"Change CSV decimal separator in a Camel route", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"change-csv-decimal-separator-in-a-camel-route.html", "body":"Transform the list of maps back into CSV by marshalling with useMaps set to true."},
{"title":"Example of using CSV decimal format change processor", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"change-csv-decimal-separator-in-a-camel-route.html#idm46709273271664", "body":"Example of using CSV decimal format change processor"},
{"title":"Example of using CSV decimal format change processor", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"change-csv-decimal-separator-in-a-camel-route.html#idm46709273271664", "body":"<setHeader name=\"CamelCSVOriginalDecimalSeparator\">\n\t<simple>\n\t\t<![CDATA[,]]> \n\t<\/simple>\n<\/setHeader>\n<setHeader name=\"CamelCSVNewDecimalSeparator\">\n\t<simple>\n\t\t<![CDATA[.]]>\n\t<\/simple>\n<\/setHeader>\n<setHeader name=\"CamelCSVFieldsToReplace\">\n\t<simple>\n\t\t<![CDATA[amount]]>\n\t<\/simple>\n<\/setHeader>\n<unmarshal><csv useMaps=\"true\" delimiter=\";\"\/><\/unmarshal>\n<process ref=\"csvDecimalFormatChangeProcessor\"\/>\n<marshal><csv useMaps=\"true\" delimiter=\";\"\/><\/marshal>"},
{"title":"Reporting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"reporting-276242.html", "body":"FA reporting tools allow you to make customized reports and data analyses based on the data available in FA. The reports are generated for the selected parameters, such as portfolios, dates, or languages."},
{"title":"Reporting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"reporting-276242.html", "body":"You can generate PDF, XLSX, or text-based reports using existing templates available in FA Back or use the fully-integrated reporting platform jsreport to create new templates with HTML, CSS and JavaScript. To learn more about making jsreport templates, see Client reporting."},
{"title":"Reporting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"reporting-276242.html", "body":"The Jupyter Notebook feature integrated in FA lets you analyze the data with the help of Python libraries like pandas, plotly and pyfolio. To learn more about using Jupyter Notebook for data analysis in FA, see the Data analysis section."},
{"title":"Client reporting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"jsreport.html", "body":"FA embeds jsreport, an online report building tool. It allows you to develop custom reports of various file formats (PDF, XLSX, etc.) that your users may generate directly from FA."},
{"title":"Client reporting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"jsreport.html", "body":"FA Solutions does not offer support for using jsreport. If you require a support plan for jsreport, please contact jsreport directly at https:\/\/jsreport.net\/buy\/support."},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"jsreport.html#prerequisites-122", "body":"To get started, the following prerequisites need to be met:"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"jsreport.html#prerequisites-122", "body":"FA version 3.8 or higher"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"jsreport.html#prerequisites-122", "body":"access to the FA Developer app"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"jsreport.html#prerequisites-122", "body":"username and password to access jsreport"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"jsreport.html#prerequisites-122", "body":"the jsreport setup package installed in FA (see Optional packages in FA Admin guide)"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"jsreport.html#prerequisites-122", "body":"basic understanding of HTML, CSS and (optionally) JavaScript"},
{"title":"Reports view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"jsreport.html#reports-view-in-fa-developer-app", "body":"The jsreport UI is accessed through the Reports view in FA Developer App. If the jsreport UI asks you to log in, enter your jsreport credentials."},
{"title":"Reports view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"jsreport.html#reports-view-in-fa-developer-app", "body":"The Reports view provides you access to the jsreport designer – an online tool to develop custom report templates. FA users can generate these reports from FA Back, FA Front and FA Fund Management apps."},
{"title":"Reports view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"jsreport.html#reports-view-in-fa-developer-app", "body":"The installed report templates are shown in the panel on the left. Navigate through the folders to view the template in the editor and test the report."},
{"title":"Building reports with FA using jsreport", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"jsreport.html#building-reports-with-fa-using-jsreport", "body":"To learn jsreport and how it integrates with FA, follow tutorials in this section and watch our webinar FA JSReport 101 webinar (February 22nd 2022)."},
{"title":"Building reports with FA using jsreport", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"jsreport.html#building-reports-with-fa-using-jsreport", "body":"Use FA's Sample reports as they are, or as templates, to build your own custom reports."},
{"title":"Building reports with FA using jsreport", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"jsreport.html#building-reports-with-fa-using-jsreport", "body":"Follow the jsreport official documentation."},
{"title":"Building reports with FA using jsreport", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"jsreport.html#building-reports-with-fa-using-jsreport", "body":"Check out our article on available parameters to gain an overview of variables received by jsreport when a report is invoked by FA: Parameters for dynamic report. This could be, for example, the start date and end date of the reporting period, a list of portfolio IDs to query, GraphQL authentication parameters, etc."},
{"title":"Building reports with FA using jsreport", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"jsreport.html#building-reports-with-fa-using-jsreport", "body":"Learn more about FA's GraphQL endpoints and how to query them: API integrations."},
{"title":"Design a report using static data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html", "body":"Design a report using static data"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#overview-124", "body":"This tutorial will teach you how to create a simple report in jsreport using static data. The report itself is not functional enough to be used with FA but the goal is to learn the basic of report creation. Using static data is a good way to work with the report design itself before turning it into a functional report."},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#steps-124", "body":"Steps"},
{"title":"Step 1 - Create a folder for the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#step-1---create-a-folder-for-the-report", "body":"It is a good practice to structure the reports into folders. Therefore, the first step in creating a report is to create a folder in which you can put all files related to the report:"},
{"title":"Step 1 - Create a folder for the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---designing-a-report-using-static-data.html#step-1---create-a-folder-for-the-report", "body":"Name the folder to be the same as your report name, e.g. Sample report."},
{"title":"Step 2 - Create a report template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#step-2---create-a-report-template", "body":"Next, right click on the Sample report folder and choose New Entity -> Template. Name the template Sample report."},
{"title":"Step 2 - Create a report template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---designing-a-report-using-static-data.html#step-2---create-a-report-template", "body":"By default, the template is configured to produce a PDF report based on HTML syntax using a template engine called Handlebars."},
{"title":"Step 2 - Create a report template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---designing-a-report-using-static-data.html#step-2---create-a-report-template", "body":"[Optional] The page setup could be adjusted as per requirement. For example, you can set the page format to A4 size instead of the letter size, which is the default setting."},
{"title":"Step 3 - Create a sample data set for the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#step-3---create-a-sample-data-set-for-the-report", "body":"Right click again on the sample report folder and create a new sample data set. Name it Sample data and link it to the your report, Sample report. Normally, you would create a data set using a GraphQL query that you plan to use in your report and then copying its output to be the sample data."},
{"title":"Step 3 - Create a sample data set for the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---designing-a-report-using-static-data.html#step-3---create-a-sample-data-set-for-the-report", "body":"Open Sample data and copy the following JSON structure into it:"},
{"title":"Step 3 - Create a sample data set for the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---designing-a-report-using-static-data.html#step-3---create-a-sample-data-set-for-the-report", "body":"Sample data"},
{"title":"Step 3 - Create a sample data set for the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---designing-a-report-using-static-data.html#step-3---create-a-sample-data-set-for-the-report", "body":"{\n  \"data\": {\n    \"portfolio\": {\n      \"client\": {\n        \"name\": \"Aaron Chan\"\n      },\n      \"portfolioName\": \"Investment portfolio\",\n      \"portfolioReport\": {\n        \"marketValue\": 994682.9,\n        \"cashBalance\": 30678361.61,\n        \"netAssetValue\": 31673044.51,\n        \"investments\": [\n          {\n            \"security\": {\n              \"name\": \"Vincit Oyj\",\n              \"securityCode\": \"VINCIT.HE\"\n            },\n            \"amount\": 155,\n            \"amountAfterOpenTradeOrders\": 155,\n            \"purchaseValue\": 11185.49,\n            \"positionValue\": 9020.73,\n            \"changePercent\": -0.193532871604194\n          },\n          {\n            \"security\": {\n              \"name\": \"Corem Property Group AB (publ)\",\n              \"securityCode\": \"CORE-PREF.ST\"\n            },\n            \"amount\": 2913,\n            \"amountAfterOpenTradeOrders\": 2913,\n            \"purchaseValue\": 473344.2,\n            \"positionValue\": 961290,\n            \"changePercent\": 1.030847742509573\n          },\n          {\n            \"security\": {\n              \"name\": \"Outokumpu Oyj\",\n              \"securityCode\": \"OUT1V.HE\"\n            },\n            \"amount\": 666,\n            \"amountAfterOpenTradeOrders\": 666,\n            \"purchaseValue\": 1898.1,\n            \"positionValue\": 15115.03,\n            \"changePercent\": 6.963242189557979\n          },\n          {\n            \"security\": {\n              \"name\": \"PledPharma AB\",\n              \"securityCode\": \"PLED.ST\"\n            },\n            \"amount\": 1801,\n            \"amountAfterOpenTradeOrders\": 1801,\n            \"purchaseValue\": 57746,\n            \"positionValue\": 9257.14,\n            \"changePercent\": -0.839692099885706\n          },\n          {\n            \"security\": {\n              \"name\": \"AB CALIFORNIA PORTFOLIO CLASS B\",\n              \"securityCode\": \"ALCBX.NMFQS\"\n            },\n            \"amount\": 0,\n            \"amountAfterOpenTradeOrders\": 1000,\n            \"purchaseValue\": 0,\n            \"positionValue\": 0,\n            \"changePercent\": 0\n          }\n        ]\n      }\n    }\n  }\n}"},
{"title":"Step 4 - Create a base template without dynamic content", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#step-4---create-a-base-template-without-dynamic-content", "body":"Now, open the report template which you named Sample report. The report template is basically an HTML file. It can contain CSS styles and JavaScript code in addition to the standard HTML code. Also, the features from the selected templating engine are available."},
{"title":"Step 4 - Create a base template without dynamic content", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---designing-a-report-using-static-data.html#step-4---create-a-base-template-without-dynamic-content", "body":"Add the following code to the template:"},
{"title":"Step 4 - Create a base template without dynamic content", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---designing-a-report-using-static-data.html#step-4---create-a-base-template-without-dynamic-content", "body":"Sample report without dynamic content"},
{"title":"Step 4 - Create a base template without dynamic content", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---designing-a-report-using-static-data.html#step-4---create-a-base-template-without-dynamic-content", "body":"<html>\n  <head>\n      <style>\n      <\/style>\n  <\/head>\n  <body>\n    <h1>This is a sample report<\/h1>\n  <\/body>\n<\/html>"},
{"title":"Step 4 - Create a base template without dynamic content", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---designing-a-report-using-static-data.html#step-4---create-a-base-template-without-dynamic-content", "body":"Then run the report to see the output in PDF format:"},
{"title":"Step 5 - Add dynamic content from the sample data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#step-5---add-dynamic-content-from-the-sample-data", "body":"In order to use values from the sample data in the report, you need to apply some syntax from the selected template library Handlebars. The template engine can access data from the JSON structure, iterate through it, have conditions and apply helper functions."},
{"title":"Step 5 - Add dynamic content from the sample data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---designing-a-report-using-static-data.html#step-5---add-dynamic-content-from-the-sample-data", "body":"In order to get the client name value from the JSON structure, add the following line after the report title:"},
{"title":"Step 5 - Add dynamic content from the sample data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---designing-a-report-using-static-data.html#step-5---add-dynamic-content-from-the-sample-data", "body":"Sample report with dynamic content"},
{"title":"Step 5 - Add dynamic content from the sample data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---designing-a-report-using-static-data.html#step-5---add-dynamic-content-from-the-sample-data", "body":"<html>\n  <head>\n      <style>\n      <\/style>\n  <\/head>\n  <body>\n    <h1>This is a sample report<\/h1>\n    <p>{{data.portfolio.client.name}}<\/p>\n  <\/body>\n<\/html>"},
{"title":"Step 5 - Add dynamic content from the sample data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---designing-a-report-using-static-data.html#step-5---add-dynamic-content-from-the-sample-data", "body":"When the report is run, the name from the sample data appears below the title:"},
{"title":"Step 6 - Looping through position data and showing it in a table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#step-6---looping-through-position-data-and-showing-it-in-a-table", "body":"It it possible to loop through a data structure such as positions and then show the individual positions in a table. The size of the table (i.e. number of rows) depends on the number of positions. The below HTML code contains a dynamically created table with position data along with the total row produced from the sample data."},
{"title":"Step 6 - Looping through position data and showing it in a table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---designing-a-report-using-static-data.html#step-6---looping-through-position-data-and-showing-it-in-a-table", "body":"Creating a table from position data"},
{"title":"Step 6 - Looping through position data and showing it in a table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---designing-a-report-using-static-data.html#step-6---looping-through-position-data-and-showing-it-in-a-table", "body":"<table>\n  {{#each  data.portfolio.portfolioReport.investments}}\n  <tr>\n   <td>{{security.name}}<\/td><td>{{positionValue}}<\/td>\n  <\/tr>\n  {{\/each}}\n  <tr>\n    <td>TOTAL<\/td><td>{{data.portfolio.portfolioReport.marketValue}}<\/td>\n  <\/tr>\n<\/table>"},
{"title":"Step 6 - Looping through position data and showing it in a table", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---designing-a-report-using-static-data.html#step-6---looping-through-position-data-and-showing-it-in-a-table", "body":"The output of this is as follows:"},
{"title":"Step 7 - Styling the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#step-7---styling-the-report", "body":"As mentioned earlier, the report is implemented using HTML and JavaScript. All the capabilities of those technologies are available to style the report as much as you want. In this tutorial, we would apply a free CSS template from w3schools.org to make the report look a bit nicer. In addition, we also apply a JavaScript function to format the market value with two decimals and a thousands separator."},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---designing-a-report-using-static-data.html#troubleshooting-124", "body":"I try to generate a report in the jsreport UI but when I click Run I get an error saying \"TypeError: Cannot read property 'param-xyz' of undefined\"."},
{"title":"Troubleshooting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---designing-a-report-using-static-data.html#troubleshooting-124", "body":"The report expects to receive parameters from FA Back but as the generation is triggered directly from the jsreport UI, the report script does not get the parameters. Running the report with dynamic data is explained in Convert a static report to a functional FA report."},
{"title":"Convert a static report to a functional FA report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html", "body":"Convert a static report to a functional FA report"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#overview-125", "body":"In this tutorial, you will turn the previously created static report into a dynamic report template you can use with FA to generate a report for a selected portfolio."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#overview-125", "body":"This tutorial assumes you have completed the previous tutorial and continues where it left off."},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#steps-125", "body":"Steps"},
{"title":"Step 1 - Apply tags to make the report available as a report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-1---apply-tags-to-make-the-report-available-as-a-report-in-fa", "body":"In order for FA to recognize a report defined in jsreport and make it available, the report template needs to be tagged with the report tag."},
{"title":"Step 1 - Apply tags to make the report available as a report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-1---apply-tags-to-make-the-report-available-as-a-report-in-fa", "body":"Click on the report template Sample Report."},
{"title":"Step 1 - Apply tags to make the report available as a report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-1---apply-tags-to-make-the-report-available-as-a-report-in-fa", "body":"Click on select ... under the Tags section."},
{"title":"Step 1 - Apply tags to make the report available as a report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-1---apply-tags-to-make-the-report-available-as-a-report-in-fa", "body":"Choose report and param-portfolioId tags and click Ok."},
{"title":"Step 1 - Apply tags to make the report available as a report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-1---apply-tags-to-make-the-report-available-as-a-report-in-fa", "body":"Once the report template has a tag, it will be available as a report in FA."},
{"title":"Step 1 - Apply tags to make the report available as a report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-1---apply-tags-to-make-the-report-available-as-a-report-in-fa", "body":"However, the sample report data is not available to it and the report itself will not work yet. The next step is to dynamically fetch the data for a selected portfolio."},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"When generating a report in FA, the GraphQL token information is passed as a parameter. This information is required by the report to make a call to FA’s GraphQL API, from which it can fetch data from FA. In order for this to work, the report requires JavaScript logic that is called when the report is instantiated. This logic would make a call to the API and make the data available to the report in a similar manner as the sample data."},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"First, create a script file by right-clicking the sample report's folder and choosing New Entity -> script. Call the script file logic.js."},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"The next step is to link the JavaScript file to the report template:"},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"Most of the the JavaScript code is run in the function beforeRender(), which means it is run before the report and its template is rendered. Its job is to use the Axios library to make a GraphQL API call back to FA using the portfolio ID given from FA as a parameter."},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"Copy the content of the following JavaScript into the logic.js file:"},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"const axios = require('axios')\n\nasync  function beforeRender(req, res)  {\n\n  let params = req.data.params;\n  \n  \/\/ If query is expecting a list of portfolio ids, use the following\n  \/\/var ids = params[\"param-portfolioId\"].map( v => Number(v));\n  \n  \/\/ if query is expecting a single long portfolio id, use the following\n  var ids = Number(params[\"param-portfolioId\"])\n  \n  await axios({\n    url: params[\"param-graphqlUri\"],\n    method: 'post',\n    headers: {\n      Authorization: 'Bearer ' + params[\"param-userAccessToken\"]\n    },\n    data: {\n      query: `\nquery PortfolioOverview($portfolioId: Long ) {\n  portfolio(id: $portfolioId) {\n    client: primaryContact {\n      name\n    }\n    portfolioName: name\n    portfolioReport: portfolioReport(\n      calculateExpectedAmountBasedOpenTradeOrders: true) {\n      marketValue: positionMarketValue\n      cashBalance: accountBalance\n      netAssetValue: marketValue\n      investments: portfolioReportItems {\n        security {\n          name\n          securityCode\n        }\n        amount\n        amountAfterOpenTradeOrders\n        purchaseValue:purchaseTradeAmount\n        positionValue: marketTradeAmount\n        changePercent: valueChangeRelative\n      }\n    }\n  }\n}  \n    `,\n    variables: {\n      portfolioId: ids\n    }\n  }\n  }).then((result) => {\n    req.data = result.data\n  });  \n}\n"},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"There are three parameters that are passed from FA to jsreport when the report is called. Two of them are always passed:"},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"userAccessToken - token of the user calling the report (the API call is made on behalf of that user)"},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"graphqlUri - internal address to the FA’s GraphQL API"},
{"title":"Step 2 - Calling the GraphQL API to dynamically create the data set used in the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-2---calling-the-graphql-api-to-dynamically-create-the-data-set-used-in-the-report", "body":"The rest of the parameters are controlled by the tags. Since we chose a tag called param-portfolioId, the report window asks the user to select a portfolio and passes that portfolio’s ID along with the parameters called params. That parameter is then used in the GraphQL call as a variable."},
{"title":"Step 3 - Testing the report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-3---testing-the-report-in-fa", "body":"In order to test the report, you need to go to FA and run the report against a portfolio."},
{"title":"Step 3 - Testing the report in FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#step-3---testing-the-report-in-fa", "body":"As a result, jsreport will generate a PDF report using the template you built and return back a PDF file:"},
{"title":"Conclusion", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---converting-a-static-report-to-a-functional-fa-report.html#conclusion", "body":"This tutorial series walked you through, step by step, how to create a simple dynamic report. All the relevant steps were included although this approach is not necessarily in all aspects the best possible way to create a report. For example, it is a better practice to store the data from FA under a variable instead of directly under req.data (e.g. it would be better to store under req.data.result1). By doing that, you can manage multiple datasets if needed."},
{"title":"Parameters for dynamic report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-available-in-a-report.html", "body":"Parameters for dynamic report"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-available-in-a-report.html#overview-126", "body":"Information can be passed to jsreport from FA in the form of parameters. There are some parameters (params) which jsreport can request and some which are passed irrespectively. This page contains information about both parameter types."},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"FA Back sends the following parameters without asking. There is no need to create and attach tags for them."},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"The following parameters can be requested from FA. You need to attach the tags to a report to get the values from FA."},
{"title":"Using group parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-available-in-a-report.html#using-group-parameters", "body":"The best practice is to use either the param-groupBy or param-groupBy2 parameter (but not both) together with param-group. When you select the \"Asset class\" or \"Asset type\" value in either of the Grouping selectors, this dynamically makes the \"Allocation group\" (i.e. param-group) selector to appear. Thus, param-group should not be used alone."},
{"title":"Localize texts in a report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-localize-texts-in-a-report.html", "body":"jsreport (3.X versions) supports report generation in multiple languages. This how-to deals with the generation of a report in three languages (as an example): English, Finnish and Swedish."},
{"title":"Setting up translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-localize-texts-in-a-report.html#setting-up-translations", "body":"The language file is a JSON data file, and it must contain a proper JSON structure (https:\/\/www.w3resource.com\/JSON\/structures.php). All language data files must contain the same structure. Only the values are different and translated to their particular language."},
{"title":"Setting up translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-localize-texts-in-a-report.html#setting-up-translations", "body":"In the example below, you have a dataset in three languages. It contains basic information, such as language name, language code, and page title. Other than that, there are a set of field names that can be used as headers in a table to display portfolio information."},
{"title":"en.json", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-localize-texts-in-a-report.html#en-json", "body":"{\n \"lang\": \"English\",\n \"langCode\": \"en\",\n \"title\": \"Report\",\n \"portfolioFields.id\": \"ID\",\n \"portfolioFields.shortName\": \"Short Name\",\n \"portfolioFields.name\": \"Name\",\n \"portfolioFields.currency\": \"Currency\",\n \"portfolioFields.country\": \"Country\"\n}"},
{"title":"fi.json", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-localize-texts-in-a-report.html#fi-json", "body":"{\n \"lang\": \"Suomi\",\n \"langCode\": \"fi\",\n \"title\": \"Salkut\",\n \"portfolioFields.id\": \"ID\",\n \"portfolioFields.shortName\": \"Lyhyt nimi\",\n \"portfolioFields.name\": \"Nimi\",\n \"portfolioFields.currency\": \"Valuutta\",\n \"portfolioFields.country\": \"Maa\"\n}"},
{"title":"sv.json", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-localize-texts-in-a-report.html#sv-json", "body":"{\n \"lang\": \"Sverige\",\n \"langCode\": \"sv\",\n \"title\": \"Portföljer\",\n \"portfolioFields.id\": \"ID\",\n \"portfolioFields.shortName\": \"Kort Namm\",\n \"portfolioFields.name\": \"Namm\",\n \"portfolioFields.currency\": \"Valuta\",\n \"portfolioFields.country\": \"Land\"\n}"},
{"title":"sv.json", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-localize-texts-in-a-report.html#sv-json", "body":"Once these files are created, you can use them in you templates. There must be only one file per language."},
{"title":"Using translations in a report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-localize-texts-in-a-report.html#using-translations-in-a-report", "body":"To use the translations in a report, use the localize method and specify, as input parameters, the translation key and the relative path to the translation files:"},
{"title":"Using translations in a report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-localize-texts-in-a-report.html#using-translations-in-a-report", "body":"{{localize \"translationKey\" \"path\"}}"},
{"title":"Using translations in a report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-localize-texts-in-a-report.html#using-translations-in-a-report", "body":"For example, with the translations defined above, you will need to add this in your report if you want to translate the title:"},
{"title":"Using translations in a report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-localize-texts-in-a-report.html#using-translations-in-a-report", "body":"{{localize \"title\" \"\/Portfolios\"}}"},
{"title":"Using translations in a report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-localize-texts-in-a-report.html#using-translations-in-a-report", "body":"jsreport searches for the translation files in the specified path and for a matching key within the correct language file. After that, jsreport fills in the corresponding value."},
{"title":"Testing the translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-localize-texts-in-a-report.html#testing-the-translations", "body":"To test the localization in the jsreport UI, do the following:"},
{"title":"Testing the translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-localize-texts-in-a-report.html#testing-the-translations", "body":"Type the language code in the Template language field in the localization section in the Properties panel."},
{"title":"Testing the translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-localize-texts-in-a-report.html#testing-the-translations", "body":"Click Run to run the template: the report should then be localized in the language you selected in the previous step."},
{"title":"Testing the translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-localize-texts-in-a-report.html#testing-the-translations", "body":"For example, if you want to test your report with the Finnish localization in the jsreport UI, you need to add fi in the Template language field."},
{"title":"Testing the translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-localize-texts-in-a-report.html#testing-the-translations", "body":"When you run the report in the jsreport UI, it will use the values from the fi.json file."},
{"title":"Testing the translations", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-localize-texts-in-a-report.html#testing-the-translations", "body":"Note that when generating your report from, for example, FA Back, the language you choose overrides the value you set in the Template language field."},
{"title":"Add a logo stored in FA Back", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"add-a-logo-stored-in-fa-back.html", "body":"Add a logo stored in FA Back"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"add-a-logo-stored-in-fa-back.html#idm46709272877488", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"add-a-logo-stored-in-fa-back.html#idm46709272877488", "body":"You can use a logo stored in FA Back's document bank when designing a report in jsreport. The logo is sent to the jsreport environment each time a report is generated. For more information about how to upload a logo in FA Back, see Preference - Reportingin FA Back reference."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"add-a-logo-stored-in-fa-back.html#idm46709272877488", "body":"The next step is to configure the report to use the provided logo."},
{"title":"Set the tag on the report template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"add-a-logo-stored-in-fa-back.html#idm46709272877312", "body":"Set the tag on the report template"},
{"title":"Set the tag on the report template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"add-a-logo-stored-in-fa-back.html#idm46709272877312", "body":"Make the logo available in the report by selecting the param-logoImage tag in the template properties."},
{"title":"Add the logo in the HTML template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"add-a-logo-stored-in-fa-back.html#idm46709272881648", "body":"Add the logo in the HTML template"},
{"title":"Add the logo in the HTML template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"add-a-logo-stored-in-fa-back.html#idm46709272881648", "body":"The logo is provided as a string representing a base64-encoded byte array. Use the code below to display the logo in the report template."},
{"title":"Add the logo in the HTML template", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"add-a-logo-stored-in-fa-back.html#idm46709272881648", "body":"<img src=\"data:image\/png;base64,{{params.param-logoImage}}\" \/>"},
{"title":"Prevent getting empty reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-prevent-getting-empty-reports.html", "body":"Prevent getting empty reports"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-prevent-getting-empty-reports.html#idm46709272865120", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-prevent-getting-empty-reports.html#idm46709272865120", "body":"If there is no data to include in a report, FA generates an empty document. This might happen, for example, if you need to report new transactions created in a portfolio every month for multiple portfolios. In this case, FA produces a report even if a portfolio does not have any new transactions during the month."},
{"title":"Using an afterRender() function to prevent empty reports from generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-prevent-getting-empty-reports.html#idm46709272864944", "body":"Using an afterRender() function to prevent empty reports from generation"},
{"title":"Using an afterRender() function to prevent empty reports from generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-prevent-getting-empty-reports.html#idm46709272864944", "body":"Use an afterRender() function in your report script to control the report generation based on the data the report received. Implement your report-specific condition in that function. If you do not want the report to be generated, throw an error."},
{"title":"Using an afterRender() function to prevent empty reports from generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-prevent-getting-empty-reports.html#idm46709272864944", "body":"Here is an example of an afterRender() function that prevents the report generation if the report's transaction list is empty:"},
{"title":"Using an afterRender() function to prevent empty reports from generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-prevent-getting-empty-reports.html#idm46709272864944", "body":"async function afterRender(req, res) {\n  if( req.data.transactions.length === 0) throw new Error(\"Empty report\")\n}"},
{"title":"Skipped reports in the report generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"how-to-prevent-getting-empty-reports.html#idm46709272866944", "body":"Skipped reports in the report generation"},
{"title":"Skipped reports in the report generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-prevent-getting-empty-reports.html#idm46709272866944", "body":"Please consider the following when applying the solution:"},
{"title":"Skipped reports in the report generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-prevent-getting-empty-reports.html#idm46709272866944", "body":"If you create a report from FA Back Report windowand your afterRender() function throws an error, you will be prompted with an unspecified error screen."},
{"title":"Skipped reports in the report generation", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-prevent-getting-empty-reports.html#idm46709272866944", "body":"If you create a report for a group of portfolios and your afterRender() function prevents the report generation for some of the portfolios, the excluded portfolios will be reported as \"generation failed\" in the report generation summary CSV file."},
{"title":"Customize the NAV report (XLSX)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html", "body":"Learn how to create a custom version of the XLSX report which is exportable from the FA Fund Management App interface."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#overview-77368", "body":"This tutorial teaches you how to customize FA's standard NAV report (XLSX) that is exportable from the FA Fund Management App interface:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---custom-fund-nav-report-xlsx.html#overview-77368", "body":"Add a new tab\/worksheet to the standard NAV report."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---custom-fund-nav-report-xlsx.html#overview-77368", "body":"Add custom data to it."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---custom-fund-nav-report-xlsx.html#overview-77368", "body":"Make the report exportable from the FA Fund Management App interface."},
{"title":"Steps", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#steps-77376", "body":"Steps"},
{"title":"Step 1 - Locate the standard NAV report directory", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-1---locate-the-standard-nav-report-directory", "body":"Locate the NAV report directory, which is named NAV. This directory contains all standard NAV report content that is used by default by FA Fund Management App to generate the PDF and XLSX reports."},
{"title":"Step 2 - Clone the NAV directory", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-2---clone-the-nav-directory", "body":"Create a copy of the NAV directory. To do this, right-click the NAV directory and choose Clone. Enter a name for the new directory. In this tutorial, the name is NAV(custom)."},
{"title":"Step 3 - Clone the XLSX report worksheet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-3---clone-the-xlsx-report-worksheet", "body":"Open the NAV(custom) directory you created. Find the excelSheets subfolder with the worksheets of the NAV XLSX workbook. Open it and find the excelSheets subfolder with the preview file. This is the \"Preview summary\" sheet of the XLSX report."},
{"title":"Step 3 - Clone the XLSX report worksheet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-3---clone-the-xlsx-report-worksheet", "body":"Create a copy of the preview file: right-click the file, choose Clone and enter a name for the copy. In this tutorial, the name is preview(custom)."},
{"title":"Step 4 - Change the name of the table element", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-4---change-the-name-of-the-table-element", "body":"Change the name of the table element in the newly cloned worksheet to avoid a conflict with the table name of the original preview file that you just cloned. The table element name is the name of the XLSX worksheet, so it should be descriptive. In this tutorial the name is Preview Custom."},
{"title":"Step 5 - Add a reference to your new sheet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-5---add-a-reference-to-your-new-sheet", "body":"Open the NAV Excel file. It is an XLSX workbook – the document that contains the sheets in the excelSheets subfolder. Add the code to include the sheet you cloned in Step 3. To do this, copy the following code into the NAV Excel file, as shown in the red-marked area in the screenshot:"},
{"title":"Step 5 - Add a reference to your new sheet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-5---add-a-reference-to-your-new-sheet", "body":"{{!-- Sheet for Custom Preview summary --}}\n{#asset .\/excelSheets\/preview(custom)}"},
{"title":"Step 6 - Verify that the new worksheet was added", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-6---verify-that-the-new-worksheet-was-added", "body":"Choose the NAV Excel file and click Run. This should load the report using dummy data from the dataGraphQL file. It should now include the new sheet you cloned, renamed and added. Now you have your own sheet to customize as you wish, in addition to the standard ones that are preserved."},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"After you have created a new sheet and added it to the workbook, add your custom data to it:"},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"Create a custom script. Right-click the scripts folder, choose New entity > script and enter a file name. In this tutorial the name is custom-script."},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"There might be an excel-script file in the scripts folder too. Leave it untouched."},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"Open the custom-script file and add the following code to it:"},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"\/*\nCustom script\nReceives a NAVCalculationDTO object in req.data.current\n*\/\n\nasync function beforeRender(req) {\n    CurrentNAV = req.data.current;\n\n    req.data.custom = {\n        title: `NAV Summary for ${CurrentNAV.portfolioName}`\n    }\n}"},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"The beforeRender() function is run prior to a report's rendition. You can do all your data transformations inside this function, and finally make the data available to the report by tagging it onto the req.data object, as it is done with the custom object in the above code. The above code block creates a string NAV Summary for <name of the portfolio>, which you can then use in your report."},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"The NAV report will receive an NAVCalculationDTO object in the following properties:"},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"req.data.current contains the NAV calculation data from the requested date."},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"req.data.previous contains the calculation data for the previously accepted NAV."},
{"title":"Step 7 - Create a custom script file", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-7---create-a-custom-script-file", "body":"req.data.change contains the difference between the current and previous NAV calculations."},
{"title":"Step 8 - Attach the custom script", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-8---attach-the-custom-script", "body":"To make use of your custom script, attach it to the NAV Excel file, as shown on the screenshot. Then run the script by choosing the NAV Excel file and clicking Run."},
{"title":"Step 9 - Add the custom data to the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-9---add-the-custom-data-to-the-report", "body":"In step 7, you created a script that added the NAV Summary for <portfolio name> string in the title variable inside the custom object tagged onto the report data. You can now refer to it in a worksheet with {{custom.title}} (in double brackets)."},
{"title":"Step 9 - Add the custom data to the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-9---add-the-custom-data-to-the-report", "body":"{{custom.title}}"},
{"title":"Step 9 - Add the custom data to the report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-9---add-the-custom-data-to-the-report", "body":"Add this to the preview(custom) worksheet you created earlier in step 3 and 4, as shown in the screenshot."},
{"title":"Step 10 - Confirm that the custom data is working", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-10---confirm-that-the-custom-data-is-working", "body":"In the previous step, you added custom data in the new NAV report worksheet. Try if everything works: choose the NAV Excel file and click Run. In the preview(custom) worksheet, it should now say NAV Summary for <portfolio name>. As the report is run directly inside jsreport, it uses the dummy data in dataGraphQL to populate <portfolio name>. In this tutorial, the dummy data used resulted in FA Equity + . However, if you run the report from FA Fund Management App, <portfolio name> is replaced with the name of your fund portfolio."},
{"title":"Step 11 - Enabling the Custom NAV Summary Report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-11---enabling-the-custom-nav-summary-report", "body":"In FA Back, open your fund portfolio and go to the Fund Settings > Reporting tab. Define the path for FA Fund Management App to locate your custom report in the NAV report name (xlsx) field. The path is \/<folder_in_jsreport>\/<report_template_file>. If you followed the naming in this tutorial, the path is:"},
{"title":"Step 11 - Enabling the Custom NAV Summary Report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-11---enabling-the-custom-nav-summary-report", "body":"\/NAV(custom)\/NAV Excel"},
{"title":"Step 11 - Enabling the Custom NAV Summary Report", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-11---enabling-the-custom-nav-summary-report", "body":"This makes FA Fund Management App use the custom XLSX report you created."},
{"title":"Step 12 - Verify that the report is exportable from FA Fund Management App", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-12---verify-that-the-report-is-exportable-from-fa-fund-management-app", "body":"In step 11, you replaced the report generated when clicking the XLSX icon in FA Fund Management App with a custom version."},
{"title":"Step 12 - Verify that the report is exportable from FA Fund Management App", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-12---verify-that-the-report-is-exportable-from-fa-fund-management-app", "body":"Verify that it works:"},
{"title":"Step 12 - Verify that the report is exportable from FA Fund Management App", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-12---verify-that-the-report-is-exportable-from-fa-fund-management-app", "body":"Open FA Fund Management App and find the fund for which you have changed the path to the NAV Excel report in step 11."},
{"title":"Step 12 - Verify that the report is exportable from FA Fund Management App", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-12---verify-that-the-report-is-exportable-from-fa-fund-management-app", "body":"Double-click a fund to open the NAV window."},
{"title":"Step 12 - Verify that the report is exportable from FA Fund Management App", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"tutorial---custom-fund-nav-report-xlsx.html#step-12---verify-that-the-report-is-exportable-from-fa-fund-management-app", "body":"Click the XLSX icon to download the custom NAV report XLSX."},
{"title":"Set number format in reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"formatting-numbers-in-reports.html", "body":"You can define the number format to apply in your reports – set the decimal separator, thousands separator, and the number of decimals. You can define the number format in the following ways:"},
{"title":"Set number format in reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"formatting-numbers-in-reports.html", "body":"Set number format depending on the chosen language, which can be the dynamic language parameter the user chooses when generating the report. See the instruction in Dynamic number formatting based on the user-chosen language."},
{"title":"Set number format in reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"formatting-numbers-in-reports.html", "body":"Set number format for each number in the report when constructing the template. See the instruction in Static number formatting fully controlled by the user."},
{"title":"Set number format in reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"formatting-numbers-in-reports.html", "body":"In both approaches, you need to define the number format using parameters in a helper function. Then, you need to apply the function for each number presented in the template."},
{"title":"Set number format in reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"formatting-numbers-in-reports.html", "body":"If no helper function is used to define the number format, the number format of the JavaScript data type Number will be used. The decimal separator is a period (.), the number of decimals is presented as it is and no thousand separator is applied. For example: 1337.1337."},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"In the templates available in the Sample reports section, the Intl.NumberFormat JavaScript object creates a dynamic number format that depends on the language the user chooses when generating a report."},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"You can use the helper function below to set the number format based on a given locale (for example, en-US, fi-FI or sv-SE). If you don't want the number format to depend dynamically on the selected language, you can hardcode the language each time you apply the helper function in the template code."},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"The helper function below accepts the following input arguments:"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"numberToFormat (required)"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"locale (optional)"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"style (optional)"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"minFractions (optional)"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"maxfractions (optional)"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"If left empty, optional parameters are initialized to their default values defined in the function code below."},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"\/**\n* Format numbers to the specified locale using Intl.NumberFormat.\n* https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/Intl\/NumberFormat\/NumberFormat\n* @param: {number} numberToFormat - The input number to format.\n* @param: {string} locale - The locale string defining the format, for example, \"en-US\".\n* @param: {string} style - The type of number to format the input number to, for example, \"decimal\".\n* @param: {number} minFractions - The minimum number of decimals (as an integer).\n* @param: {number} maxFractions - The maximum number of decimals (as an integer).\n*\/\n\nfunction formatNumber(numberToFormat, locale, style, minFractions, maxFractions){\n    if(isNaN(numberToFormat)) return null\n    try{\n        \/\/ Because of how the Handlebars language works, the default values have to be specified here and not where the input parameters are first defined.\n        locale = (typeof locale !== 'string' ? undefined : locale)\n        style = (typeof style !== 'string' ? 'decimal' : style)\n        minFractions = (typeof minFractions !== 'number' ? 0 : minFractions)\n        maxFractions = (typeof maxFractions !== 'number' ? 2 : maxFractions)\n\n        const numberFormat = new Intl.NumberFormat(locale, {style: style,minimumFractionDigits: minFractions, maximumFractionDigits: maxFractions})\n        return numberFormat.format(Number(numberToFormat))\n    }catch(error){\n        console.error(\"Unable to format number.\")\n        console.error(error)\n        return numberToFormat\n    }\n}"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"Example 1. Using default values for input parameters. The example below uses the formatNumber() helper function with one required argument (the input number to format). Other input parameters are initialized to their default values."},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"{{formatNumber 1337.1337}}"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"Result:"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"1,337.13"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"Example 2. Passing arguments for all input parameters. The example below passes arguments to all five input parameters available in the formatNumber() helper function."},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"{{formatNumber 1337.1337, \"sv-SE\", \"decimal\", 2, 2}}"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"Result:"},
{"title":"Dynamic number formatting based on the user-chosen language", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"formatting-numbers-in-reports.html#dynamic-number-formatting-based-on-the-user-chosen-language", "body":"1 337,13"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"In some cases, Intl.NumberFormat isn't suitable for defining the number format. For instance, a common interpretation of the Swiss number format is that all numbers except currencies should use the SI system and therefore have a comma (,) as the decimal separator and a space ( ) as the thousands separator. Currencies, however, should use a period (.) as the decimal separator and an apostrophe (') as the thousands separator. Such number format cannot be implemented using Intl.NumberFormat and a single locale."},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"In such cases, you can use the alternative number formatting function and specify all number formatting parameters directly each time the helper function is applied. This option lets you choose exactly what number format to use for each number."},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"The helper function below accepts the following input arguments:"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"inputNumber (required)"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"numberOfDecimals (optional)"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"decimal (optional)"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"thousandsSeparator (optional)"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"multiplyer (optional)"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"nan (optional)"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"zeros (optional)"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"If left empty, optional parameters are initialized to their default values defined in the function code below."},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"\/**\n * Format numbers to a format fully controlled by your input parameters.\n * @param {number} inputNumber - The input number to format.\n * @param {number} numberOfDecimals - The number of decimal places.\n * @param {string} decimal - Decimal separator, for example, \".\" or \",\".\n * @param {string} thousandsSeparator- Thousands separator, for example, \" \" or \"'\".\n * @param {number} multiplyer - The number to multiply the input number by (100 is favourably used for percentage).\n * @param {string} nan - The string to return if the input number parameter is not a number.\n * @param {boolean} zeros - Whether zeros should be returned as numbers (true) or emtpy strings (false).\n *\/\nfunction formatNumberAlternative(inputNumber, numberOfDecimals, decimal, thousandsSeparator, multiplyer, nan, zeros) {\n  \/\/ Default values are defined below (SI-style with decimal as comma and space as thousand separator).\n  numberOfDecimals = typeof numberOfDecimals !== 'number' ? 2 : numberOfDecimals\n  decimal = typeof decimal !== 'string' ? ',' : decimal\n  thousandsSeparator = typeof thousandsSeparator !== 'string' ? ' ' : thousandsSeparator\n  multiplyer = typeof multiplyer !== 'number' ? 1 : multiplyer\n  nan = typeof nan !== 'string' ? '' : nan\n\n  if (inputNumber == null || typeof inputNumber !== 'number') {\n    return nan\n  }\n\n  if (inputNumber == 0.0 && !zeros) {\n    return ''\n  }\n\n  inputNumber = (+(Math.round(+(inputNumber*multiplyer + 'e' + numberOfDecimals )) + 'e' + -numberOfDecimals )).toFixed(numberOfDecimals)\n  const numberArray = inputNumber.toString().split('.')\n  const separatedNumber = numberArray[0].replace(\/\\B(?=(\\d{3})+(?!\\d))\/g, thousandsSeparator)\n  inputNumber = inputNumber == 'NaN' ? nan : numberArray[1] ? `${separatedNumber}.${numberArray[1]}` : separatedNumber\n  inputNumber = inputNumber.toString().replace('.', decimal)\n  return inputNumber\n}"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"Example 1. Using default values for input parameters. The example below uses the helper function formatNumberAlternative() with one required argument (the input number to format). Other input parameters are initialized to their default values."},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"{{formatNumberAlternative 1337.1337}}"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"Result:"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"1 337,13"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"Example 2. Passing arguments for the first four input parameters. The example below passes arguments to the first four input parameters available in the formatNumberAlternative() helper function. The last three parameters are initialized to their default values specified in the helper function code."},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"{{formatNumberAlternative 1337.1337 2 \".\" \"'\"}}"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"Result:"},
{"title":"Static number formatting fully controlled by the user", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"formatting-numbers-in-reports.html#static-number-formatting-fully-controlled-by-the-user", "body":"1'337.13"},
{"title":"Sample reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"jsreport---samples.html", "body":"FA provides sample report .jsrexport packages you can download and import to your jsreport 3.x environment. You can use them as is or customize them to your liking."},
{"title":"Sample reports", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"jsreport---samples.html", "body":"Note that you first need to import the sample-sharedFolders.jsrexport file to your root directory in the jsreport UI. This file contains general components used by reports, such as their header and footer, as well as localizations for different languages."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"jsreport---samples.html#idm46709272618880", "body":"Report structure"},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"jsreport---samples.html#idm46709272618880", "body":"The root directory contains (after importing the sample-sharedFolders.jsrexport file to jsreport) several different files and folders."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"jsreport---samples.html#idm46709272618880", "body":"The headerAndFooter report template file is reused in all PDF reports. Edit this template to change the header and footer of all PDF sample reports."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"jsreport---samples.html#idm46709272618880", "body":"The img directory contains images used in reports, such as the logo in the header and footer template. You can, for example, replace the logo.png in this directory to change the picture in the header and footer of all sample reports."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"jsreport---samples.html#idm46709272618880", "body":"The localization directory contains .json files with key-value pairs of language translations. The reports access these files to find a specific string for the chosen language\/locale."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"jsreport---samples.html#idm46709272618880", "body":"Then, for each sample report, there is a specific report directory. For example, the Positions report (see Positions report (PDF)) has its own directory. Like the root directly, the report directory contains several different files and folders."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"jsreport---samples.html#idm46709272618880", "body":"The report template file, for example Positions (Sample), is where you define the report content (using HTML and Handlebars). The template file also embeds a script section. Most number and date formatting applied to the report is put directly into that embedded section."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"jsreport---samples.html#idm46709272618880", "body":"The sampleData directory contains one or more .json files with dummy response data from FA's GraphQL API. These files can be used during development instead of live data. This way, you do not have to send an API request every time you want to run your report directly in the jsreport UI, and you can avoid hardcoding API request parameters."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"jsreport---samples.html#idm46709272618880", "body":"The styles directory contains the report-specific .css file(s) with the CSS that is applied to the report template."},
{"title":"Report structure", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"jsreport---samples.html#idm46709272618880", "body":"The scripts directory contains script (.js) files. These files are used, for example, to invoke FA's GraphQL API to fetch live data and potentially to transform the received data before it is put into the report. At least one script file in this directory is by default linked to the report template file, and will be invoked when the report is run."},
{"title":"Transactions report (XLSX)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xlsx-.html", "body":"Transactions report (XLSX)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xlsx-.html#overview-133", "body":"This is a template you can use to build customized transaction exports in Excel (either XLS or XLSX format). Import the template in the jsreport UI. Once the template is imported, you can generate the report from FA Back (for more information, see Generate reports for portfoliosin FA User guide)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xlsx-.html#highlights-133", "body":"This template includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--xlsx-.html#highlights-133", "body":"a GraphQL query to fetch transactions on selected portfolios over a selected time period"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transactions-report--xlsx-.html#highlights-133", "body":"the handling of start and end dates as request parameters and passing them to the query"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transactions-report--xlsx-.html#highlights-133", "body":"JavaScript logic to merge the transactions over multiple portfolios"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transactions-report--xlsx-.html#highlights-133", "body":"JavaScript logic to sort the list of transactions by transaction date before the Excel file is rendered"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xlsx-.html#files-133", "body":"sample-transactionsReportExcel.jsrexport"},
{"title":"Transactions report (XML)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xml-.html", "body":"Transactions report (XML)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xml-.html#overview-134", "body":"This is a template you can use to build customized transactions reports in XML format. Import the template in the jsreport UI. Once the template is imported, you can generate the report from FA Back (for more information, see Generate reports for portfoliosin FA User guide)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xml-.html#highlights-134", "body":"This template includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--xml-.html#highlights-134", "body":"a GraphQL query to fetch transactions on selected portfolios over a selected time period"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transactions-report--xml-.html#highlights-134", "body":"the handling of start and end dates as request parameters and passing them to the query"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transactions-report--xml-.html#highlights-134", "body":"JavaScript logic to merge the transactions over multiple portfolios"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transactions-report--xml-.html#highlights-134", "body":"JavaScript logic to sort the list of transactions by transaction date before the XML file is rendered"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--xml-.html#files-134", "body":"sample-transactionsReportXML.jsrexport"},
{"title":"Transactions report (CSV)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--csv-.html", "body":"Transactions report (CSV)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--csv-.html#idm46709272556176", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--csv-.html#idm46709272556176", "body":"You can build integrations to automatically deliver reports to counterparties via FTP or other protocols. This page includes a downloadable CSV report template as well as information on how to make generated reports accessible to the FA Connector microservice that connects FA with external systems."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transactions-report--csv-.html#idm46709272556176", "body":"Import the template in the jsreport UI. Once the template is imported, you can generate the report from FA Back (for more information, see Generate reports for portfoliosin FA User guide)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--csv-.html#idm46709272556000", "body":"Highlights"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--csv-.html#idm46709272556000", "body":"This sample includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transactions-report--csv-.html#idm46709272556000", "body":"a GraphQL query to fetch transactions for selected portfolios over a selected time period"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transactions-report--csv-.html#idm46709272556000", "body":"JavaScript logic to merge the transactions over multiple portfolios and sort them prior to rendering"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transactions-report--csv-.html#idm46709272556000", "body":"a Handlebars CSV template that addresses issues related to special characters:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transactions-report--csv-.html#idm46709272556000", "body":"double quotation marks around certain fields to handle strings containing CSV delimiter characters"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"transactions-report--csv-.html#idm46709272556000", "body":"triple curly brackets around certain fields to prevent Handlebar's HTML-escaping with HTML-reserved characters such as & and ="},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--csv-.html#idm46709272549648", "body":"Files"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--csv-.html#idm46709272549648", "body":"sample-transactionReportCSV.jsrexport"},
{"title":"Making generated reports accessible to FA Connector", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--csv-.html#idm46709272545488", "body":"Making generated reports accessible to FA Connector"},
{"title":"Making generated reports accessible to FA Connector", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--csv-.html#idm46709272545488", "body":"To deliver report files automatically using integrations, you need to make them available to the FA Connector microservice. You can do this by setting the Folder name to outbound (or outbound\/[report_folder_name]) in the Report window. The generated report(s) will now be routed to the back-writable\/reports-outbound folder that is accessible to FA Connector."},
{"title":"Making generated reports accessible to FA Connector", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transactions-report--csv-.html#idm46709272545488", "body":"To learn how to set up a Camel route to send files via FTP, see the File integrationssection."},
{"title":"Transactions report (PDF)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--pdf-.html", "body":"Transactions report (PDF)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--pdf-.html#overview-136", "body":"This is a template you can use to build customized transactions reports. Import the template in the jsreport UI. Once the template is imported, you can generate the report from FA Back (for more information, see Generate reports for portfolios in FA User guide)."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--pdf-.html#overview-136", "body":"The report requires shared folders to function correctly, see Sample reports."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--pdf-.html#highlights-136", "body":"This template includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--pdf-.html#highlights-136", "body":"a GraphQL query to fetch transactions"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transactions-report--pdf-.html#highlights-136", "body":"text localization (English, Swedish)"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transactions-report--pdf-.html#highlights-136", "body":"header and footer"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transactions-report--pdf-.html#highlights-136", "body":"number and date formatting based on locale"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transactions-report--pdf-.html#highlights-136", "body":"parameters that let you choose which transaction types to include in the generated report"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"transactions-report--pdf-.html#highlights-136", "body":"several sorting functions that sort the transactions in multiple steps"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"transactions-report--pdf-.html#highlights-136", "body":"transaction types (names and codes) that are translated based on the selected language and the following logic:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"transactions-report--pdf-.html#highlights-136", "body":"If a translation is available in FA Back, it will be used. Otherwise, the report will look for a translation in the language file (localization folder). If no translation is found there either, it will use the name or code directly without any translation."},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transactions-report--pdf-.html#files-136", "body":"Transactions report template:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transactions-report--pdf-.html#files-136", "body":"sample-transactionsReportPDF.jsrexport"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transactions-report--pdf-.html#files-136", "body":"Shared folders containing header, footer, images and translations:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transactions-report--pdf-.html#files-136", "body":"sample-sharedFolders.jsrexport"},
{"title":"Transaction confirmation report (PDF)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction-confirmation-report--pdf-.html", "body":"Transaction confirmation report (PDF)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction-confirmation-report--pdf-.html#overview-137", "body":"This is a template you can use to build customized transaction confirmation report in PDF format. Import the template in the jsreport UI. Once the template is imported, you can generate the report from FA Back:"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction-confirmation-report--pdf-.html#overview-137", "body":"Choose one or more transactions in the Transactions view."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction-confirmation-report--pdf-.html#overview-137", "body":"Click the printer icon at the top-right corner."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction-confirmation-report--pdf-.html#overview-137", "body":"Choose the report template in the list and fill in optional parameters (for more information, see Report windowin the FA Back reference)."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction-confirmation-report--pdf-.html#overview-137", "body":"Click Generate report."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction-confirmation-report--pdf-.html#overview-137", "body":"The report requires shared folders to function correctly, see Sample reports."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction-confirmation-report--pdf-.html#highlights-137", "body":"This template includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction-confirmation-report--pdf-.html#highlights-137", "body":"a GraphQL query that fetches more information ab given transactions"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction-confirmation-report--pdf-.html#highlights-137", "body":"a sorting function that sorts the list of transactions based on transaction date before the PDF is rendered"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction-confirmation-report--pdf-.html#highlights-137", "body":"conditional fields that are not shown if their value is missing"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction-confirmation-report--pdf-.html#highlights-137", "body":"transaction types (names and codes) that are translated based on the selected language and the following logic:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction-confirmation-report--pdf-.html#highlights-137", "body":"If a translation is available in FA Back, it will be used. Otherwise, the report will look for a translation in the language file (localization folder). If no translation is found there either, it will use the name or code directly without any translation."},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction-confirmation-report--pdf-.html#files-137", "body":"In the file below, you will find the transaction confirmation report template:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction-confirmation-report--pdf-.html#files-137", "body":"sample-transactionConfirmationReportPDF.jsrexport"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction-confirmation-report--pdf-.html#files-137", "body":"Shared folders containing header, footer, images and translation are found in the following file:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction-confirmation-report--pdf-.html#files-137", "body":"sample-sharedFolders.jsrexport"},
{"title":"Allocation report (PDF)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--pdf-.html", "body":"Allocation report (PDF)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--pdf-.html#idm46709272473520", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"allocation-report--pdf-.html#idm46709272473520", "body":"This is a template you can use to build customized allocation reports. Import the template in the jsreport UI. Once the template is imported, you can generate the report from FA Back (for more information, see Generate a report in FA User Guide)."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"allocation-report--pdf-.html#idm46709272473520", "body":"The report requires shared folders to function correctly, see Sample reports."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--pdf-.html#idm46709272473360", "body":"Highlights"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"allocation-report--pdf-.html#idm46709272473360", "body":"The template includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"allocation-report--pdf-.html#idm46709272473360", "body":"a GraphQL query to fetch portfolio allocation by selected grouping and security"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"allocation-report--pdf-.html#idm46709272473360", "body":"pie charts created with the Highcharts library"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"allocation-report--pdf-.html#idm46709272473360", "body":"JavaScript logic to transform queried data into a format accepted by the charts:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--pdf-.html#idm46709272466192", "body":"Files"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"allocation-report--pdf-.html#idm46709272466192", "body":"Allocation report template:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"allocation-report--pdf-.html#idm46709272466192", "body":"sample-allocationReportPDF.jsrexport"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"allocation-report--pdf-.html#idm46709272466192", "body":"Shared folders containing header, footer, images and translations:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"allocation-report--pdf-.html#idm46709272466192", "body":"sample-sharedFolders.jsrexport"},
{"title":"Allocation report (XLSX)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--xlsx-.html", "body":"Allocation report (XLSX)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--xlsx-.html#overview-139", "body":"This is a template you can use to build customized allocation reports in XLSX format. Import the sample in the jsreport UI. Once it is imported, you can generate the report from FA Back (for more information, see Generate reports for portfolios in FA User Guide)."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"allocation-report--xlsx-.html#overview-139", "body":"The report requires the shared folders to function correctly (see Sample reports)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--xlsx-.html#highlights-139", "body":"The sample report includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"allocation-report--xlsx-.html#highlights-139", "body":"an externally created XLSX asset file that acts as the layout for the report"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"allocation-report--xlsx-.html#highlights-139", "body":"a jsreport template that modifies the asset file to produce the complete report"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"allocation-report--xlsx-.html#highlights-139", "body":"a GraphQL query to fetch portfolio allocation by selected grouping and security"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"allocation-report--xlsx-.html#files-139", "body":"Sample allocation report (XLSX):"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"allocation-report--xlsx-.html#files-139", "body":"sample-allocationReportXLSX.jsrexport"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"allocation-report--xlsx-.html#files-139", "body":"Shared folders containing translations:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"allocation-report--xlsx-.html#files-139", "body":"sample-sharedFolders.jsrexport"},
{"title":"Positions report (PDF)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"positions-report--pdf-.html", "body":"Positions report (PDF)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"positions-report--pdf-.html#overview-140", "body":"This is a template you can use to build customized positions reports. Import the template in the jsreport UI. Once the template is imported, you can generate the report from FA Back (for more information, see Generate reports for portfoliosin FA User guide)."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"positions-report--pdf-.html#overview-140", "body":"The sample-positionsReportPDF.jsrexport file is a template for the Positions report that you can use and customize if needed."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"positions-report--pdf-.html#overview-140", "body":"The report requires shared folders to function correctly, see Sample reports."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"positions-report--pdf-.html#highlights-140", "body":"This template includes the following:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"positions-report--pdf-.html#highlights-140", "body":"a GraphQL query to fetch transactions"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"positions-report--pdf-.html#highlights-140", "body":"header and footer"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"positions-report--pdf-.html#highlights-140", "body":"number and date formatting based on locale"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"positions-report--pdf-.html#files-140", "body":"Positions report template:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"positions-report--pdf-.html#files-140", "body":"sample-positionsReportPDF.jsrexport"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"positions-report--pdf-.html#files-140", "body":"Shared folders containing header, footer, images and translations:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"positions-report--pdf-.html#files-140", "body":"sample-sharedFolders.jsrexport"},
{"title":"Performance and value history report (PDF)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"performance-and-value-history-report--pdf-.html", "body":"Performance and value history report (PDF)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"performance-and-value-history-report--pdf-.html#idm46709272406016", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"performance-and-value-history-report--pdf-.html#idm46709272406016", "body":"This is a jsreport template equivalent to FA's standard report P\/L - Performance and value history."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"performance-and-value-history-report--pdf-.html#idm46709272406016", "body":"The report requires the shared folders to function correctly (see Sample reports)"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"performance-and-value-history-report--pdf-.html#highlights-141", "body":"Numbers and dates are internationalized with the Intl object (for details, see the description in the MDN Web Docs project)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"performance-and-value-history-report--pdf-.html#highlights-141", "body":"Layout is designed with the CSS flexbox layout method (for details, see the description in the MDN Web Docs project)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"performance-and-value-history-report--pdf-.html#highlights-141", "body":"Content size is relative to the HTML element font-size, and can be zoomed in or zoomed out by modifying this value."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"performance-and-value-history-report--pdf-.html#highlights-141", "body":"Charts are built with Highcharts."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"performance-and-value-history-report--pdf-.html#highlights-141", "body":"The report uses the following from the shared folders:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"performance-and-value-history-report--pdf-.html#highlights-141", "body":"language localizations in \/localization folder"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"performance-and-value-history-report--pdf-.html#highlights-141", "body":"landscape header and footer template in the \/headerAndFooter folder"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"performance-and-value-history-report--pdf-.html#idm46709272400416", "body":"Files"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"performance-and-value-history-report--pdf-.html#idm46709272400416", "body":"Report project:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"performance-and-value-history-report--pdf-.html#idm46709272400416", "body":"sample-performanceAndValueHistoryPDF.jsrexport"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"performance-and-value-history-report--pdf-.html#idm46709272400416", "body":"Shared folders:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"performance-and-value-history-report--pdf-.html#idm46709272400416", "body":"sample-sharedFolders.jsrexport"},
{"title":"Realized and unrealized profits report (PDF)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"realized-and-unrealized-profits-report--pdf-.html", "body":"Realized and unrealized profits report (PDF)"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272382512", "body":"Overview"},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272382512", "body":"This is a report template equivalent to FA's standard report P\/L - Realized and unrealized profits."},
{"title":"Overview", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272382512", "body":"The report requires shared folders to function correctly, see Sample reports."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"realized-and-unrealized-profits-report--pdf-.html#highlights-142", "body":"Numbers and dates are internationalized with the Intl object (for details, see the description in the MDN Web Docs project)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"realized-and-unrealized-profits-report--pdf-.html#highlights-142", "body":"Layout is designed with the CSS flexbox layout method (for details, see the description in the MDN Web Docs project)."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"realized-and-unrealized-profits-report--pdf-.html#highlights-142", "body":"Content size is relative to the HTML element font-size, and can be zoomed in or zoomed out by modifying this value."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"realized-and-unrealized-profits-report--pdf-.html#highlights-142", "body":"It supports grouping alternatives selectable in the Report window."},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"realized-and-unrealized-profits-report--pdf-.html#highlights-142", "body":"The report uses the following from the shared folders:"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"realized-and-unrealized-profits-report--pdf-.html#highlights-142", "body":"language localizations in \/localization folder"},
{"title":"Highlights", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"realized-and-unrealized-profits-report--pdf-.html#highlights-142", "body":"landscape header and footer template in the \/headerAndFooter folder"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272376672", "body":"Files"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272376672", "body":"Report project: "},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272376672", "body":"sample-realizedAndUnrealizedProfitsPDF.jsrexport"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272376672", "body":"Shared folders:"},
{"title":"Files", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"realized-and-unrealized-profits-report--pdf-.html#idm46709272376672", "body":"sample-sharedFolders.jsrexport"},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"notebooks.html", "body":"Jupyter Notebook is a tool that allows you to perform various data analytics and manipulation tasks through on-the-fly Python scripting. Notebooks in FA provide you with the following features:"},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"notebooks.html", "body":"Secure access to notebooks based on FA user roles, where each user operates in an individual computing environment."},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"notebooks.html", "body":"Sharing documents with other FA users who have access to Notebooks."},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"notebooks.html", "body":"Access to the most common Python libraries to perform financial and data analysis:"},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"notebooks.html", "body":"Core data: numpy, pandas, scipy, sci-kit learn, statsmodels."},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"notebooks.html", "body":"Data visualization: plotly, seaborn, matplotlib."},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"notebooks.html", "body":"Finance: quandl, pyfolio, quantlib, TA-lib."},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"notebooks.html", "body":"Access to the FA APIs."},
{"title":"Data analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"notebooks.html", "body":"FA Solutions doesn't provide support for data analysis scripting but enables it with Jupyter Notebook."},
{"title":"Getting started", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"notebooks.html#getting-started-143", "body":"Getting started"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"notebooks.html#prerequisites-143", "body":"FA Back version 3.12 or newer"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"notebooks.html#prerequisites-143", "body":"Jupyter Notebook enabled in your installation"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"notebooks.html#prerequisites-143", "body":"FA user account with access to Notebooks"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"notebooks.html#prerequisites-143", "body":"Some coding skills (or willingness to learn)"},
{"title":"Prerequisites", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"notebooks.html#prerequisites-143", "body":"Getting familiar with Jupyter Notebook documentation: https:\/\/jupyter-notebook.readthedocs.io\/en\/stable\/."},
{"title":"Notebooks view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"notebooks.html#notebooks-view-in-fa-developer-app", "body":"Notebooks are accessed via FA Developer App: Notebooks view."},
{"title":"Notebooks view in FA Developer app", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"notebooks.html#notebooks-view-in-fa-developer-app", "body":"The Notebooks view provides you access to Jupyter notebooks to manipulate, analyze and present data from FA and external parties, as well as to store and share your work securely. Jupyter notebooks as a tool are pre-configured in FA and don’t require any setup."},
{"title":"Creating your first notebook", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"notebooks.html#creating-your-first-notebook", "body":"To get started:"},
{"title":"Creating your first notebook", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"notebooks.html#creating-your-first-notebook", "body":"Go to the Notebooks view in the FA Developer app."},
{"title":"Creating your first notebook", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"notebooks.html#creating-your-first-notebook", "body":"Click the plus icon to open a new launcher and create a new notebook."},
{"title":"Creating your first notebook", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"notebooks.html#creating-your-first-notebook", "body":"Check the Access FA data via GraphGL API section for samples that show how to fetch data to notebooks via FA APIs. You can upload the samples to your own notebooks by clicking the Upload files button ."},
{"title":"Access FA data via GraphGL API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"sample---accessing-fa-data-via-graphql-api.html", "body":"This sample shows you how to do the following:"},
{"title":"Access FA data via GraphGL API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"sample---accessing-fa-data-via-graphql-api.html", "body":"Authenticate against FA's GraphQL API using service account client fa-api."},
{"title":"Access FA data via GraphGL API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"sample---accessing-fa-data-via-graphql-api.html", "body":"Make a GraphQL API request to fetch portfolio data."},
{"title":"Access FA data via GraphGL API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"sample---accessing-fa-data-via-graphql-api.html", "body":"Read in the received data and build a simple table from it."},
{"title":"Access FA data via GraphGL API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"sample---accessing-fa-data-via-graphql-api.html", "body":"Build a simple chart based on received data."},
{"title":"Access FA data via GraphGL API", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"sample---accessing-fa-data-via-graphql-api.html", "body":"sample-notebookGraphQLAPI.ipynb"},
{"title":"Customizing FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"customizing-fa-client-portal.html", "body":"FA Client Portal is an open-source React, Typescript application that allows clients to view and manage their investments on mobile and desktop devices. To learn more about FA Client Portal, see FA Client Portal Reference."},
{"title":"Customizing FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"customizing-fa-client-portal.html", "body":"The standard version of FA Client Portal can be installed from Optional packages in the FA Platform. With the standard version, you can change the logo\/icon, text translations, and the \"Contact info\" page of the application (for instructions, see FA Client Portal setup in FA Admin guide). "},
{"title":"Customizing FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"customizing-fa-client-portal.html", "body":"If you need to make other changes, you can choose to develop and maintain a custom version of FA Client Portal by forking our public repository and following the instructions within its README.md. The readme covers the following topics:"},
{"title":"Customizing FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"customizing-fa-client-portal.html", "body":"Getting started."},
{"title":"Customizing FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"customizing-fa-client-portal.html", "body":"Customizing."},
{"title":"Customizing FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"customizing-fa-client-portal.html", "body":"Deploying (to test and production)."},
{"title":"Customizing FA Client Portal", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"customizing-fa-client-portal.html", "body":"FA Solutions doesn't offer support for custom versions of FA Client Portal. You will have to maintain your custom version and manually merge (if needed) any new features released in the standard FA Client Portal, yourself."},
{"title":"Related links", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"customizing-fa-client-portal.html#related-links-145", "body":"FA Client Portal Reference"},
{"title":"Customize login page", "document":[], "pos":1, "url":"customize-login-page.html", "body":"You can customize the login page for an FA application: replace the title, company name, logo and favicon, define the page styling and change the login options."},
{"title":"Contact customer support", "document":[], "pos":1, "url":"customize-login-page.html#contact-customer-support-146", "body":"Start by contacting FA customer support and specifying the following details in the ticket:"},
{"title":"Contact customer support", "document":[], "pos":2, "url":"customize-login-page.html#contact-customer-support-146", "body":"The FA application for which you want to create a login page."},
{"title":"Contact customer support", "document":[], "pos":3, "url":"customize-login-page.html#contact-customer-support-146", "body":"The login options that you want to display on the login page. For example, Swedish BankID, Norwegian BankID, or similar."},
{"title":"Contact customer support", "document":[], "pos":4, "url":"customize-login-page.html#contact-customer-support-146", "body":"You need user access to the Login themes view in the FA Developer app (in test and production environments)."},
{"title":"Contact customer support", "document":[], "pos":5, "url":"customize-login-page.html#contact-customer-support-146", "body":"These details help customer support enable a custom login page in your test environment. After receiving a confirmation, you can start customizing the login page in your test environment. When the customization is done and tested, you can apply it to production."},
{"title":"Modify and test the login page", "document":[], "pos":1, "url":"customize-login-page.html#modify-and-test-the-login-page-146", "body":"Each custom login page is represented by a folder in the Authentication → Login themes view in FA Developer app. To customize the login page, you can modify the files in the existing folders. Adding new login theme folders is currently not supported."},
{"title":"Modify and test the login page", "document":[], "pos":2, "url":"customize-login-page.html#modify-and-test-the-login-page-146", "body":"The \/login\/login.ftl file reflects what you see on the login page. The FreeMarker template language (FTL) is similar to HTML but it also supports syntax to use conditionals, iterate lists, and so on. Edit this file to change the login page content."},
{"title":"Modify and test the login page", "document":[], "pos":3, "url":"customize-login-page.html#modify-and-test-the-login-page-146", "body":"When testing your changes in the login theme folders, remember to click the Reload themes button to apply the changes."},
{"title":"Title and company name", "document":[], "pos":1, "url":"customize-login-page.html#title-and-company-name-146", "body":"Title and company name are defined as variables at the start of the file. Change them to modify the browser tab title and the login form title."},
{"title":"Title and company name", "document":[], "pos":2, "url":"customize-login-page.html#title-and-company-name-146", "body":"<#assign company = \"FA\">\n<#assign title = \"Log in to ${company}\">"},
{"title":"Username and password fields", "document":[], "pos":1, "url":"customize-login-page.html#username-and-password-fields-146", "body":"The username and password fields can be found in the <div id=\"kc-form-wrapper\"> element. If you want to hide these login options, remove this div and its content."},
{"title":"Third-party identity provider login options", "document":[], "pos":1, "url":"customize-login-page.html#third-party-identity-provider-login-options-146", "body":"Third-party identity provider login buttons are rendered in the <#list social.providers as p> tag."},
{"title":"Third-party identity provider login options", "document":[], "pos":2, "url":"customize-login-page.html#third-party-identity-provider-login-options-146", "body":"By default, active identity provider options are rendered in the #else statement. However, they can modify the code to render them conditionally:"},
{"title":"Third-party identity provider login options", "document":[], "pos":3, "url":"customize-login-page.html#third-party-identity-provider-login-options-146", "body":"Remove the #else clause and specify an #elseif p.alias = \"identityProviderAlias\" clause for each option, as illustrated below."},
{"title":"Third-party identity provider login options", "document":[], "pos":4, "url":"customize-login-page.html#third-party-identity-provider-login-options-146", "body":"Replace identityProviderAlias in the #elseif clauses with the actual aliases of specific identification methods. The p.alias and p.displayName of the identification provider are defined in Keycloak. Request them from FA customer support via a ticket. Note that identity provider aliases in the test and production environments can differ. Make sure you request both and update the login.ftl with the production aliases before deploying to production."},
{"title":"Third-party identity provider login options", "document":[], "pos":5, "url":"customize-login-page.html#third-party-identity-provider-login-options-146", "body":"The existing #if and #elseif render “© FA Solutions Oy” admin login options. Don't remove them, as they are needed for the support of your application."},
{"title":"Third-party identity provider login options", "document":[], "pos":6, "url":"customize-login-page.html#third-party-identity-provider-login-options-146", "body":" <#if realm.password && social.providers??> \n <div id=\"kc-social-providers\" class=\" ${properties.kcFormSocialAccountClass!}\" style=\"margin-top: 20px\">\n <#-- <div id=\"kc-social-providers\" class=\"${properties.kcFormSocialAccountContentClass!} ${properties.kcFormSocialAccountClass!}\"> -->\n <ul class=\"${properties.kcFormSocialAccountListClass!} <#if social.providers?size gt 4>${properties.kcFormSocialAccountDoubleListClass!}<\/#if>\">\n <#list social.providers as p>\n\n <!-- Do not remove the if clause for the admin login option-->\n <#if p.alias = \"oidc-auth0\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} faAuth\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!-- Add first identity provider option with alias identityProviderAlias-->\n <#elseif p.alias = \"identityProviderAlias\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} ID\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!-- Add second identity provider option with alias identityProviderAlias-->\n <#elseif p.alias = \"identityProviderAlias\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} providerID2\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!-- Do not remove the elseif clause for the admin login option-->\n <#elseif p.alias = \"oidc-okta\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} okta\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!--Remove the else statement if needed-->\n <#-- <#else>\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\"><a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId}\"> <span>${p.displayName}<\/span><\/a><\/li>-->\n <\/#if>\n <\/#list>\n <\/ul>\n <\/div>\n <\/#if>"},
{"title":"Styling", "document":[], "pos":1, "url":"customize-login-page.html#styling-146", "body":"The login.ftl is styled by the \/login\/resources\/css\/login.css. In many cases, it uses CSS variables defined in a separate file – \/login\/resources\/js\/theme.js. The theme.js file keeps track of whether the user selected dark or light mode anywhere in the application and updates the CSS variables accordingly. Therefore, you might also need to update the theme.js file to affect the styling of login.ftl."},
{"title":"Logo and favicon", "document":[], "pos":1, "url":"customize-login-page.html#logo-and-favicon-146", "body":"The logo for the login page is specified in the login.css file. To replace the logo, upload a new file to \/login\/resources\/img and change the URL path in login.css to match the path of your uploaded image."},
{"title":"Logo and favicon", "document":[], "pos":2, "url":"customize-login-page.html#logo-and-favicon-146", "body":"The favicon is located in \/login\/resources\/img. Replace the favicon in this folder with the one of your choice. Note that favicons are cached by the browser. You might need to clear your browser cache to make it load the new favicon."},
{"title":"Text and translations", "document":[], "pos":1, "url":"customize-login-page.html#text-and-translations-146", "body":"The login.ftl file gets texts dynamically from the files in the \/login\/messages folder. The files in this folder are named messages_<lang>.properties, where <lang> refers to a language code (en, sv, fi, nb, or similar). The .properties files contain key-value pairs of codes and translations. You can modify them, and you can also create new files to add new languages."},
{"title":"Text and translations", "document":[], "pos":2, "url":"customize-login-page.html#text-and-translations-146", "body":"The file that is used by login.ftl depends on the language of the user. For example, for an English-language user, ${msg(\"username\")} in login.ftl imports the value for the “username” key from the messages_en.properties file."},
{"title":"Apply changes to production", "document":[], "pos":1, "url":"customize-login-page.html#apply-changes-to-production-146", "body":"When your changes to the login theme folder are done, and you verified that they are working as expected in your test environment, you are ready to deploy them to production. Double-check that the identity provider aliases that are used in the login.ftl file (if any) match the ones in your production environment."},
{"title":"Apply changes to production", "document":[], "pos":2, "url":"customize-login-page.html#apply-changes-to-production-146", "body":"To deploy the changes to production:"},
{"title":"Apply changes to production", "document":[], "pos":3, "url":"customize-login-page.html#apply-changes-to-production-146", "body":"Make sure to backup both your new login theme folder and any current custom login theme folders deployed in production before proceeding."},
{"title":"Apply changes to production", "document":[], "pos":4, "url":"customize-login-page.html#apply-changes-to-production-146", "body":"In your production environment, open the Authentication → Login themes view in the FA Developer app."},
{"title":"Apply changes to production", "document":[], "pos":5, "url":"customize-login-page.html#apply-changes-to-production-146", "body":"Upload the new login theme folder to the root folder. Alternatively, replace the content of an existing (in-use) folder."},
{"title":"Apply changes to production", "document":[], "pos":6, "url":"customize-login-page.html#apply-changes-to-production-146", "body":"Click Reload themes in the upper-right corner."},
{"title":"Apply changes to production", "document":[], "pos":7, "url":"customize-login-page.html#apply-changes-to-production-146", "body":"Contact FA customer support. Inform them that the new folder is deployed and ask them to apply it to the target application client in Keycloak."},
{"title":"Webinar recordings", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"webinar-recordings.html", "body":"This section contains recordings of developer webinars organized by FA experts. They are a comprehensive resource for FA customers and partners looking to enhance their understanding of how to customize the FA platform."},
{"title":"Webinar recordings", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"webinar-recordings.html", "body":"The webinars cover various topics, such as the FA platform's key features, functionalities, and best practices. The sessions provide attendees with hands-on experience, practical tips, and troubleshooting techniques to help them effectively use the platform in their projects. The webinars are designed to be interactive, with opportunities for attendees to ask questions, making it an informative learning experience led by FA experts with the know-how to help customers and partners succeed."},
{"title":"Introduction to FA Client Portal webinar (February 2nd 2022)", "document":[], "pos":1, "url":"introduction-to-fa-client-portal-webinar--february-2nd-2022-.html", "body":"This webinar introduces you to the FA Client Portal and covers how you can install and set it up. The webinar is structured around the following key points:"},
{"title":"Introduction to FA Client Portal webinar (February 2nd 2022)", "document":[], "pos":2, "url":"introduction-to-fa-client-portal-webinar--february-2nd-2022-.html", "body":"What is the FA Client Portal?"},
{"title":"Introduction to FA Client Portal webinar (February 2nd 2022)", "document":[], "pos":3, "url":"introduction-to-fa-client-portal-webinar--february-2nd-2022-.html", "body":"How can you install it and grant access to users?"},
{"title":"Introduction to FA Client Portal webinar (February 2nd 2022)", "document":[], "pos":4, "url":"introduction-to-fa-client-portal-webinar--february-2nd-2022-.html", "body":"How can you edit some of the FA Client Portal elements?"},
{"title":"Client onboarding with forms and processes webinar (December 22nd 2022)", "document":["FA Developer guide", "FA Product description"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide", "Document > FA Product description"], "lvl0": ["Document"]}, "pos":1, "url":"client-onboarding-with-forms-and-processes-webinar--december-22nd-2022-.html", "body":"This webinar explains how you can onboard your clients using forms and processes in FA. The webinar is structured around the following key points:"},
{"title":"Client onboarding with forms and processes webinar (December 22nd 2022)", "document":["FA Developer guide", "FA Product description"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide", "Document > FA Product description"], "lvl0": ["Document"]}, "pos":2, "url":"client-onboarding-with-forms-and-processes-webinar--december-22nd-2022-.html", "body":"How can I import the onboarded clients' information?"},
{"title":"Client onboarding with forms and processes webinar (December 22nd 2022)", "document":["FA Developer guide", "FA Product description"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide", "Document > FA Product description"], "lvl0": ["Document"]}, "pos":3, "url":"client-onboarding-with-forms-and-processes-webinar--december-22nd-2022-.html", "body":"What information can I share with my clients during their onboarding process?"},
{"title":"Client onboarding with forms and processes webinar (December 22nd 2022)", "document":["FA Developer guide", "FA Product description"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide", "Document > FA Product description"], "lvl0": ["Document"]}, "pos":4, "url":"client-onboarding-with-forms-and-processes-webinar--december-22nd-2022-.html", "body":"How can I share this information during the process?"},
{"title":"Client onboarding with forms and processes webinar (December 22nd 2022)", "document":["FA Developer guide", "FA Product description"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide", "Document > FA Product description"], "lvl0": ["Document"]}, "pos":5, "url":"client-onboarding-with-forms-and-processes-webinar--december-22nd-2022-.html", "body":"How can my clients' information be added to complete the onboarding?"},
{"title":"FA GraphQL and analytics webinar (May 24th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-graphql-and-analytics-webinar--may-24th-2022-.html", "body":"This webinar is designed for FA customers and partners who have some experience with the Analytics+ feature and want to use it to build custom reports or use it in external applications."},
{"title":"FA GraphQL and analytics webinar (May 24th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-graphql-and-analytics-webinar--may-24th-2022-.html", "body":"In this webinar, we cover how to externally run an analysis in Analytics+ and then use it in a custom report. The webinar is structured around the following key points:"},
{"title":"FA GraphQL and analytics webinar (May 24th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-graphql-and-analytics-webinar--may-24th-2022-.html", "body":"Why would I use Analytics+ via API?"},
{"title":"FA GraphQL and analytics webinar (May 24th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fa-graphql-and-analytics-webinar--may-24th-2022-.html", "body":"How do I use Analytics+ via API and where do I find the instructions?"},
{"title":"FA GraphQL and analytics webinar (May 24th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fa-graphql-and-analytics-webinar--may-24th-2022-.html", "body":"A practical example of how FA has used Analytics+ in a sample JSReport."},
{"title":"FA GraphQL API 101 webinar (January 18th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-graphql-api-101-webinar--january-18th-2022-.html", "body":"This webinar is designed for FA customers and partners who are interested in:"},
{"title":"FA GraphQL API 101 webinar (January 18th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-graphql-api-101-webinar--january-18th-2022-.html", "body":"Building API integrations against FA."},
{"title":"FA GraphQL API 101 webinar (January 18th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-graphql-api-101-webinar--january-18th-2022-.html", "body":"Building custom JSReports."},
{"title":"FA GraphQL API 101 webinar (January 18th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fa-graphql-api-101-webinar--january-18th-2022-.html", "body":"The webinar covers the basics of FA GraphQL API. It focuses on how to design GraphQL requests using FA Developer App and FA Developer Guide examples. It answers the following questions:"},
{"title":"FA GraphQL API 101 webinar (January 18th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fa-graphql-api-101-webinar--january-18th-2022-.html", "body":"What’s the role of GraphQL in FA customizability?"},
{"title":"FA GraphQL API 101 webinar (January 18th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"fa-graphql-api-101-webinar--january-18th-2022-.html", "body":"How does GraphQL differ from FA’s traditional rest APIs and related technologies?"},
{"title":"FA GraphQL API 101 webinar (January 18th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"fa-graphql-api-101-webinar--january-18th-2022-.html", "body":"How do I design GraphQL requests in practice by using FA Developer App?"},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"This webinar is designed for FA customers and partners who are interested in:"},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"Building custom reports of varying formats (PDF, XLSX)."},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"Customizing FA’s existing sample reports."},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"In this webinar, we cover the basics of jsreport and FA’s sample reports:"},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"What is JSReport?"},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"Building a basic report from scratch."},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"Structure of FA’s sample reports."},
{"title":"FA JSReport 101 webinar (February 22nd 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"fa-jsreport-101-webinar--february-22nd-2022-.html", "body":"Making changes to FA’s sample reports."},
{"title":"FA Fund management NAV reports webinar (June 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-fund-management-nav-reports-webinar--june-21st-2022-.html", "body":"FA Fund management app allows the user to export NAV reports in XLSX and PDF format once NAV is calculated for a fund."},
{"title":"FA Fund management NAV reports webinar (June 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-fund-management-nav-reports-webinar--june-21st-2022-.html", "body":"In this webinar, we show you how to modify and replace these reports. We also delve into the data object stored for each fund after the NAV calculation."},
{"title":"FA Fund management NAV reports webinar (June 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-fund-management-nav-reports-webinar--june-21st-2022-.html", "body":"Knowledge of jsreport and GraphQL is recommended to fully understand this topic."},
{"title":"FA file integrations 101 webinar (October 25th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-file-integrations-101-webinar--october-25th-2022-.html", "body":"This webinar is designed for FA customers wanting to learn the basics of building file integrations in FA. It gives you an overview of what can be done with custom file integrations and introduces you to the main tools used in their development: Camel routes and data mappings."},
{"title":"FA file integrations 101 webinar (October 25th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-file-integrations-101-webinar--october-25th-2022-.html", "body":"In the demo case, we show you how to import transaction data to FA from an XML (or a custom format CSV) file. This consists of:"},
{"title":"FA file integrations 101 webinar (October 25th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-file-integrations-101-webinar--october-25th-2022-.html", "body":"Creating an XSLT stylesheet for transforming the XML file to CSV."},
{"title":"FA file integrations 101 webinar (October 25th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fa-file-integrations-101-webinar--october-25th-2022-.html", "body":"Creating a mapping for converting the contents of the CSV file into FA format."},
{"title":"FA file integrations 101 webinar (October 25th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fa-file-integrations-101-webinar--october-25th-2022-.html", "body":"Creating a Camel route that fetches the XML file, triggers the XML to CSV transformation and transfers the result to a predefined location for mapping and importing the transactions data."},
{"title":"FA file integrations 101 webinar (October 25th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"fa-file-integrations-101-webinar--october-25th-2022-.html", "body":"Deploying the Camel route and uploading the XML file."},
{"title":"FA file integrations 102 webinar (November 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-file-integrations-102-webinar--november-29th-2022-.html", "body":"In this webinar, you will learn how to automate reporting from FA. The reporting can be set up to automatically send user-generated reports or as a complete automation that generates and sends reports on schedule."},
{"title":"FA file integrations 102 webinar (November 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-file-integrations-102-webinar--november-29th-2022-.html", "body":"In our demo, we guide you through the steps:"},
{"title":"FA file integrations 102 webinar (November 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-file-integrations-102-webinar--november-29th-2022-.html", "body":"Generating your report to a location accessible to FA Connector."},
{"title":"FA file integrations 102 webinar (November 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fa-file-integrations-102-webinar--november-29th-2022-.html", "body":"Scheduling report generation."},
{"title":"FA file integrations 102 webinar (November 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fa-file-integrations-102-webinar--november-29th-2022-.html", "body":"Creating a Camel route that transfers the file between FA directories."},
{"title":"FA file integrations 102 webinar (November 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"fa-file-integrations-102-webinar--november-29th-2022-.html", "body":"Creating a Camel route that transfers the file from the FA directory to an SFTP server."},
{"title":"FA decision tables 101 webinar (March 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-decision-tables-101-webinar--march-29th-2022-.html", "body":"This webinar is designed for FA customers and partners who are interested in automating repetitive and manual tasks in FA."},
{"title":"FA decision tables 101 webinar (March 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-decision-tables-101-webinar--march-29th-2022-.html", "body":"In this webinar, we cover the basics of decision tables and rules in FA:"},
{"title":"FA decision tables 101 webinar (March 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-decision-tables-101-webinar--march-29th-2022-.html", "body":"What are decision tables and rules?"},
{"title":"FA decision tables 101 webinar (March 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fa-decision-tables-101-webinar--march-29th-2022-.html", "body":"Demo of a decision table."},
{"title":"FA decision tables 101 webinar (March 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fa-decision-tables-101-webinar--march-29th-2022-.html", "body":"Building a decision table from scratch."},
{"title":"FA decision tables 101 webinar (March 29th 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"fa-decision-tables-101-webinar--march-29th-2022-.html", "body":"Tips and tricks of the decision table syntax."},
{"title":"FA custom data fields 101 webinar (April 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"fa-custom-data-fields-101-webinar--april-21st-2022-.html", "body":"This webinar is designed for FA customers and partners who have little or no experience with FA profiles."},
{"title":"FA custom data fields 101 webinar (April 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"fa-custom-data-fields-101-webinar--april-21st-2022-.html", "body":"In this webinar, we cover the basics of FA custom data fields called profiles. We structured it around the following key points:"},
{"title":"FA custom data fields 101 webinar (April 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"fa-custom-data-fields-101-webinar--april-21st-2022-.html", "body":"What is FA Profile, and what it can be used for."},
{"title":"FA custom data fields 101 webinar (April 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"fa-custom-data-fields-101-webinar--april-21st-2022-.html", "body":"Tutorial on building a profile to store client KYC data."},
{"title":"FA custom data fields 101 webinar (April 21st 2022)", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"fa-custom-data-fields-101-webinar--april-21st-2022-.html", "body":"A brief introduction on how to access profile data via interfaces."},
{"title":"Customize login page", "document":[], "pos":1, "url":"customize-login-page-276558.html", "body":"You can customize the login page for an FA application: replace the title, company name, logo and favicon, define the page styling and change the login options."},
{"title":"Contact customer support", "document":[], "pos":1, "url":"customize-login-page-276558.html#contact-customer-support-159", "body":"Start by contacting FA customer support and specifying the following details in the ticket:"},
{"title":"Contact customer support", "document":[], "pos":2, "url":"customize-login-page-276558.html#contact-customer-support-159", "body":"The FA application for which you want to create a login page."},
{"title":"Contact customer support", "document":[], "pos":3, "url":"customize-login-page-276558.html#contact-customer-support-159", "body":"The login options that you want to display on the login page. For example, Swedish BankID, Norwegian BankID, or similar."},
{"title":"Contact customer support", "document":[], "pos":4, "url":"customize-login-page-276558.html#contact-customer-support-159", "body":"You need user access to the Login themes view in the FA Developer app (in test and production environments)."},
{"title":"Contact customer support", "document":[], "pos":5, "url":"customize-login-page-276558.html#contact-customer-support-159", "body":"These details help customer support enable a custom login page in your test environment. After receiving a confirmation, you can start customizing the login page in your test environment. When the customization is done and tested, you can apply it to production."},
{"title":"Modify and test the login page", "document":[], "pos":1, "url":"customize-login-page-276558.html#modify-and-test-the-login-page-159", "body":"Each custom login page is represented by a folder in the Authentication → Login themes view in FA Developer app. To customize the login page, you can modify the files in the existing folders. Adding new login theme folders is currently not supported."},
{"title":"Modify and test the login page", "document":[], "pos":2, "url":"customize-login-page-276558.html#modify-and-test-the-login-page-159", "body":"The \/login\/login.ftl file reflects what you see on the login page. The FreeMarker template language (FTL) is similar to HTML but it also supports syntax to use conditionals, iterate lists, and so on. Edit this file to change the login page content."},
{"title":"Modify and test the login page", "document":[], "pos":3, "url":"customize-login-page-276558.html#modify-and-test-the-login-page-159", "body":"When testing your changes in the login theme folders, remember to click the Reload themes button to apply the changes."},
{"title":"Title and company name", "document":[], "pos":1, "url":"customize-login-page-276558.html#title-and-company-name-159", "body":"Title and company name are defined as variables at the start of the file. Change them to modify the browser tab title and the login form title."},
{"title":"Title and company name", "document":[], "pos":2, "url":"customize-login-page-276558.html#title-and-company-name-159", "body":"<#assign company = \"FA\">\n<#assign title = \"Log in to ${company}\">"},
{"title":"Username and password fields", "document":[], "pos":1, "url":"customize-login-page-276558.html#username-and-password-fields-159", "body":"The username and password fields can be found in the <div id=\"kc-form-wrapper\"> element. If you want to hide these login options, remove this div and its content."},
{"title":"Third-party identity provider login options", "document":[], "pos":1, "url":"customize-login-page-276558.html#third-party-identity-provider-login-options-159", "body":"Third-party identity provider login buttons are rendered in the <#list social.providers as p> tag."},
{"title":"Third-party identity provider login options", "document":[], "pos":2, "url":"customize-login-page-276558.html#third-party-identity-provider-login-options-159", "body":"By default, active identity provider options are rendered in the #else statement. However, they can modify the code to render them conditionally:"},
{"title":"Third-party identity provider login options", "document":[], "pos":3, "url":"customize-login-page-276558.html#third-party-identity-provider-login-options-159", "body":"Remove the #else clause and specify an #elseif p.alias = \"identityProviderAlias\" clause for each option, as illustrated below."},
{"title":"Third-party identity provider login options", "document":[], "pos":4, "url":"customize-login-page-276558.html#third-party-identity-provider-login-options-159", "body":"Replace identityProviderAlias in the #elseif clauses with the actual aliases of specific identification methods. The p.alias and p.displayName of the identification provider are defined in Keycloak. Request them from FA customer support via a ticket. Note that identity provider aliases in the test and production environments can differ. Make sure you request both and update the login.ftl with the production aliases before deploying to production."},
{"title":"Third-party identity provider login options", "document":[], "pos":5, "url":"customize-login-page-276558.html#third-party-identity-provider-login-options-159", "body":"The existing #if and #elseif render “© FA Solutions Oy” admin login options. Don't remove them, as they are needed for the support of your application."},
{"title":"Third-party identity provider login options", "document":[], "pos":6, "url":"customize-login-page-276558.html#third-party-identity-provider-login-options-159", "body":" <#if realm.password && social.providers??> \n <div id=\"kc-social-providers\" class=\" ${properties.kcFormSocialAccountClass!}\" style=\"margin-top: 20px\">\n <#-- <div id=\"kc-social-providers\" class=\"${properties.kcFormSocialAccountContentClass!} ${properties.kcFormSocialAccountClass!}\"> -->\n <ul class=\"${properties.kcFormSocialAccountListClass!} <#if social.providers?size gt 4>${properties.kcFormSocialAccountDoubleListClass!}<\/#if>\">\n <#list social.providers as p>\n\n <!-- Do not remove the if clause for the admin login option-->\n <#if p.alias = \"oidc-auth0\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} faAuth\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!-- Add first identity provider option with alias identityProviderAlias-->\n <#elseif p.alias = \"identityProviderAlias\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} ID\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!-- Add second identity provider option with alias identityProviderAlias-->\n <#elseif p.alias = \"identityProviderAlias\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} providerID2\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!-- Do not remove the elseif clause for the admin login option-->\n <#elseif p.alias = \"oidc-okta\">\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\">\n <a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId} okta\" \n style=\"position: fixed; z-index: 1000; right: 20px; bottom: 20px; border: none; box-shadow: none; background: none; height: 20px; width: 160px; opacity: 0.5; transform: translateX(0); font-family: Muli,sans-serif; text-align: right\">\n © FA Solutions Oy\n <\/a>\n <\/li>\n\n <!--Remove the else statement if needed-->\n <#-- <#else>\n <li class=\"${properties.kcFormSocialAccountListLinkClass!}\"><a href=\"${p.loginUrl}\" id=\"zocial-${p.alias}\" class=\"zocial ${p.providerId}\"> <span>${p.displayName}<\/span><\/a><\/li>-->\n <\/#if>\n <\/#list>\n <\/ul>\n <\/div>\n <\/#if>"},
{"title":"Styling", "document":[], "pos":1, "url":"customize-login-page-276558.html#styling-159", "body":"The login.ftl is styled by the \/login\/resources\/css\/login.css. In many cases, it uses CSS variables defined in a separate file – \/login\/resources\/js\/theme.js. The theme.js file keeps track of whether the user selected dark or light mode anywhere in the application and updates the CSS variables accordingly. Therefore, you might also need to update the theme.js file to affect the styling of login.ftl."},
{"title":"Logo and favicon", "document":[], "pos":1, "url":"customize-login-page-276558.html#logo-and-favicon-159", "body":"The logo for the login page is specified in the login.css file. To replace the logo, upload a new file to \/login\/resources\/img and change the URL path in login.css to match the path of your uploaded image."},
{"title":"Logo and favicon", "document":[], "pos":2, "url":"customize-login-page-276558.html#logo-and-favicon-159", "body":"The favicon is located in \/login\/resources\/img. Replace the favicon in this folder with the one of your choice. Note that favicons are cached by the browser. You might need to clear your browser cache to make it load the new favicon."},
{"title":"Text and translations", "document":[], "pos":1, "url":"customize-login-page-276558.html#text-and-translations-159", "body":"The login.ftl file gets texts dynamically from the files in the \/login\/messages folder. The files in this folder are named messages_<lang>.properties, where <lang> refers to a language code (en, sv, fi, nb, or similar). The .properties files contain key-value pairs of codes and translations. You can modify them, and you can also create new files to add new languages."},
{"title":"Text and translations", "document":[], "pos":2, "url":"customize-login-page-276558.html#text-and-translations-159", "body":"The file that is used by login.ftl depends on the language of the user. For example, for an English-language user, ${msg(\"username\")} in login.ftl imports the value for the “username” key from the messages_en.properties file."},
{"title":"Apply changes to production", "document":[], "pos":1, "url":"customize-login-page-276558.html#apply-changes-to-production-159", "body":"When your changes to the login theme folder are done, and you verified that they are working as expected in your test environment, you are ready to deploy them to production. Double-check that the identity provider aliases that are used in the login.ftl file (if any) match the ones in your production environment."},
{"title":"Apply changes to production", "document":[], "pos":2, "url":"customize-login-page-276558.html#apply-changes-to-production-159", "body":"To deploy the changes to production:"},
{"title":"Apply changes to production", "document":[], "pos":3, "url":"customize-login-page-276558.html#apply-changes-to-production-159", "body":"Make sure to backup both your new login theme folder and any current custom login theme folders deployed in production before proceeding."},
{"title":"Apply changes to production", "document":[], "pos":4, "url":"customize-login-page-276558.html#apply-changes-to-production-159", "body":"In your production environment, open the Authentication → Login themes view in the FA Developer app."},
{"title":"Apply changes to production", "document":[], "pos":5, "url":"customize-login-page-276558.html#apply-changes-to-production-159", "body":"Upload the new login theme folder to the root folder. Alternatively, replace the content of an existing (in-use) folder."},
{"title":"Apply changes to production", "document":[], "pos":6, "url":"customize-login-page-276558.html#apply-changes-to-production-159", "body":"Click Reload themes in the upper-right corner."},
{"title":"Apply changes to production", "document":[], "pos":7, "url":"customize-login-page-276558.html#apply-changes-to-production-159", "body":"Contact FA customer support. Inform them that the new folder is deployed and ask them to apply it to the target application client in Keycloak."},
{"title":"[Extension] SIE Export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"-extension--sie-export.html", "body":"[Extension] SIE Export"},
{"title":"Overview to SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"-extension--sie-export.html#overview-to-sie-export", "body":"The SIE format is an open standard for transferring accounting data between different software produced by different software suppliers. SIE can be used to transfer data between different software on the same computer (for example between portfolio management system and accounting system), but also for sending data between companies, for example between asset manager and accountant."},
{"title":"Overview to SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"-extension--sie-export.html#overview-to-sie-export", "body":"SIE export process allows you to export your accounting material, or bookkeeping postings, from FA in SIE format. This allows you to export your bookkeeping postings from FA and import them into your accounting system, if your accounting system supports the SIE format."},
{"title":"How to use SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"-extension--sie-export.html#how-to-use-sie-export", "body":"When installed and configured, SIE export is available on the Bookkeeping view. You can use the SIE export through the following steps:"},
{"title":"How to use SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"-extension--sie-export.html#how-to-use-sie-export", "body":"Open the Bookkeeping view and search for the postings you want to export. Search for postings with status \"Ready\" (i.e. postings that have not been exported and reported yet)."},
{"title":"How to use SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"-extension--sie-export.html#how-to-use-sie-export", "body":"Click the SIE Export button at the bottom of the screen."},
{"title":"How to use SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"-extension--sie-export.html#how-to-use-sie-export", "body":"SIE Export process creates a .se text file of the searched postings (which have status \"Ready\" - postings with other statuses are not included in the SIE file). You can download the file from the window or from the Completed tasks view after closing the process. Upload it to your accounting system."},
{"title":"How to use SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"-extension--sie-export.html#how-to-use-sie-export", "body":"After you have downloaded the file, click Done, and the process marks the postings included in the SIE export file as \"Reported\". This allows you to keep track which postings you have already exported into your accounting system. Alternatively, you can click Cancel, which closes the window without changing the postings' status."},
{"title":"How to use SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"-extension--sie-export.html#how-to-use-sie-export", "body":"You can find an example .se files from the attachments, generated with SIE export process from example data. There are two versions attached - postings_example_1_1.se has been created with version 1.1. of the process, and postings_example_1_2.se has been created with version 1.2 of the process after a major change in the specification of the SIE format."},
{"title":"Technical details", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"-extension--sie-export.html#technical-details", "body":"Technical details"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"SIE Export process is available for you to install from FA AppStore as part of the Accounting module. In order for the process to work, you need to have certain configurations in place."},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Process configurations allow you to define:"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Company name, which is picked up for the #FNAMN item in the output. Company name is a mandatory configuration for SIE export."},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Company name"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Picked up for the #FNAMN item in the output. Company name is a mandatory configuration for SIE export."},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Dimensions in the output"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Define the code you want to use for the available dimensions - if you configure a code for a certain dimension, it will be included as a #DIM item in the output, and the corresponding data from FA is fetched as an #OBJEKT item in the output. Fields that are left blank are not included in the output. Available dimensions are:"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":8, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Contact ID"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":9, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Portfolio type code"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":10, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Portfolio short name"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":11, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Asset manager contact ID"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":12, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Portfolio short name with transaction extId"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":13, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Security name"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":14, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Security ISIN code"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":15, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Security currency"},
{"title":"Configurations for SIE export", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":16, "url":"-extension--sie-export.html#configurations-for-sie-export", "body":"Transaction FX rate"},
{"title":"Item types included in the file", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"-extension--sie-export.html#item-types-included-in-the-file", "body":"SIE export from FA includes the following item types in the output, as specified by SIE format:"},
{"title":"SIE Export API", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"-extension--sie-export.html#sie-export-api", "body":"The SIE Export process may be run normally via the user interface, or via the SIE Export API. The SIE Export API includes search parameters for defining which postings to export, and runs the SIE Export process against the search results. In place of search parameters (e.g. a date range and portfolio ID), the SIE Export API can alternatively take a list of posting IDs. If posting IDs are given, those are used directly and no search is performed."},
{"title":"SIE Export API", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"-extension--sie-export.html#sie-export-api", "body":"The SIE Export API returns the generated text file and then, if the API's \"report\" parameter is \"true\", marks the postings as \"Reported\". If a blank or \"false\" \"reported\" parameter is selected, the postings are not marked."},
{"title":"Posting-based bookkeeping", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"posting-based-bookkeeping.html", "body":"Posting-based bookkeeping"},
{"title":"Overview", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"posting-based-bookkeeping.html#overview-165", "body":"Posting-based bookkeeping is based on generating postings when transactions are saved in FA. When you save a transaction in a portfolio that is linked to a posting rule set, the transaction is evaluated based on the defined posting rules, and postings representing individual bookkeeping entries are generated."},
{"title":"Overview", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"posting-based-bookkeeping.html#overview-165", "body":"When posting-based bookkeeping is enabled, you will get:"},
{"title":"Overview", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"posting-based-bookkeeping.html#overview-165", "body":"Bookkeeping tabs to the Overview and Transactions window. The Bookkeeping tab on the Overview shows all postings linked to the selected portfolio, contact or group. The Bookkeeping tab in the Transaction window shows the postings related to the opened transaction. In both tabs, you cen search postings by filtering. At the bottom of the tab, you can see the total amount of the postings on the tab."},
{"title":"Overview", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"posting-based-bookkeeping.html#overview-165", "body":"Bookkeeping view to manage all your postings."},
{"title":"Overview", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"posting-based-bookkeeping.html#overview-165", "body":"Bookkeeping postings reports. Bookkeeping postings and Bookkeeping postings (export) reports for posting-based bookkeeping fetches the bookkeeping entries from the postings created for the reported portfolio(s)."},
{"title":"Generating postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"posting-based-bookkeeping.html#generating-postings", "body":"Posting-based bookkeeping supports a variety of ways to create postings, both manual and automated. Postings can be created the following ways:"},
{"title":"Generating postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"posting-based-bookkeeping.html#generating-postings", "body":"Saving a transaction. When saving a transaction, either a new or an existing transaction, and the portfolio you are saving the transaction to is linked to a posting rule, the generation of postings is triggered. When saving the transaction, the system asks you to confirm the creation of postings, and if confirmed, the system will generate postings based on the linked posting rules. Through saving a transaction manually, regeneration of postings as well as generating postings for future linked transactions are triggered - see below for more details."},
{"title":"Generating postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"posting-based-bookkeeping.html#generating-postings", "body":"Importing transactions. When importing transactions, and the portfolio you are importing transaction to is linked to a posting rule, the generation of postings is triggered. The system generates postings based on the linked posting rules."},
{"title":"Generating postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"posting-based-bookkeeping.html#generating-postings", "body":"Creating transactions through corporate actions. When creating transactions through corporate actions, and the portfolio the transactions are created to is linked to a posting rule, the generation of postings is triggered. The system generates postings based on the linked posting rules. Regeneration of postings as well as generating postings for future linked transactions are triggered - see below for more details."},
{"title":"Generating postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"posting-based-bookkeeping.html#generating-postings", "body":"Creating transactions through executing a trade order. When creating transaction through executing a trade order, and the portfolio the transactions are created to is linked to a posting rule, the generation of postings is triggered. The system generates postings based on the linked posting rules."},
{"title":"Generating postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"posting-based-bookkeeping.html#generating-postings", "body":"Generating postings from the Transactions view. In addition to generating postings through saving new transactions to the system, you can mass-generate postings on existing transactions through the Transactions view. Search the transactions you want to generate postings for to the Transactions view, and click the Generate postings button to generate postings for the selected transactions. The system generates postings on the selected transactions only based on the linked posting rules."},
{"title":"Generating postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"posting-based-bookkeeping.html#generating-postings", "body":"Manually adding individual postings. You can also manually add individual postings, either through the Bookkeeping tab on the Overview or the Bookkeeping view. Click the New posting button on the view, and define the posting information into the new fields."},
{"title":"The logic behind the posting generation", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"posting-based-bookkeeping.html#the-logic-behind-the-posting-generation", "body":"Postings are always generated based on the posting rules defined in Preferences to portfolios that are linked to a defined posting rule set."},
{"title":"The logic behind the posting generation", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"posting-based-bookkeeping.html#the-logic-behind-the-posting-generation", "body":"If there are several posting rule sets linked to a portfolio, all matching rules are used to generate postings. For example, if you create a transaction that matches three posting rule sets, FA Back generates three sets of postings for this transaction. If you have two identical posting rule sets linked to a portfolio, you will have two sets of postings generated when saving a transaction."},
{"title":"The logic behind the posting generation", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"posting-based-bookkeeping.html#the-logic-behind-the-posting-generation", "body":"Within one posting rule set, postings are generated based on the most specific appropriate rule."},
{"title":"The logic behind the posting generation", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"posting-based-bookkeeping.html#the-logic-behind-the-posting-generation", "body":"Postings are always generated in portfolio currency, and appropriate exchange rates are used to generate postings in portfolio currency. Postings' amounts are also always rounded to two decimals. If the transaction has a reference, that is copied as the reference of the posting."},
{"title":"The logic behind the posting generation", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"posting-based-bookkeeping.html#the-logic-behind-the-posting-generation", "body":"When a transaction is saved, existing postings are regenerated, if saving a transactions would make changes to the postings - if postings would not be changed, saving a transaction doesn't regenerate postings. The status of the posting affects the regeneration: if the posting status is Reported, the existing postings are reverted (e.g. opposite entries are generated for the existing entries together with new entries based on the changes made). If posting status is Not finished, Ready or Deleted, the existing postings are replaced with the new postings."},
{"title":"The logic behind the posting generation", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"posting-based-bookkeeping.html#the-logic-behind-the-posting-generation", "body":"The status of the saved transaction also affects the status of the generated posting. If a transaction is saved with the status Accepted, the postings related to the transactions are generated with the status Ready. If a transaction is saved with the status Not finished, postings will be generated with the status Not finished as well. If a transaction is saved with the status Deleted, new postings are not generated, but existing postings are either deleted or reverted, based on the status of the existing posting as described above."},
{"title":"The logic behind the posting generation", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"posting-based-bookkeeping.html#the-logic-behind-the-posting-generation", "body":"When saving a transaction or creating a transaction through corporate action, the system also goes through future transactions within the same portfolio linked to the same security, and regenerates newer postings if necessary. Thus, if saving \/ creating a transaction to the portfolio's history, newer transactions related to the same security are also checked for changes and regenerated if necessary."},
{"title":"Modifying postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"posting-based-bookkeeping.html#modifying-postings", "body":"You can manually modify existing postings either from the Bookkeeping tab on the Overview or from the Bookkeeping view. In addition, postings can be modified by triggering the regeneration of postings."},
{"title":"Modifying postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"posting-based-bookkeeping.html#modifying-postings", "body":"Regenerating postings. You can also trigger the regeneration of postings by saving a transaction that already has postings linked to it. Regeneration will either revert or replace existing postings, if necessary, and saving an older transaction will also regenerate postings, if necessary, for future transactions linked to the same security within the same portfolio."},
{"title":"Modifying postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"posting-based-bookkeeping.html#modifying-postings", "body":"Manually modifying postings. You can modify existing postings by double-clicking a posting on the Bookkeeping view or by right-clicking a posting and selecting Modify. Make the required modifications to your postings, and remember to save the modifications with the OK button at the bottom-right corner of the view."},
{"title":"Modifying postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"posting-based-bookkeeping.html#modifying-postings", "body":"Setting status of multiple postings. You can set the status of multiple postings by once at the Bookkeeping view by selecting multiple postings, right-clicking the postings and selecting Set status. Select the new status for the selected postings in the pop up window, and click the Update button to update the changed statuses."},
{"title":"Modifying postings", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"posting-based-bookkeeping.html#modifying-postings", "body":"Changes to postings are tracked. To view the audit history, right-click the posting and choose Versions (for more details about audit history, see Track data modifications through versions)."},
{"title":"Portfolio window", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html", "body":"Portfolio window allows you to create a new portfolio or to view and edit the information of existing portfolios. You can create a new portfolio through the menu in New - New portfolio, and you can view the information of existing portfolios by double-clicking a portfolio either from your search result on the Portfolios view or from the Overview."},
{"title":"Portfolio window", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html", "body":"The basic information for the portfolio is defined in the Basic info tab, and other tabs are used to define additional information for the portfolio. Remember to check that the portfolio has a customer as a primary contact in the Contacts tab, and if you are tracking cash balances in your portfolio, remember to add appropriate accounts in the Accounts tab."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#basic-info-74593", "body":"Basic info tab allows you to define the basic information of the portfolio, such as ID and name. A red star indicates that a field is mandatory."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#basic-info-74593", "body":"The available fields are:"},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#basic-info-74593", "body":"Portfolio ID*. An individual ID defined for a portfolio. The portfolio ID separates a portfolio from other portfolios (the system does not allow more than one portfolio with a same portfolio ID). The portfolio ID is used to identify and search for a portfolio, and many of the Import functions utilize the portfolio ID. When creating a new portfolio, if the \"Generate a running number for portfolio ID automatically\" is enabled in Portfolios Preferences, the next available number is automatically set as the portfolio ID. Best practice is not to include special characters into the portfolio ID - only use numbers and letters (a-z)."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#basic-info-74593", "body":"External ID. A general ID for identifying a portfolio, for example insurance number."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#basic-info-74593", "body":"Status*. Select your portfolio's status between Active, Passive or Closed. The status allows you to categorize your portfolios, for example to differentiate between portfolios you are actively managing and portfolios you have already closed. Recommended status to use for portfolios you are actively working with is Active - such portfolios are shown everywhere in the system, and you can work with active portfolios on the Overview. Passive and Closed portfolios are not selectable on the Overview (to avoid cluttering the list of portfolios you are actively maintaining) - you can still access portfolios regardless of their status through the search views."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#basic-info-74593", "body":"Changing the status doesn't \"remove\" the portfolio from the system, just hides it away from the Overview - you can, for example, still generate reports for passive portfolio through a group, portfolio's contact, or generate a report from the Portfolios view."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"portfolio-window.html#basic-info-74593", "body":"Valuation method*. Choose the valuation method of the portfolio:"},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":8, "url":"portfolio-window.html#basic-info-74593", "body":"FIFO"},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":9, "url":"portfolio-window.html#basic-info-74593", "body":"Average price"},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":10, "url":"portfolio-window.html#basic-info-74593", "body":"FIFO with adjustments , Average price with adjustments – The \"with adjustments\" options use transaction types that control the market value of the positions with the transaction's trade amount, such as Private Equity transaction types."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":11, "url":"portfolio-window.html#basic-info-74593", "body":"Average price with separate items – The \"with separate items\" option valuates your portfolios with average price, but keeps track of original purchase dates."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":12, "url":"portfolio-window.html#basic-info-74593", "body":"FIFO (combined) – The combined option valuates the portfolio based directly on transactions in the subportfolios."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":13, "url":"portfolio-window.html#basic-info-74593", "body":"Portfolio name*. Name of the portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":14, "url":"portfolio-window.html#basic-info-74593", "body":"Type*. Choose the portfolio type from the alternatives, which are defined in Preferences - Portfolio types. The portfolio type can be for example Investment portfolio or Insurance portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":15, "url":"portfolio-window.html#basic-info-74593", "body":"Aggregation of subportfolios. Choose the method to aggregate positions from subportfolios in reporting and analytics (this feature is only available for the new 3.0 reports and Analytics+):"},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":16, "url":"portfolio-window.html#basic-info-74593", "body":"Sum up values – Aggregate the position amounts without currency conversion. Use it if the subportfolio currencies are the same as the main portfolio currency."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":17, "url":"portfolio-window.html#basic-info-74593", "body":"Recalculate values – Aggregate transactions from subportfolios and convert the amounts to the portfolio currency (using the FX rate valid on the transaction date). Use this option if you have subportfolios in different currencies than the main portfolio currency."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":18, "url":"portfolio-window.html#basic-info-74593", "body":"Even when your portfolio is locked, you can still execute trade orders that have already been marked as executable, run corporate actions, and import transactions and trade orders to your portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":19, "url":"portfolio-window.html#basic-info-74593", "body":"Custody. Choose the custody of the portfolio from the alternatives, which are defined by creating a new contact of the type Custody."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":20, "url":"portfolio-window.html#basic-info-74593", "body":"Book entry. Define the book entry number for the portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":21, "url":"portfolio-window.html#basic-info-74593", "body":"Currency*. Choose the default currency for the portfolios from the alternatives, which are defined by creating a new security of the type currency. The default currency of a portfolio defines the currency used when creating reports for the portfolio, and the transactions are recorded in the portfolio default currency."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":22, "url":"portfolio-window.html#basic-info-74593", "body":"Locked. Allows you to Lock your portfolio to prevent anyone from manually adding, modifying or deleting transactions or trade orders within the portfolio. If you try to change the transaction or trade orders within a locked portfolio, you will be notified that Your portfolio is locked! Locking a portfolio allows you to freeze your portfolio's contents from manual modifications, or for example collateralize assets by moving them to a locked sub-portfolio to prevent making modifications to the collateral."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":23, "url":"portfolio-window.html#basic-info-74593", "body":"Language. Choose the language to be used in portfolio reports from the alternatives, which are defined in Preferences - Language. The default language of a portfolio is the language of its primary contact. The language chosen for a portfolio determines, which language is used in the portfolio reports when creating a report: the reports are created in the language of the portfolio. The translations for the security and transaction types to different languages are defined in Preferences - Internationalization. If no language is selected, the reports are printed out in Finnish and the abbreviations defined for security and transaction types are used."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":24, "url":"portfolio-window.html#basic-info-74593", "body":"Juridical form*. Choose the juridical form from the alternatives, which are defined in Preferences - Juridical form. The default juridical form of a portfolio is the juridical form of its primary contact. The juridical form affects the taxation of certain transactions added to the portfolios: when creating corporate actions, the tax associated with these is defined as a combination of juridical forms and tax countries of the portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":25, "url":"portfolio-window.html#basic-info-74593", "body":"Tax country*. Choose the tax country from the alternatives, which are defined in Preferences - Countries. The default tax country of a portfolio is the tax country of its primary contact."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":26, "url":"portfolio-window.html#basic-info-74593", "body":"Creation date. Define the creation date of the portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":27, "url":"portfolio-window.html#basic-info-74593", "body":"Start-up date. Define the start-up date of the portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":28, "url":"portfolio-window.html#basic-info-74593", "body":"Update date. Define the update date of the portfolio."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":29, "url":"portfolio-window.html#basic-info-74593", "body":"Model portfolio. Choose a model portfolio for the portfolio, which is used in the portfolio rebalancing (an optional extra to FA Portfolio). When a model portfolio is linked to the portfolio, the portfolio can be rebalanced to match the model portfolio, and the system automatically creates trade orders to buy and sell securities."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":30, "url":"portfolio-window.html#basic-info-74593", "body":"Close type. Choose the close for the portfolio: No change, Depreciation, Depreciation and refund or Market value. The close type relates to Closing a portfolio: a close type can be set to a portfolio already in the portfolio information, and used for example to check the portfolio's closing values with the Book values (closing) report."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":31, "url":"portfolio-window.html#basic-info-74593", "body":"Accrued interest. Choose whether the accrued interest is calculated on the position level based on Transaction date (default) or based on Settlement date."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":32, "url":"portfolio-window.html#basic-info-74593", "body":"Transaction date – the accrued interest on a position is calculated until the selected report date. If the bond is bought, the paid accrued interest of the purchase is used as the accrued interest of the position until the settlement date of the purchase."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":33, "url":"portfolio-window.html#basic-info-74593", "body":"Settlement date – the accrued interest on a position is calculate until the settlement date. The settlement date is defined versus the selected report date using the bond's settlement date offset (if enabled), holiday calendar and business day convention. If the settlement date offset is not enabled on the bond security, the default value 0 is used."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":34, "url":"portfolio-window.html#basic-info-74593", "body":"Transaction date, interest accrued by EOD – The accrued interest on a position is calculated until the end of day on the transaction date. The transaction date is included in the interest accrual period."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":35, "url":"portfolio-window.html#basic-info-74593", "body":"Settlement date, interest accrued by EOD – The accrued interest on a position is calculated until the end of day on the settlement date. The settlement date is included in the interest accrual period."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":36, "url":"portfolio-window.html#basic-info-74593", "body":"Posting date. Define a posting date."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":37, "url":"portfolio-window.html#basic-info-74593", "body":"Price source. Choose the method to determine the close market price for the securities in the portfolio. You can use the security's close price or define a portfolio-specific priority of price sources:"},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":38, "url":"portfolio-window.html#basic-info-74593", "body":"Security's Market data info tab – Use the security close price, no portfolio-specific price source is used. Security close price is picked up from the Close column in the Security window, Market data info tab."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":39, "url":"portfolio-window.html#basic-info-74593", "body":"First available price from the price fields – For this portfolio, pick up the first available price in the Manual, Close 1, 2, 3, 4 or 5 columns in the Security window, Market data info tab (checking the column values in the order specified above)."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":40, "url":"portfolio-window.html#basic-info-74593", "body":"Define the price source order – Define the price order for this portfolio. Choose the price columns to use in the priority order. Start typing the column name in the Price source field that appears."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":41, "url":"portfolio-window.html#basic-info-74593", "body":"Posting rule. Choose the posting rules used for the portfolio from the alternatives that are defined in Preferences > Bookkeeping > Posting rule. For more information, see Posting-based bookkeeping."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":42, "url":"portfolio-window.html#basic-info-74593", "body":"Tags. Choose tags from the alternatives defined in Preferences - General - Tags. Tags can be defined in three different ways:"},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":43, "url":"portfolio-window.html#basic-info-74593", "body":"Grouped tags (select one): you can select one tag from each tag group, grouped in separate dropdowns. Only one tag in each tag group can be chosen. To group tags in a dropdown, defined them with a hyphen as \"group - tag\"."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":44, "url":"portfolio-window.html#basic-info-74593", "body":"Grouped tags (select multiple): you can select multiple tags from each tag group, grouped as separate sets of checkboxes. You can check multiple tags within each tag group. To group tags as a set of checkboxes, defined them with a colon as \"group : tag\"."},
{"title":"Basic info", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":45, "url":"portfolio-window.html#basic-info-74593", "body":"Individual tags: search for individual tags by typing the tag in the field and choosing the correct tag from the list below the field - all available tags are shown from the downward arrow on the keyboard. You can select multiple individual tags."},
{"title":"Portfolio groups", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#portfolio-groups", "body":"Portfolio groups tab allows you to manage the static portfolio groups the portfolio belongs to and see which dynamic groups your portfolio is currently part of."},
{"title":"Portfolio groups", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#portfolio-groups", "body":"Available groups - list of portfolio groups the portfolio can be added to. The groups are listed with the group's name."},
{"title":"Portfolio groups", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#portfolio-groups", "body":"Current groups - list of portfolio groups the portfolio currently belongs to. The groups are listed with the group's name."},
{"title":"Portfolio groups", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#portfolio-groups", "body":"Dynamic groups - list of dynamic groups the portfolio currently belongs to. The groups are listed with the group's name."},
{"title":"Portfolio groups", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#portfolio-groups", "body":"You can add new portfolio groups to the portfolio by selecting them from \"Available groups\" and clicking the >> button, when the group is transferred to \"Current groups\". Similarly, you can remove a portfolio group from the portfolio by selecting it from \"Current groups\" and clicking the << button, and the portfolio group is transferred back to \"Available groups\". You can also add portfolios to a portfolio group through the Groups view [link]."},
{"title":"Portfolio groups", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#portfolio-groups", "body":"For dynamic groups, you can only see which dynamic groups your portfolio belongs to, but you cannot add or remove them. You can modify the dynamic group criteria through the Groups view, which then affects which portfolios are dynamically part of the group."},
{"title":"IDs", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#ids", "body":"IDs tab allows you to define external IDs for the portfolio. These IDs are used by other parties to identify the portfolio, and can be used for example in importing transactions to the portfolio or reconciling the portfolio against an external source."},
{"title":"IDs", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#ids", "body":"Add a new ID with the Add ID button, and define the ID information in the fields. A red star indicates a mandatory field:"},
{"title":"IDs", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#ids", "body":"External name*. The name of the ID (or who uses the ID, where is it from). When starting to type in an ID, the system automatically suggests ID names you have used previously."},
{"title":"IDs", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#ids", "body":"External ID*. The external ID for the portfolio."},
{"title":"Memo", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#memo", "body":"Memo allows you to write optional information, notes or observations related to the portfolio. The contents of the memo are also shown in the Memo section on the Overview, when the portfolio is selected."},
{"title":"Memo", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#memo", "body":"The Memo is divided into different parts, which can be used to write different kinds of notes and information:"},
{"title":"Memo", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#memo", "body":"Memo. Notes written in memo can be seen on the Overview, when the portfolio is selected."},
{"title":"Memo", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#memo", "body":"Explanation, Info 2 and Info 3 . Additional text fields that can be seen on the Overview, when the portfolio is selected."},
{"title":"Memo", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#memo", "body":"Description . The contents of the description field can only be seen in the Portfolio window, not on the Overview."},
{"title":"Memo", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#memo", "body":"You can also import texts to the memo from a file through Import - Import portfolio memo, or to edit the contents of the memo directly from the Memo section on the Overview."},
{"title":"Contacts", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#contacts", "body":"Contacts tab allows you to choose the contact(s) of the portfolio as well as subportfolio(s) to the selected portfolio. The contact tab allows you to define your contact \/ portfolio structure visible on the Overview: in addition to having a contact with portfolios, you can also modify the structure by adding secondary contacts to a portfolio as well as dividing a portfolio into subportfolios."},
{"title":"Selecting contacts and defining access rights", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#selecting-contacts-and-defining-access-rights", "body":"Selecting a contact for the portfolio is an important part when creating a portfolio: the contact of the portfolio identifies the owner of the portfolio. The Contacts tab allows you to define:"},
{"title":"Selecting contacts and defining access rights", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#selecting-contacts-and-defining-access-rights", "body":"Primary contact (marked with an asterisk) – The main or \"legal\" owner of the portfolio. Various information is often picked from the portfolio's primary contact. The portfolio is shown under the primary contact on the Overview."},
{"title":"Selecting contacts and defining access rights", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#selecting-contacts-and-defining-access-rights", "body":"Other contacts - Other contacts, for example, for insurance portfolios, the primary contact is often the insurance company, while the private person taking the insurance can be linked as other contact."},
{"title":"Selecting contacts and defining access rights", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#selecting-contacts-and-defining-access-rights", "body":"When creating a new portfolio, the first contact you add to the portfolio is marked as the primary contact. You can change the primary contact by de-linking the current primary contact from the portfolio, then the first contact on the list is marked as the primary contact."},
{"title":"Selecting contacts and defining access rights", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#selecting-contacts-and-defining-access-rights", "body":"To add a contact, click Add contact and choose a contact from the drop-down list. If you have representative tags set up in preferences (see Preference - Tags), you can use them to specify the contact's role for information purposes (for example, insured person)."},
{"title":"Selecting subportfolios", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#selecting-subportfolios", "body":"Subportfolios allow you to add subportfolio(s) to the portfolio you are editing - the portfolio you are editing becomes the \"main\" portfolio, and the subportfolios you add will be shown below it in you portfolio hierarchy."},
{"title":"Selecting subportfolios", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#selecting-subportfolios", "body":"The portfolio's subportfolios are listed on the left side of the window. You can add a new subportfolio with the Add subportfolio button, and you can view and modify the information of an existing subportfolio by selecting the subportfolio from the list. You can de-link the selected subportfolio with the Delete button below the subportfolio information."},
{"title":"Asset managers", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#asset-managers", "body":"The Asset managers tab allows you to add asset managers responsible for the portfolio. Asset managers can, for example, be used to provide access to portfolios through limited visibility. To learn more about linking a representative to contact, see Set up limited visibility for one user and Set up limited visibility for many users."},
{"title":"Asset managers", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#asset-managers", "body":"To add an asset manager, click Add asset manager and choose a contact from the drop-down list. If you have representative tags set up in preferences (see Preference - Tags), you can use them to specify the asset manager's role in more detail for information purposes."},
{"title":"Accounts", "document":[], "pos":1, "url":"portfolio-window.html#accounts", "body":"The Accounts tab allows you to add different kinds of accounts to your portfolio. Accounts allow you to follow your portfolio's cash balance and calculate interest for your accounts. When you link transactions to an account, the system automatically keeps track of your account balance. Accounts are not required when creating a portfolio, but if you want to follow the cash balance of your portfolio or to set up portfolio credit, you need to add at least one cash account to your portfolio."},
{"title":"Accounts", "document":[], "pos":2, "url":"portfolio-window.html#accounts", "body":"The account at the top of the list is considered the default account of the portfolio, and all transactions are by default created against this account. If you want to create transactions against another account, you need to select it. You can modify the order of the accounts by dragging an account to the desired place in the account listing. The order of the accounts determines the order in which the accounts are shown in Overview and in reports."},
{"title":"Accounts", "document":[], "pos":3, "url":"portfolio-window.html#accounts", "body":"A portfolio can have one or more accounts: existing accounts are listed on the left side of the window. Add a new account with the Add account button and fill in the fields in the Basic info and Interest details tabs."},
{"title":"Basic info", "document":[], "pos":1, "url":"portfolio-window.html#basic-info-170", "body":"The Basic info tab contains account information, sharing and visibility options, and calculation settings."},
{"title":"Basic info", "document":[], "pos":2, "url":"portfolio-window.html#basic-info-170", "body":"Account no.*. The account number. This can be, for example, the bank account number."},
{"title":"Basic info", "document":[], "pos":3, "url":"portfolio-window.html#basic-info-170", "body":"Currency*. The account currency. Currency options are defined in the system as securities of the type Currency."},
{"title":"Basic info", "document":[], "pos":4, "url":"portfolio-window.html#basic-info-170", "body":"Name*. The name of the account."},
{"title":"Basic info", "document":[], "pos":5, "url":"portfolio-window.html#basic-info-170", "body":"BIC code. The BIC code of the account."},
{"title":"Basic info", "document":[], "pos":6, "url":"portfolio-window.html#basic-info-170", "body":"Issuer. The issuer of your account from contacts that are defined in the system as the Issuer type. Linking an issuer to your account allows you to keep track of who has issued the account. This is especially useful when analyzing your portfolio’s investments by the issuer when accounts and other investments are grouped similarly."},
{"title":"Basic info", "document":[], "pos":7, "url":"portfolio-window.html#basic-info-170", "body":"Secondary account no. A secondary account number for the account."},
{"title":"Basic info", "document":[], "pos":8, "url":"portfolio-window.html#basic-info-170", "body":"Category. The account category. When you start to type, the system automatically suggests categories you have used previously."},
{"title":"Basic info", "document":[], "pos":9, "url":"portfolio-window.html#basic-info-170", "body":"Mandate reference. The mandate reference of the account."},
{"title":"Basic info", "document":[], "pos":10, "url":"portfolio-window.html#basic-info-170", "body":"Decimals for transactions. The number of decimal places used for amounts in transactions created against the account. This setting applies to all transaction fields except Unit price, Coefficient, Yield, FX rates , and Amount (in non-cash transactions). If you leave this setting empty, the number of decimal places is taken from Preference → Content and translations → Date and decimal formats. The \"Default\" value in the drop-down means:"},
{"title":"Basic info", "document":[], "pos":11, "url":"portfolio-window.html#basic-info-170", "body":"For cash transactions – The number of decimal places specified in the Block size field for the currency security (for details, see Security window)."},
{"title":"Basic info", "document":[], "pos":12, "url":"portfolio-window.html#basic-info-170", "body":"For other transactions – The number of decimal places specified in the Block size field for the security (for details, see Security window). If the Block size field is not defined, “Default” means the number of decimal places defined in the security type settings (for details, see Preference - Securities)."},
{"title":"Basic info", "document":[], "pos":13, "url":"portfolio-window.html#basic-info-170", "body":"Account type. The type of the account. The different types of accounts are grouped separately within the FA Platform, for example in Overview. The available account types are:"},
{"title":"Basic info", "document":[], "pos":14, "url":"portfolio-window.html#basic-info-170", "body":"Cash account (part of portfolio cash)"},
{"title":"Basic info", "document":[], "pos":15, "url":"portfolio-window.html#basic-info-170", "body":"Credit account"},
{"title":"Basic info", "document":[], "pos":16, "url":"portfolio-window.html#basic-info-170", "body":"Other account"},
{"title":"Basic info", "document":[], "pos":17, "url":"portfolio-window.html#basic-info-170", "body":"Hide if balance is zero. Hides the account in Overview and Positions reports when the account balance is zero. The account is shown only when there is a non-zero balance. By default, accounts are not hidden."},
{"title":"Basic info", "document":[], "pos":18, "url":"portfolio-window.html#basic-info-170", "body":"Account sharing options:"},
{"title":"Basic info", "document":[], "pos":19, "url":"portfolio-window.html#basic-info-170", "body":"Shared to primary contact's portfolios indicates the account is shared to all portfolios with the same primary contact. This option allows you to choose the account for transactions in other portfolios of the same contact."},
{"title":"Basic info", "document":[], "pos":20, "url":"portfolio-window.html#basic-info-170", "body":"Shared to all parent portfolios' subportfolios indicates the account is shared only to the parent portfolio and the parent portfolio's sub portfolios."},
{"title":"Basic info", "document":[], "pos":21, "url":"portfolio-window.html#basic-info-170", "body":"Shared to all linked contact's portfolios indicates the account is shared to all portfolios of all contacts linked to this portfolio. The functionality is otherwise the same as for Shared to primary contact's portfolios which only considers primary contacts, but this option considers all linked contacts when determining which portfolios the account is shared to."},
{"title":"Basic info", "document":[], "pos":22, "url":"portfolio-window.html#basic-info-170", "body":"By default, the sharing options are disabled. Accounts are only shared to sub portfolios of the current portfolio. You can use shared accounts when you create transactions manually or by importing. Shared accounts are used by the system when it creates transactions through corporate actions or trade order execution, and when it creates trade orders through rebalancing. The FA Platform first checks if the portfolio has its own accounts that can be used, and if not, it checks if the portfolio has shared accounts that can be used."},
{"title":"Basic info", "document":[], "pos":23, "url":"portfolio-window.html#basic-info-170", "body":"Visibility (include account in reports). Indicates the account is visible in Overview and in other views, taken into account in all portfolio reports, and is available as a criterion when defining dynamic groups. Visibility is enabled as a default for all accounts. If an account is defined as not visible (i.e. hidden), the account is ignored in all calculations."},
{"title":"Basic info", "document":[], "pos":24, "url":"portfolio-window.html#basic-info-170", "body":"Exclude balance from portfolio total. Indicates the account is shown in your positions but its balance is not included in the total market value (or other total values) of your portfolio. By default, accounts are not excluded from the portfolio's total. This option is useful in tracking the total capital added to an insurance contract and the profits taken out."},
{"title":"Basic info", "document":[], "pos":25, "url":"portfolio-window.html#basic-info-170", "body":"Account tags. Account tags from the options defined in Preferences → General → Tags. Tags can be defined in the following ways:"},
{"title":"Basic info", "document":[], "pos":26, "url":"portfolio-window.html#basic-info-170", "body":"Grouped tags (select one). You can select one tag from each tag group, grouped in separate drop-downs. Only one tag in each tag group can be chosen. To group tags in a drop-down, define them with a hyphen as follows: \"group - tag\"."},
{"title":"Basic info", "document":[], "pos":27, "url":"portfolio-window.html#basic-info-170", "body":"Grouped tags (select multiple). You can select multiple tags from each tag group, grouped as separate sets of checkboxes. You can check multiple tags within each tag group. To group tags as a set of checkboxes, define them with a colon as follows: \"group : tag\"."},
{"title":"Basic info", "document":[], "pos":28, "url":"portfolio-window.html#basic-info-170", "body":"Individual tags. Search for individual tags by typing the tag in the field and choosing the correct tag from the list below the field. Use the downward keyboard arrow to view all available tags. You can select multiple individual tags."},
{"title":"Interest details", "document":[], "pos":1, "url":"portfolio-window.html#interest-details", "body":"The Interest details tab contains account interest calculation settings."},
{"title":"Interest details", "document":[], "pos":2, "url":"portfolio-window.html#interest-details", "body":"Base instrument. The base instrument from the securities defined in the FA Platform. The base instrument can be used in calculating accrued interest on the account with a custom formula."},
{"title":"Interest details", "document":[], "pos":3, "url":"portfolio-window.html#interest-details", "body":"Offset days. Indicates the date for checking the price of the base instrument. You cannot add a negative offset day value. Offset days are always calculated back in time."},
{"title":"Interest details", "document":[], "pos":4, "url":"portfolio-window.html#interest-details", "body":"Calendar (day count convention). The day count convention for the account. The day count is used to convert dates into a numeric representation for financial maths. You need to define a calendar day convention in order to run account interest calculations."},
{"title":"Interest details", "document":[], "pos":5, "url":"portfolio-window.html#interest-details", "body":"Transaction type. The transaction type for the selected account."},
{"title":"Interest details", "document":[], "pos":6, "url":"portfolio-window.html#interest-details", "body":"Thresholds. A feature for setting the interest rate at different levels based on the account balance. Thresholds are optional. If no thresholds are defined, the interest rate is the same regardless of the account balance. The interest rate specified for a given threshold only applies to the amount of funds in that range instead of the full account balance. For example: The account balance is 120 000€. Thresholds are set at 2% for 0-50 000€, 3% for 50 000-110 000€, and 3.5% for 110 000-200 000€. Interest is paid as follows: 2% on 50 000€, 3% on 60 000€, and 3,5% on 10 000€."},
{"title":"Interest details", "document":[], "pos":7, "url":"portfolio-window.html#interest-details", "body":"To add a new threshold or edit existing thresholds, click Edit. If you do not want to specify an upper limit for a threshold, you need to enter a very high value in Balance to to ensure that the threshold cannot be exceeded which would result in zero interest for the balance exceeding the upper limit of the threshold. Remember to specify the spread for each threshold."},
{"title":"Interest details", "document":[], "pos":8, "url":"portfolio-window.html#interest-details", "body":"Balance from. The lower limit for the account balance at which the interest rate applies."},
{"title":"Interest details", "document":[], "pos":9, "url":"portfolio-window.html#interest-details", "body":"Balance to. The upper limit for the account balance at which the interest rate applies."},
{"title":"Interest details", "document":[], "pos":10, "url":"portfolio-window.html#interest-details", "body":"Spread. The spread added to the values from the base instrument as a percentage. Enter the value as a number without the percent sign."},
{"title":"Interest details", "document":[], "pos":11, "url":"portfolio-window.html#interest-details", "body":"The last two fields are from older versions of FA Back. Do not use them for account interest calculation."},
{"title":"Interest details", "document":[], "pos":12, "url":"portfolio-window.html#interest-details", "body":"Fixing. The annual fixing as a percentage %. Fixing can be used to calculate the account's accrued interest with a custom formula."},
{"title":"Interest details", "document":[], "pos":13, "url":"portfolio-window.html#interest-details", "body":"Spread. The spread added to the values from the base instrument as a percentage %. Spread can be used to calculate the account's accrued interest with a custom formula."},
{"title":"Reporting", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#reporting-170", "body":"Reporting tab allows you to define the information related to whom this portfolio should be reported to, and information needed to sending reports via email."},
{"title":"Reporting contacts", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#reporting-contacts", "body":"You can set one or more contacts as \"reporting contacts\", or contacts to whom this portfolio should be reported to. All the reporting contacts are listed on the left side of the window based on the name of the contact. The primary contact of the portfolio is marked with a star, and the primary contact is a default reporting contact."},
{"title":"Reporting contacts", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#reporting-contacts", "body":"Choose a contact from the list to view or delete it. Add a new reporting contact to the portfolio with the Add reporting button below the contact listing. Choose the contact from the drop-down menu on the right side of the window, and add the chosen contact to the portfolio from the Add reporting button below the asset manager information."},
{"title":"Reporting contacts", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#reporting-contacts", "body":"The reporting contact is \"nice-to-know\" information, and it is not directly used by the system in reporting. For example, when sending reports via email per customer, the customers the email is sent to is picked up from portfolio contacts, not reporting contacts."},
{"title":"Reporting email addresses", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#reporting-email-addresses", "body":"When sending reports via email per portfolio, the generated reports are sent to the email addresses listed within the Reporting tab. If not email address is defined, no reports are sent to this portfolio via email."},
{"title":"Reporting email addresses", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#reporting-email-addresses", "body":"The available fields are:"},
{"title":"Reporting email addresses", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#reporting-email-addresses", "body":"Email addresses. The email addresses to send out this portfolio's reports when sending reports via email per portfolio. This field is useful if you want to define per portfolio who should receive this portfolio's reports, especially if you want to send to reports to a contact not found in the system. You can define several email addresses in this field, just separate the addresses with a comma."},
{"title":"Fees", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#fees", "body":"Fees tab allows you to define the different default fees related to the transactions created to the portfolio."},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#cost-types", "body":"Cost types allow you to associate different fees to your portfolio - a fee always consists a type (i.e. what kind of a fee this is), and a fee value (i.e. 1%). The fees you associate with your portfolio are often used as parameters in your fee formulas, in other customizations you have in your system, or as \"nice-to-know\" information on your portfolio's fees."},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#cost-types", "body":"In addition, specific fee types are used when calculating fees to trade orders in Rebalancing, when calculating costs for trade orders in Trade order execution, and when manually entering transactions in the Transaction window. You can use the fees of the type \"transaction\" by typing a question mark (?) to the Fee field in the Transaction window - the system automatically calculates the fee for the transactions by using the defined \"transaction\" fee percentage from the portfolio."},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#cost-types", "body":"The fees added to your portfolio are listed on the left side of the window: you can associate any fee type defied in Preferences - Fee calculation - Portfolio cost types and a portfolio-specific fee percentage to your portfolio. Choose a fee from the listing to view or delete it, and add a new fee to your portfolio with the Add button below the listing. Fill in the account information in the available fields."},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#cost-types", "body":"The available fields are:"},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#cost-types", "body":"Costtype - choose the cost type of the fee from the alternatives, which are defined in portfolio cost type preferences (to learn more, see Preference - Fee calculation). The type determines what kind of a fee you are adding, and different types of fees might be considered differently within you system."},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#cost-types", "body":"Name - shows the name of the chosen cost type."},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"portfolio-window.html#cost-types", "body":"Type - shows the type of the chosen cost type."},
{"title":"Cost types", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":8, "url":"portfolio-window.html#cost-types", "body":"Value - define the value of the fee - usually, the fees are defined as percentages (i.e. 1,00 means 1%)."},
{"title":"Cost formulas", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#cost-formulas", "body":"Cost formulas you link to your portfolio are used in Fee calculation, for example when calculating the Asset management fee for the portfolio."},
{"title":"Cost formulas", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#cost-formulas", "body":"The cost formulas linked to your portfolio are listed on the left side of the window: you can link any cost formula defined in Cost formula Preferences to your portfolio (to learn more, see Preference - Fee calculation). Choose a fee from the listing to view or delete it, and add a new fee to your portfolio with the Add button below the listing. Fill in the account information in the available fields."},
{"title":"Cost formulas", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#cost-formulas", "body":"The fields available are:"},
{"title":"Cost formulas", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#cost-formulas", "body":"Cost formula – choose the cost type of the fee from the alternatives, which are defined in cost formula preferences (to learn more, see Preference - Fee calculation). The formula determines how \/ with what logic the fee is calculated to the portfolio. The eye icon next to the field allows you to preview the the logic \/ code of the formula."},
{"title":"Cost formulas", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#cost-formulas", "body":"Name – shows the name of the chosen cost formula."},
{"title":"Cost formulas", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#cost-formulas", "body":"Code – shows the code of the chosen cost formula."},
{"title":"Cost formulas", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"portfolio-window.html#cost-formulas", "body":"Transaction type - shows the transaction type associated with the selected cost formula: which transaction type the formula is associated with."},
{"title":"Benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#benchmark", "body":"Benchmark tab allows you to define a benchmark index for your portfolio.You can either define a portfolio-specific benchmark index, or link a general benchmark index to your portfolio (for details, see Preference - Portfolios)."},
{"title":"Benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#benchmark", "body":"Benchmark indices are used to compare the performance or return of a portfolio to an index. The benchmark index linked to a portfolio is visible, for example, in some P\/L reports, and in Analytics Plus. Benchmark indices can be:"},
{"title":"Benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#benchmark", "body":"Single or composite. Single benchmarks consist of one index. Composite benchmarks consist of a combination of different indices (for example, a composite of 40 % index A and 60 % index B). If your benchmark consists of indices in other currency than your portfolio's currency, the index values are converted to your portfolio's currency with a relevant FX rate."},
{"title":"Benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#benchmark", "body":"Regular or interpolated. Regular benchmarks are based on the dates and position shares that you entered. For example, you can set a benchmark that is valid from 01.01.2022 and contains 20% of a certain stock. Then, you can raise the position share, for example, to 22% starting from 01.03.2023, and so on. Interpolated benchmarks are based on the position shares on the start and end date of the period. The values between the dates are calculated by the system to create a gradual change that occurs on business days. For example, if you want to reduce investments in a particular sector from 30% to 20% over 5 years, you can enter two dates and specify the start and end position shares. The values in between the dates will be calculated automatically."},
{"title":"Benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#benchmark", "body":"General or portfolio-specific. General benchmark indices are defined in Preferences. You can then apply them to a portfolio by choosing a general benchmark in the Portfolio window, Benchmark tab. Portfolio-specific benchmarks are defined per portfolio in the Portfolio window."},
{"title":"Benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#benchmark", "body":"If multiple portfolios follow the same benchmark index, it is worth defining a general benchmark index. Also, any modifications made to the general benchmark index affect the portfolios linked to the index."},
{"title":"Current benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#current-benchmark", "body":"The Current benchmark tab is displayed if a benchmark (portfolio-specific or general) is defined for the portfolio. It allows you to view your benchmark values without navigating through different tabs and dates. If you have an interpolated benchmark, the Current benchmark tab shows the benchmark weights based on the interpolation."},
{"title":"Current benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#current-benchmark", "body":"When you open the tab, it shows the benchmark values on today's date. You can choose another date to view the benchmark values for that date."},
{"title":"Portfolio-specific benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#portfolio-specific-benchmark", "body":"A portfolio-specific benchmark is used only for this one portfolio - any changes you make to the content of the benchmark affect only this one portfolio."},
{"title":"Portfolio-specific benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#portfolio-specific-benchmark", "body":"When defining a benchmark, first select the date from which the benchmark is valid from for the portfolio and Add it to your benchmark definition. The start date should usually be set as the start date of your portfolio (i.e. when the portfolio starts getting in transactions) - if the benchmark starts later than your portfolio, then the benchmark will be shown as a flat line until the date it is valid from. If you want to update your benchmark's content, add a new date to it - the new content will be valid from the new date onward, while the prior index content will be used until the new date."},
{"title":"Portfolio-specific benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#portfolio-specific-benchmark", "body":"Below each date you can see the content of the benchmark index. You can Add a new position for the index under the selected date: you need to define the security the index follows and the share of this security from the whole index. For each new position under the selected date, choose the index security from the drop-down menu. In the field next to the security, define the share of the selected security of the whole index. If the index follows a single security, define the share as 100 % - if the share of the selected security is less than 100, you have to create new positions and define their shares so that the sum of the shares of different securities under one date equals 100."},
{"title":"Portfolio-specific benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#portfolio-specific-benchmark", "body":"In addition, you can Copy model portfolio benchmark. If a Model portfolio is linked to the portfolio in the Basic info tab, and if a benchmark index is defined to the portfolio linked to the model portfolio in Model portfolio window, the benchmark index can be fetched from the model portfolio's linked portfolio and added to your portfolio. The option is only available, if a model portfolio is linked to the portfolio, and a benchmark index can be found from the model portfolio."},
{"title":"General benchmark", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#general-benchmark", "body":"You can also set a general benchmark index to your portfolio instead of defining a portfolio-specific benchmark index. You can choose a general benchmark from the options you have defined in Benchmark index Preferences (see Preference - Portfolios). The benchmark index information of the selected index is shown at the bottom of the window."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#strategy", "body":"Strategy tab allows you to define a strategy for your portfolio. A portfolio can contain multiple strategies, for example, for asset allocation, geographical allocation and industrial allocation. After a strategy is defined, you can track your portfolio's allocation and see if it follows your strategy. Make sure you allocated your securities with the same asset classes and types for comparison to work."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#strategy", "body":"A strategy is defined in the fields on the right side of the tab. To see all settings, including the ones that are valid only for Strategy analyzer, click Show strategy analyzer settings:"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#strategy", "body":"Asset group"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#strategy", "body":"The asset group the strategy is based on. For example, geographical or industry. The asset group serves as a strategy name shown in the list of strategies on the left."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#strategy", "body":"Date"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#strategy", "body":"The date from which the strategy is valid in a portfolio. This is usually the start date of your portfolio (when the portfolio starts getting in transactions). If you have a regular strategy, define one date and enter the position shares. You can later update the strategy by adding a new date and re-defining the strategy positions. The updated strategy is valid from the new date onward. If you have an interpolated strategy, you need to enter at least two dates: start date and end date of the change. For example, if you set a start date to 8.10.2022, the position shares get changed on 9.10.2022."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"portfolio-window.html#strategy", "body":"Interpolate between dates, using holiday calendar"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":8, "url":"portfolio-window.html#strategy", "body":"An option to create regular or interpolated strategies for the portfolio. Regular strategy is based on the dates and allocation shares that you entered. For example, you can set a strategy that is valid from 01.01.2022 and contains 20% of a certain asset type. Then, you can raise the allocation share, for example, to 22% starting from 01.03.2023, and so on. Interpolated strategy is based on the allocation shares on the start and end date of the period. The values between the dates are calculated by the system to create a gradual change that occurs on business days. For example, if you want to reduce investments in a particular sector from 30% to 20% over 5 years, you can enter two dates and specify the start and end share percentage. The values in between the dates will be calculated automatically."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":9, "url":"portfolio-window.html#strategy", "body":"You can set up interpolated strategy only if you have one strategy group. Interpolation is applied in Strategy analyzer."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":10, "url":"portfolio-window.html#strategy", "body":"Asset type"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":11, "url":"portfolio-window.html#strategy", "body":"The asset type you set the target shares for."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":12, "url":"portfolio-window.html#strategy", "body":"Share %"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":13, "url":"portfolio-window.html#strategy", "body":"The share of the asset class in the strategy. Shares of different asset classes under one date must sum up to 100."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":14, "url":"portfolio-window.html#strategy", "body":"Min share %"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":15, "url":"portfolio-window.html#strategy", "body":"Max share %"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":16, "url":"portfolio-window.html#strategy", "body":"Minimum and maximum share of the asset type."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":17, "url":"portfolio-window.html#strategy", "body":"Excluded"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":18, "url":"portfolio-window.html#strategy", "body":"An option to exclude an asset type from strategy analysis. For example, you can choose to exclude \"off-benchmark\" investments associated with higher risks. This option is taken into account only in the Strategy analyzer."},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":19, "url":"portfolio-window.html#strategy", "body":"Fixed"},
{"title":"Strategy", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":20, "url":"portfolio-window.html#strategy", "body":"An option to set the fixed weight for an asset type. A fixed weight is calculated based on the whole portfolio content and is not affected when you exclude an asset type from your strategy analysis."},
{"title":"Investment plan", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#investment-plan", "body":"Investment plan allows you to define an investment plan for the portfolio - the user interface works similarly to defining a benchmark index or a strategy to a portfolio. You can use your portfolio's investment plan as a portfolio-specific model when rebalancing your portfolios."},
{"title":"Investment plan", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#investment-plan", "body":"An investment plan consists of securities with percentage shares of how many percent each security constitutes of the entire plan. Investment plan essentially allows you to define which individual instruments you want to invest in, and how big of a share out of your portfolio total you want to target to invest in a specific security. If you want to include portfolio's account as a position in your investment plan, add the currency of the account as a security in the plan. See also Including portfolio's cash in model portfolios."},
{"title":"Investment plan", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#investment-plan", "body":"In addition to defining target shares for each position, you can also define the minimum and maximum shares for each security. This allows you to define minimum and maximum “thresholds” for each position, or how much you'd allow your position to deviate or drift from your target. For example, you can add an instrument to your plan with target 10%, min threshold 9% and max threshold 11%. (Available from FA 3.8 onward)"},
{"title":"Investment plan", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#investment-plan", "body":"Minimum and maximum thresholds are validated, ensuring they align with your target - if you have defined either Min share % or Max share % , your Min share % should be smaller or equal to target Share %, and Max share % should be larger or equal to target Share %. Thus, should always define both minimum and maximum threshold (if you only define a Max share %, leaving the Min share % untouched interprets 0% minimum threshold). If you try to save invalid min and max thresholds, you are presented with a warning Min and max shares should be consistent with the target share % and prevented to save invalid thresholds. You can also choose not define minimum and maximum shares in your investment plan - if you leave both min and max untouched (i.e. both min and max share are 0), they are shown with a hyphen \"-\" in your plan."},
{"title":"Investment plan", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#investment-plan", "body":"Investment plan does not have to add up to 100%, allowing you to define partial or leveraged investment plans. However, if your investment plan doesn't add up to 100%, you are presented with a question \"Positions in your investment plan add up to xx %. Do you want to save your investment plan even though it does not add up to 100 %?\" to prevent you from unintentionally saving non-complete investment plans."},
{"title":"Limits", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#limits", "body":"The Limits tab allows you to link, analyze and monitor limits, or investment constraints on your portfolio."},
{"title":"Limits", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#limits", "body":"For more information, see Limits and limit monitoring."},
{"title":"Key figures", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#key-figures", "body":"The Key figures tab allows you to store a time series of values of your choice - you can for example store fee percentages that change over time. For more details, see Key figures for contacts, portfolios and securities."},
{"title":"Key figures", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#key-figures", "body":"The following table describes portfolio key figures. Except for the portfolio credit key figure, these key figures cannot be edited. They are used by the system to record and calculate values for portfolio credit. For details on how to give portfolio credit, see Provide credit to your clients."},
{"title":"Portfolio credit", "document":[], "pos":1, "url":"portfolio-window.html#portfolio-credit", "body":"The Portfolio credit tab is where you can manage the amount of credit you want to give to the portfolio. The tab allows you to see the collateral value of portfolio positions, the amount of credit already used for the portfolio, and the amount of credit still available. You can also choose the total credit amount for the portfolio and check the portfolio credit calculation details. The following list describes the fields in this tab. For more details, see Provide credit to your clients."},
{"title":"Portfolio credit", "document":[], "pos":2, "url":"portfolio-window.html#portfolio-credit", "body":"Collateral value"},
{"title":"Portfolio credit", "document":[], "pos":3, "url":"portfolio-window.html#portfolio-credit", "body":"The summed-up collateral value of all positions in the portfolio. You can use this value as a basis for assigning the total amount of credit for the portfolio."},
{"title":"Portfolio credit", "document":[], "pos":4, "url":"portfolio-window.html#portfolio-credit", "body":"Currency"},
{"title":"Portfolio credit", "document":[], "pos":5, "url":"portfolio-window.html#portfolio-credit", "body":"The currency of the portfolio and of the collateral value. Portfolio credit is always in the same currency as the portfolio."},
{"title":"Portfolio credit", "document":[], "pos":6, "url":"portfolio-window.html#portfolio-credit", "body":"Total credit"},
{"title":"Portfolio credit", "document":[], "pos":7, "url":"portfolio-window.html#portfolio-credit", "body":"The total amount of credit you choose to make available for the portfolio."},
{"title":"Portfolio credit", "document":[], "pos":8, "url":"portfolio-window.html#portfolio-credit", "body":"Used credit"},
{"title":"Portfolio credit", "document":[], "pos":9, "url":"portfolio-window.html#portfolio-credit", "body":"The amount of credit that the portfolio has already used."},
{"title":"Portfolio credit", "document":[], "pos":10, "url":"portfolio-window.html#portfolio-credit", "body":"Available credit"},
{"title":"Portfolio credit", "document":[], "pos":11, "url":"portfolio-window.html#portfolio-credit", "body":"The amount of credit still available to use. Available credit is calculated by subtracting the used credit amount from the total credit."},
{"title":"Calculation details", "document":[], "pos":1, "url":"portfolio-window.html#calculation-details", "body":"Clicking on the Calculation details button opens a window that gives you more details of the collateral calculation process. This includes the formula used which is as follows: Position amount * collateral ratio = collateral value."},
{"title":"Calculation details", "document":[], "pos":2, "url":"portfolio-window.html#calculation-details", "body":"The table below the formula shows each position contributes to the summed-up collateral value of the portfolio. The Market value is multiplied by the Collateral ratio %, resulting in the collateral value of the position."},
{"title":"Calculation details", "document":[], "pos":3, "url":"portfolio-window.html#calculation-details", "body":"The collateral ratio of a position in the table is determined by the value you assign for the security as its Collateral ratio in the Key figures tab. Enter the ratio as a percentage without the percent sign. For more details, see Security key figures."},
{"title":"Documents", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#documents", "body":"The Documents tab allows you to manage documents related to your portfolios. For more information, see Document management."},
{"title":"Saving a portfolio", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#saving-a-portfolio", "body":"Saving a portfolio saves the portfolio into the system, and after you save the portfolio, you can for example create transactions to it. When editing the information of an existing portfolio, usually the system just updates the portfolio information - the updated information is picked up by the system automatically."},
{"title":"Saving a portfolio", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-window.html#saving-a-portfolio", "body":"However, if you modify Valuation method or Source field value within the Basic info, modify your portfolio's accounts within the Accounts tab, or change your portfolio's benchmark within the Benchmark tab, the system automatically triggers a report recalculation to update the effect of the change into your portfolio's positions."},
{"title":"Saving a portfolio", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#saving-a-portfolio", "body":"At the bottom of the Portfolio window, you can:"},
{"title":"Saving a portfolio", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#saving-a-portfolio", "body":"Save and close – saves the portfolio \/ the changes made to the portfolio information and closes the window."},
{"title":"Saving a portfolio", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#saving-a-portfolio", "body":"Save – saves the changes made to the portfolio information, and takes you back to the Basic info tab."},
{"title":"Saving a portfolio", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#saving-a-portfolio", "body":"Copy as new – copies all of the existing portfolio's information as a base for you to create a new portfolio with a new ID. This function copies all other portfolio information except for the Portfolio ID, External ID and entries in the IDs tab, since these are portfolio-specific and related to only one single portfolio."},
{"title":"Related links", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-window.html#related-links-170", "body":"Manage portfolios, positions, and accounts in FA User guide"},
{"title":"User access", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":1, "url":"user-access.html", "body":"Follow the instructions below to set up access to FA Client Portal:"},
{"title":"User access", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":2, "url":"user-access.html", "body":"Access for end users - Create a user and specify contacts and portfolios the user can access."},
{"title":"User access", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":3, "url":"user-access.html", "body":"Access for troubleshooting - Set up view-only access to client information for advisors, support service, and so on."},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":1, "url":"user-access.html#access-for-end-users", "body":"FA Client Portal provides end clients with access to investment information. The user can access:"},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":2, "url":"user-access.html#access-for-end-users", "body":"Their own portfolios and subportfolios."},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":3, "url":"user-access.html#access-for-end-users", "body":"Portfolios and subportfolios of the contacts the user represents – for example, if the user represents their child or a company they work for. A representative can switch between the contacts in FA Client Portal by clicking ."},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":4, "url":"user-access.html#access-for-end-users", "body":"To provide access to FA Client Portal, you need to:"},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":5, "url":"user-access.html#access-for-end-users", "body":"Add a new user as described in Managing users in FA Admin guide. Assign the user CLIENT PORTAL role."},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":6, "url":"user-access.html#access-for-end-users", "body":"Set up the user’s access to client information stored in FA Back:"},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":7, "url":"user-access.html#access-for-end-users", "body":"To let the user access their own investment information, make sure the user's contact is specified as a primary contact for the portfolio (see Contacts) and link this contact to the user in FA Admin console (to do this, follow the steps in Link a contact to the user)."},
{"title":"Access for end users", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":8, "url":"user-access.html#access-for-end-users", "body":"To let a representative access the linked contacts’ information in FA Client Portal, add the user as the contact’s representative in the Contact window, Representatives tab."},
{"title":"Access for troubleshooting", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":1, "url":"user-access.html#idm46709271488224", "body":"Access for troubleshooting"},
{"title":"Access for troubleshooting", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":2, "url":"user-access.html#idm46709271488224", "body":"View-only mode lets advisors and support service specialists access the same view as the client sees, without being able to make any modifications. To access client accounts in FA Client Portal view-only:"},
{"title":"Access for troubleshooting", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":3, "url":"user-access.html#idm46709271488224", "body":"Assign your user \"CLIENT PORTAL IMPERSONATE\" role in FA Admin Console. See Assign user roles for detailed instructions."},
{"title":"Access for troubleshooting", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":4, "url":"user-access.html#idm46709271488224", "body":"View FA Client Portal for a contact in the impersonate mode:"},
{"title":"Access for troubleshooting", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":5, "url":"user-access.html#idm46709271488224", "body":"In FA Back, right-click the contact in the Overview and choose \"Impersonate in Client Portal\"."},
{"title":"Access for troubleshooting", "document":["FA Client portal reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Client portal reference"], "lvl0": ["Document"]}, "pos":6, "url":"user-access.html#idm46709271488224", "body":"FA Client Portal opens in a new tab in your browser"},
{"title":"About FA Advisor", "document":[], "pos":1, "url":"about-fa-advisor.html", "body":"FA Advisor app provides advisors with tools for managing customer-related tasks for existing customers and onboarding new customers."},
{"title":"About FA Advisor", "document":[], "pos":2, "url":"about-fa-advisor.html", "body":"You can use FA Advisor to do the following:"},
{"title":"About FA Advisor", "document":[], "pos":3, "url":"about-fa-advisor.html", "body":"View and edit customer information. You can see a list of all customers and select an individual customer to view their details."},
{"title":"About FA Advisor", "document":[], "pos":4, "url":"about-fa-advisor.html", "body":"Manage customer-related notes and documents."},
{"title":"About FA Advisor", "document":[], "pos":5, "url":"about-fa-advisor.html", "body":"View and manage tasks related to a customer. For example, tasks can be reminders to call the customer at a specific time."},
{"title":"About FA Advisor", "document":[], "pos":6, "url":"about-fa-advisor.html", "body":"Onboard new customers."},
{"title":"About FA Advisor", "document":[], "pos":7, "url":"about-fa-advisor.html", "body":"View a customer's investments in FA Client Portal with access to the same view as the customer but without the ability to make modifications."},
{"title":"Access to FA Advisor", "document":[], "pos":1, "url":"user-access-270121.html#access-to-fa-advisor", "body":"Access to FA Advisor"},
{"title":"Access to Client Portal", "document":[], "pos":1, "url":"user-access-270121.html#access-to-client-portal", "body":"You can access a view-only version of a customer's FA Client Portal in the Customers view in FA Advisor. To have access, a user needs to have the correct role assigned to them. See 1 for detailed instructions."},
{"title":"Work with customers", "document":[], "pos":1, "url":"work-with-customers.html", "body":"In FA Advisor, you can see an overview of all of your customers and select individual customers from the list to see more detailed information about them."},
{"title":"Customer information in FA Advisor", "document":[], "pos":1, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The following information is available as columns or fields in FA Advisor:"},
{"title":"Customer information in FA Advisor", "document":[], "pos":2, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Customer ID"},
{"title":"Customer information in FA Advisor", "document":[], "pos":3, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"A unique ID defined for a customer in FA Back. The customer ID separates a customer from other customers (the system does not allow more than one customer with the same customer ID). Customer ID cannot be edited in FA Advisor. You can edit it in FA Back (Contact ID in Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":4, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"External ID"},
{"title":"Customer information in FA Advisor", "document":[], "pos":5, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The customer’s ID in an external system, for example, identity number or social security number. The external ID can be used to set up client authentication in FA."},
{"title":"Customer information in FA Advisor", "document":[], "pos":6, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Customer type"},
{"title":"Customer information in FA Advisor", "document":[], "pos":7, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Contact type specified in FA Back. Customer type cannot be edited in FA Advisor. You can edit it in FA Back (Contact window, Type field)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":8, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Name"},
{"title":"Customer information in FA Advisor", "document":[], "pos":9, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The name of the customer."},
{"title":"Customer information in FA Advisor", "document":[], "pos":10, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Status"},
{"title":"Customer information in FA Advisor", "document":[], "pos":11, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The status of the customer record in the system. Customer status cannot be edited in FA Advisor. You can edit it in FA Back (Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":12, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Representative"},
{"title":"Customer information in FA Advisor", "document":[], "pos":13, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Advisor or asset manager who represents the customer. Representatives cannot be edited in FA Advisor. You can edit the representatives in FA Back (Representatives tab in Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":14, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Classification"},
{"title":"Customer information in FA Advisor", "document":[], "pos":15, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The trading classification of the customer, for example, professional or non-professional. Classification cannot be edited in FA Advisor. You can edit it in FA Back (Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":16, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Juridical form"},
{"title":"Customer information in FA Advisor", "document":[], "pos":17, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The juridical form of the customer, for example, private person or company. Juridical form cannot be edited in FA Advisor. You can edit it in FA Back (Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":18, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Language"},
{"title":"Customer information in FA Advisor", "document":[], "pos":19, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The language to produce reports for the customer. If no language is selected, the reports are printed out in Finnish. Language cannot be edited in FA Advisor. You can edit it in FA Back (Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":20, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Nationality"},
{"title":"Customer information in FA Advisor", "document":[], "pos":21, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The nationality of the customer. Nationality cannot be edited in FA Advisor. You can edit it in FA Back (Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":22, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Taxation country"},
{"title":"Customer information in FA Advisor", "document":[], "pos":23, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The taxation country of the customer. Taxation country cannot be edited in FA Advisor. You can edit it in FA Back (Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":24, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Tags"},
{"title":"Customer information in FA Advisor", "document":[], "pos":25, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Tags assigned to the customer in the system. Tags are used, for example, to set up access to customer portfolios, manage trade orders, or produce reports. Tags cannot be edited in FA Advisor. You can edit them in FA Back (Contact window)."},
{"title":"Customer information in FA Advisor", "document":[], "pos":26, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Phone numbers 1 and 2"},
{"title":"Customer information in FA Advisor", "document":[], "pos":27, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The customer's phone numbers."},
{"title":"Customer information in FA Advisor", "document":[], "pos":28, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Email"},
{"title":"Customer information in FA Advisor", "document":[], "pos":29, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The email address of the customer."},
{"title":"Customer information in FA Advisor", "document":[], "pos":30, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"Address (Address 1, Address 2, Postal code, City, Country)"},
{"title":"Customer information in FA Advisor", "document":[], "pos":31, "url":"work-with-customers.html#customer-information-in-fa-advisor", "body":"The customer’s address information."},
{"title":"View and edit customer information", "document":[], "pos":1, "url":"view-and-edit-customer-information.html", "body":"The Customers view provides an overview of all of your customers as a list. From this view, you can access the details of individual customers as well as open their FA Client Portal profile."},
{"title":"View all your customers as a list", "document":[], "pos":1, "url":"view-and-edit-customer-information.html#view-all-your-customers-as-a-list", "body":"To see all your customers in a list, open the Customers view. You can search and filter this list and choose to show or hide certain columns, giving you control of the amount of information shown."},
{"title":"View all your customers as a list", "document":[], "pos":2, "url":"view-and-edit-customer-information.html#view-all-your-customers-as-a-list", "body":"Show or hide columns. Click Columns and toggle the switches next to each column."},
{"title":"View all your customers as a list", "document":[], "pos":3, "url":"view-and-edit-customer-information.html#view-all-your-customers-as-a-list", "body":"Filter the list. Click Filters and choose the filtering options."},
{"title":"View all your customers as a list", "document":[], "pos":4, "url":"view-and-edit-customer-information.html#view-all-your-customers-as-a-list", "body":"Save a view with selected filters and columns. Click Save view. You can set the view as the default view if needed. To open a previously saved view, click Select view and choose a view from the dropdown menu. To see all saved views and edit them, click ."},
{"title":"View all your customers as a list", "document":[], "pos":5, "url":"view-and-edit-customer-information.html#view-all-your-customers-as-a-list", "body":"Export the search results.You can print the list of customer information or export it as a CSV file by clicking the Export button."},
{"title":"View all your customers as a list", "document":[], "pos":6, "url":"view-and-edit-customer-information.html#view-all-your-customers-as-a-list", "body":"SCREENSHOT OF CUSTOMERS VIEW"},
{"title":"View customer details", "document":[], "pos":1, "url":"view-and-edit-customer-information.html#view-customer-details", "body":"To open Customer details, click in the Actions column."},
{"title":"View customer details", "document":[], "pos":2, "url":"view-and-edit-customer-information.html#view-customer-details", "body":"View and edit customer information. Click Edit to make changes to their information. See Customer information in FA Advisor for more information on the fields."},
{"title":"View customer details", "document":[], "pos":3, "url":"view-and-edit-customer-information.html#view-customer-details", "body":"View the customer's investments as a pie chart or a table in the Investments section."},
{"title":"View customer details", "document":[], "pos":4, "url":"view-and-edit-customer-information.html#view-customer-details", "body":"You can see the name, ID, and total value of each portfolio next to the chart. The chart only shows active portfolios. If the customer has more than 10 portfolios, only 10 are displayed in the pie chart with the smallest portfolios grouped. Portfolios with less than 5% of the total value are also grouped in the pie chart."},
{"title":"View customer details", "document":[], "pos":5, "url":"view-and-edit-customer-information.html#view-customer-details", "body":"SCREENSHOT OF CUSTOMER DETAILS"},
{"title":"Access FA Client Portal", "document":[], "pos":1, "url":"view-and-edit-customer-information.html#access-fa-client-portal", "body":"To access a view-only version of a customer's FA Client Portal profile, click ICON in the Actions column. You cannot make changes to the customer's FA Client Portal in this version."},
{"title":"View and manage notes and documents", "document":[], "pos":1, "url":"view-and-manage-notes-and-documents.html", "body":"The Notes section in Customer details allows you to view and modify notes, background information, and documents related to the customer."},
{"title":"View and modify customer info", "document":[], "pos":1, "url":"view-and-manage-notes-and-documents.html#view-and-modify-customer-info", "body":"You can view and edit text in the Customer info tab. Use the Edit button to modify the notes."},
{"title":"View and manage documents", "document":[], "pos":1, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"You can view and manage customer-related documents in the Documents tab of the Notes section. The table shows you the documents that have been uploaded for the customer, grouped by document type using tags (see Preference - Tags to configure document type tags in FA Back)."},
{"title":"View and manage documents", "document":[], "pos":2, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"To delete documents or download them to your computer or device, use the Delete and Download buttons. To add documents, use the Upload button."},
{"title":"View and manage documents", "document":[], "pos":3, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"SCREENSHOT OF DOCUMENTS TAB"},
{"title":"View and manage documents", "document":[], "pos":4, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"The following columns are shown for each document:"},
{"title":"View and manage documents", "document":[], "pos":5, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"Group"},
{"title":"View and manage documents", "document":[], "pos":6, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"The type of the document, for example, agreement or investment plan. Document types are configured in FA Back (Preference, Document tags)."},
{"title":"View and manage documents", "document":[], "pos":7, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"Document name"},
{"title":"View and manage documents", "document":[], "pos":8, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"The name of the document and its file extension, for example, PDF or XLSX."},
{"title":"View and manage documents", "document":[], "pos":9, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"Uploaded by"},
{"title":"View and manage documents", "document":[], "pos":10, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"The username of the user who uploaded the document."},
{"title":"View and manage documents", "document":[], "pos":11, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"Upload date"},
{"title":"View and manage documents", "document":[], "pos":12, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"The upload date and time of the document."},
{"title":"View and manage documents", "document":[], "pos":13, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"Document signing"},
{"title":"View and manage documents", "document":[], "pos":14, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"The signing status of the document, for example, pending or expired. Document signing tags are configured in FA Back (Preference, Document tags). To modify the signing status of a document, the document signing tag needs to be assigned in FA Back (see Managing documents)."},
{"title":"View and manage documents", "document":[], "pos":15, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"FA Client Portal"},
{"title":"View and manage documents", "document":[], "pos":16, "url":"view-and-manage-notes-and-documents.html#view-and-manage-documents", "body":"The availability of the document in FA Client Portal. To make a document available in the FA Client Portal, it needs to be assigned the \"Online\" tag in FA Back (see Managing documents)."},
{"title":"View and manage meeting notes", "document":[], "pos":1, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"You can upload new meeting notes in the Meeting notes tab. You can also download or delete existing meeting notes similarly to documents."},
{"title":"View and manage meeting notes", "document":[], "pos":2, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"The following columns are shown for meeting notes:"},
{"title":"View and manage meeting notes", "document":[], "pos":3, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"Meeting note name"},
{"title":"View and manage meeting notes", "document":[], "pos":4, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"The name of the meeting note file."},
{"title":"View and manage meeting notes", "document":[], "pos":5, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"Meeting date"},
{"title":"View and manage meeting notes", "document":[], "pos":6, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"The date and time of the meeting."},
{"title":"View and manage meeting notes", "document":[], "pos":7, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"Author"},
{"title":"View and manage meeting notes", "document":[], "pos":8, "url":"view-and-manage-notes-and-documents.html#view-and-manage-meeting-notes", "body":"The user who uploaded the meeting note."},
{"title":"Add other tabs", "document":[], "pos":1, "url":"view-and-manage-notes-and-documents.html#add-other-tabs", "body":"The Notes section also allows you to add other tabs for your convenience. To create a new tab, use the + Add tab button and enter a name for it in the Note name field. You can then add your notes in the text editor."},
{"title":"Import payment response files for Direct Debit from the bank", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":2, "url":"import-direct-debit-payment-response-files--from-bank-.html", "body":"Response file Response to Explanation"},
{"title":"Import payment response files for Direct Debit from the bank", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":3, "url":"import-direct-debit-payment-response-files--from-bank-.html", "body":"Pain.002 Pain.008 Two different kind of Pain.002 files can be received. Payment rejected - File technically correct - but payment was rejected due to different reasons (e.g. Mandate not valid anymore)File rejected - File technically incorrect"},
{"title":"Import payment response files for Direct Debit from the bank", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":4, "url":"import-direct-debit-payment-response-files--from-bank-.html", "body":"Camt.053\/054 Pain.008 Payment successful (matches and update Deposit transaction)"},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":3, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351", "body":"Function"},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":4, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351", "body":"1 Upload the payment file by using a importing tool: "},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":5, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351", "body":"2 Payment function in FA processes the file and creates new deposit if it can find it in file."},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":6, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351", "body":"3 You can see the summary of processed payment files in dashboard called “Payment reader“. If you want to see details, see the task ion task view."},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":3, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351-1", "body":"Function"},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":4, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351-1", "body":"1 Upload the payment file by using an importing tool: "},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":5, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351-1", "body":"2 The payment function in FA processes the file and modifies the transaction if it finds these."},
{"title":"Preconditions", "document":["FA User guide"], "hierarchicalCategories": {"lvl1": ["Document > FA User guide"], "lvl0": ["Document"]}, "pos":6, "url":"payment-reader--camt-053---pain-002-.html#preconditions-15-276351-1", "body":"3 You can see the summary of processed payment files in the dashboard called “Payment reader“. If you want to see details, see the task ion task view."},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"syntax-in-conditions-and-actions.html#idm46709276554016", "body":"Variable Comment Example"},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"syntax-in-conditions-and-actions.html#idm46709276554016", "body":"$ References an arbitrary element iterated over in a loop. "},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"syntax-in-conditions-and-actions.html#idm46709276554016", "body":"\"$1\", \"$2\", \"$3\", etc. References one specific element at the first, second, third, an so on, place in a list. If the list has only one value, then \"$1\" works, but \"$2\" and \"$3\" don't, since they are referencing non-existing elements. "},
{"title":"Variables", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"syntax-in-conditions-and-actions.html#idm46709276554016", "body":"$t, $s, $p, $c References an object from FA for which the rule is currently executed. For example, a transaction, a trade order, a security, a portfolio, or a contact. The object type must first be imported (the first highlight in the example picture), and then declared (the second highlight in the example picture), before it can be used in a rule. "},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Expression Syntax Comment Example"},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Loop forall(||){} Iterates over each element in a comma-separated list. forall(||){$t.getStatus() == $} This example returns \"true\" if the transaction has any of the statuses in the list."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Loop forall(&&){} Iterates over each element in a comma-separated list. forall(&&){$t.hasTag($)} This example returns \"true\" if the transaction has all tags in the list."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Equality == Checks if something is equal to a value. $t.getType() == \"$1\" True if the transaction type is equal to the value referenced by \"$1\"."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Inequality != Checks if something is not equal to a value. $t.getType() != \"$1\" True if the transaction type is not equal to the value referenced by \"$1\"."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Less than < Checks if something is less than a value. $t.getTradeAmount() < \"$1\" True if the transaction trade amount is less than the value referenced by \"$1\"."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Greater than > Checks if something is greater than a value. $t.getTradeAmount() > \"$1\" True if the transaction trade amount is greater than the value referenced by \"$1\"."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Less than or equal to <= Checks if something is less than or equal to a value. $t.getTradeAmount() <= \"$1\" True if the transaction trade amount is less than or equal to the value referenced by \"$1\"."},
{"title":"Condition field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"syntax-in-conditions-and-actions.html#idm46709276553888", "body":"Greater than or equal to >= Checks if something is greater than or equal to a value. $t.getTradeAmount() >= \"$1\" True if the transaction trade amount is greater than or equal to the value referenced by \"$1\"."},
{"title":"Action field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"syntax-in-conditions-and-actions.html#idm46709276539360", "body":"Expression Syntax Comment Example"},
{"title":"Action field", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"syntax-in-conditions-and-actions.html#idm46709276539360", "body":"Update object data update(object); Updates object's data for remaining rule checks in the same decision table. This enables the next rules in the decision table to react to the changes done in the previous action field. update($t); Updates the transaction object with the values set by previous action. Enables remaining conditions to react to the updated values. Please see the sample Calculate fees for transactions"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Portfolio attribute Syntax Additional information Return type"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Type Code type.code Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Portfolio ID shortName Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Status code status Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Currency currency.securityCode Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Primary contact primaryContact Contact conditions and actions Contact"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Juridical code juridical.code Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Language code language.code Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Tax country code country.code Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Start date startDate Basic info Java date"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Creation date creationDate Basic info Java date"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Valuation method valuationMethod Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Portfolio group codes portfolioGroups Portfolio groups String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"In portfolio group hasGroup(\"$1\", services) Portfolio groups Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Not in portfolio group hasNotGroup(\"$1\", services) Portfolio groups Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Has tag hasTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Doesn't have tag hasNotTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Has group tag hasGroupTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"portfolio-conditions-and-actions.html#conditions-29", "body":"Doesn't have group tag hasNotGroupTag(\"$1\") Preference - Tags Boole"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"portfolio-conditions-and-actions.html#actions-29", "body":"Action Syntax Input type"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"portfolio-conditions-and-actions.html#actions-29", "body":"Add a tag setTag(\"$1\") String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-conditions-and-actions.html#actions-29", "body":"Remove a tag removeTag(\"$1\") String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-conditions-and-actions.html#actions-29", "body":"Set status code setStatus(\"$1\") String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Contact attribute Syntax Additional information Return type"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Contact ID contactId Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"contact-conditions-and-actions.html#conditions-32", "body":"External ID externalId Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Name name Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Status code status Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Type code type.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Sub type code contactSubType.code Preference - Contacts String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Identity code contactIdentity.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Juridical code juridical.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Classification code classification.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Classification 2 code classification2.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Classification 3 code classification3.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Tax country code taxCountry.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Nationality country code nationality.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Language code language.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Representatives Contact IDs representativeCodesString.code Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Representatives names representativeNamesString Contact window String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Has tag hasTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Does not have tag hasNotTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Has group tag hasGroupTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"contact-conditions-and-actions.html#conditions-32", "body":"Does not have group tag hasNotGroupTag(\"$1\") Preference - Tags Boolean"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"contact-conditions-and-actions.html#actions-32", "body":"Action Syntax Additional information Input type"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"contact-conditions-and-actions.html#actions-32", "body":"Set Contact ID setContactId(\"$1\") Contact window String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"contact-conditions-and-actions.html#actions-32", "body":"Set external ID setExternalId(\"$1\") Contact window String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"contact-conditions-and-actions.html#actions-32", "body":"Set name setName(\"$1\") Contact window String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"contact-conditions-and-actions.html#actions-32", "body":"Set status setStatus(\"$1\") Contact window String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"contact-conditions-and-actions.html#actions-32", "body":"Add a tag setTag(\"$1\") Preference - Tags String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"contact-conditions-and-actions.html#actions-32", "body":"Remove a tag removeTag(\"$1\") Preference - Tags String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security-conditions-and-actions.html#conditions-35", "body":"Security attribute Syntax Additional information Return type"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"security-conditions-and-actions.html#conditions-35", "body":"Code securityCode Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"security-conditions-and-actions.html#conditions-35", "body":"Name name Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"security-conditions-and-actions.html#conditions-35", "body":"ISIN code isinCode Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"security-conditions-and-actions.html#conditions-35", "body":"Status code status Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"security-conditions-and-actions.html#conditions-35", "body":"Type code type.code Standard security types String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"security-conditions-and-actions.html#conditions-35", "body":"Subtype code securitySubType.code Standard security types. String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"security-conditions-and-actions.html#conditions-35", "body":"Issuer issuer Contact conditions and actions Contact"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"security-conditions-and-actions.html#conditions-35", "body":"Currency code currency Currencies (ISO 4217) String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"security-conditions-and-actions.html#conditions-35", "body":"Country code country Standard country list String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"security-conditions-and-actions.html#conditions-35", "body":"Marketplace code exchange.code Marketplaces String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"security-conditions-and-actions.html#conditions-35", "body":"Trade code tradeCode Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"security-conditions-and-actions.html#conditions-35", "body":"Update code updateCode updateCode1 updateCode2 updateCode3 Basic info String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"security-conditions-and-actions.html#conditions-35", "body":"Settlement place code settlement Preference - Securities String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"security-conditions-and-actions.html#conditions-35", "body":"Linked portfolio linkedIndex Portfolio conditions and actions Portfolio"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"security-conditions-and-actions.html#conditions-35", "body":"Class code classType1 classType2 classType3 classType4 classType5 Preference - Securities String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"security-conditions-and-actions.html#conditions-35", "body":"Has a tag hasTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"security-conditions-and-actions.html#conditions-35", "body":"Does not have a tag hasNotTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"security-conditions-and-actions.html#conditions-35", "body":"Has a group tag hasGroupTag(\"$1\") Preference - Tags Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"security-conditions-and-actions.html#conditions-35", "body":"Does not have a group tag hasNotGroupTag(\"$1\") Preference - Tags Boolean"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"security-conditions-and-actions.html#actions-35", "body":"Action Syntax Additional information Input type"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"security-conditions-and-actions.html#actions-35", "body":"Set code setSecurityCode(\"$1\") ??? String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"security-conditions-and-actions.html#actions-35", "body":"Set name setName(\"$1\") ??? String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"security-conditions-and-actions.html#actions-35", "body":"Add tag or change an existing group tag setTag(\"$1\") String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"security-conditions-and-actions.html#actions-35", "body":"Remove a tag removeTag(\"$1\") String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"security-conditions-and-actions.html#actions-35", "body":"Set status setStatus(\"$1\") ??? String"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"security-conditions-and-actions.html#actions-35", "body":"Set Class setClassType1(services.getConfigurationService().loadClassTypeByCode(\"$1\")) setClassType2(services.getConfigurationService().loadClassType2ByCode(\"$1\")) FA Back reference String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Transaction attribute Syntax Additional information Return type"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Type code type Preference - Transactions String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Status code status Transaction: OK, DEL or NF Trade order: ORDER String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Order status (if trade order) orderStatus Trade order window 4=Open 1=Executable 3=Cancelled 2=Executed 5=Accepted 6=In execution 12=Partially executed in the market 7=Executed in the market 8=Rejected 9=Expired 10=Sent to execution 11=Settled in market String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Price price Price = amount x unit price. That is, price in security currency before fees and taxes are applied. double"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Trade amount in security currency tradeAmount price +\/- fees +\/- taxes in security currency double"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Trade amount in portfolio currency tradeAmountInPortfolioCurrency double"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Trade amount in account currency tradeAmountInAccountCurrency double"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Account account Account is not mandatory. Check if null before accessing account attributes. Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Account's visibility account.visibility TRUE = visible FALSE = not visible Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Account's number account.number String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Account's BIC account.bic String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Settlement place settlementPlaceCode Asset classes and types String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Marketplace marketPlaceCode String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Counter contact counter Contact"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Parent portfolio parentPortfolio Portfolio"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Parent portfolio's primary contact primaryContact Primary contact is not mandatory. Check if null before accessing primaryContact attributes. Contact"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Parent portfolio's primary contact's Contact ID primaryContactId String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Parent portfolio’s primary contact’s type code primaryContactTypeCode String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Parent portfolio’s primary contact's tag primaryContact.hasTag(\"$1\") Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Parent portfolio's group names services.getPortfolioService().findPortfolioGroupNamesByPortfolio($t.parentPortfolio).contains(\"$1\") String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":22, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Security code securityCode If transaction has security, it returns the code. Otherwise, if transaction has an account, it returns the account number. String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":23, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Security type securityTypeCode String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":24, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Security security Security is not mandatory. Check if null before accessing security attributes. Security"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":25, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Security tag security.hasTag(\"$1\") Boolean"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":26, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Transaction type effect type.amountEffect 1 adds amount0 no effect-1 reduces amount String"},
{"title":"Conditions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":27, "url":"transaction-and-trade-order-conditions-and-actions.html#conditions-38", "body":"Fee cost cost2 double"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Action Syntax Additional information"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Change transaction status $t.setStatus(\"$1\") Transaction statuses: OK, NF, DEL Trade order status: ORDER"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Change trade order status $t.setOrderStatus(\"$1\") 4,0,1,2,3,5,…"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Set a tag $t.setTag(\"$1\") Adds a new tag or changes an existing group tag."},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Remove a tag $t.removeTag(\"$1\")"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Set transaction type $t.setTransactionTypeByCode(\"$1\",services) Sets transaction type on a transaction \/ trade order based on a code"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Apply a cost or a tax on a transaction or trade order $t.applyCost1(absolute,relative,min,max,calculationMethod,costTypeCode,services) Parameters: double absolute, double relative, double min, double max, int calculationMethod, String costTypeCode, Services services E.g. setting a relative cost of type FEE $t.applyCost1(0,$1,0,0,0,\"FEE\",services) Other methods: $t.applyCost2 $t.applyTax1 $t.applyTax2 Calculates tax2 against total cost of the transaction $t.applyTax2OnTotalCost(relative,min,max,calculationMethod,costTypeCode,services) If absolute cost\/tax is given, it is used. Otherwise, relative (%) cost is applied. Min and max used if greater than zero. Calculation method 0 = Method from the trade order. If not defined, same as 1 1 = NOTDEFINED (defaults to unit based) 2 = UNITBASED 3 = GROSSTRADEAMOUNTBASED 4 = NETTRADEAMOUNTBASED costTypeCode is tax type code with tax methods. Always just give ‘services’ as a param."},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Change transaction or trade order type $t.setType(services.getPortfolioService().loadTransactionType(\"$1\")) Needs to be a transaction type code that is defined in Preferences."},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Changing settlement date by adding e.g. 2 business days taking security’s holiday calendar into account. $t.setSettlementDate(com.fasolutions.math.util.BusinessDaysUtil.nextBusinessDate($t.getTransactionDate(),2, $t.getSecurity().getHolidayCalendar(),services.securityService.getReferenceData()))"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Convert an amount from one currency to another PositionUtils.fxRate(services,fromCurrencyCode,toCurrencyCode,date)PositionUtils.convertFx(services, amount, fromCurrencyCode, toCurrencyCode, decimals)PositionUtils.convertFx(services, amount, fromCurrencyCode, toCurrencyCode) Requires importingReturns an FX rate between \"from currency\" to \"to currency\". FX rate can be used to convert from one currency to another currency. E.g. [amount in from currency] x fxRate = [amount in to currency]Converts an amount from one currency to another currency using specific date's FX rate using given number of decimals in the return value.Converts an amount from one currency to another currency using specific date's FX rate using 2 decimals in the return value. import fi.fasolutions.mod.portfoliomanagement.util.PositionUtils"},
{"title":"Actions", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"transaction-and-trade-order-conditions-and-actions.html#actions-38", "body":"Set string to internal info and keep existing information $t.setIntInfoString(\"String1\", \"String2\") Adds the given strings as a key value pair string (e.g. \"String1=String2\") in the internal info without removing existing data."},
{"title":"Events", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"process-workflow.html#events", "body":"Name Function"},
{"title":"Events", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"process-workflow.html#events", "body":"Start event Indicates the starting point of the workflow."},
{"title":"Events", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"process-workflow.html#events", "body":"Intermediate event registry catching event Continues the workflow upon receiving a signal."},
{"title":"Events", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"process-workflow.html#events", "body":"End event Ends the current process execution path."},
{"title":"Events", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"process-workflow.html#events", "body":"Terminate end event Terminates the process instance."},
{"title":"Tasks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"process-workflow.html#tasks", "body":"Name Function"},
{"title":"Tasks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"process-workflow.html#tasks", "body":"User task The user performs a task using an application interface, such as form."},
{"title":"Tasks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"process-workflow.html#tasks", "body":"Service task Launches a service depending on the delegate expression defined in task configuration: ${importer} - Import data to FA Back${reports} - Generate documents with JSReport${reporter} - Import generated JSReport to FA Back${files} - Import user's attached files to FA Back${API} - Fetch data from an API${roaring} - Fetch data from Roaring"},
{"title":"Tasks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"process-workflow.html#tasks", "body":"Decision task Triggers the rules defined in the referenced decision table. "},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"import-attached-documents-into-fa.html", "body":"Field name Required \/ Optional Description"},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"import-attached-documents-into-fa.html", "body":"fieldName Optional Points to the property name of the file component where documents are uploaded in forms. The value should be placed in the Expression field."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"import-attached-documents-into-fa.html", "body":"contactId Optional ID of the contact under which you want to import the document. The contact ID can be either the \"Contact ID\" defined in the Contact window or the contact's internal database ID."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"import-attached-documents-into-fa.html", "body":"portfolioId Optional ID of the portfolio under which you want to import the document. The portfolio ID can be either the \"Portfolio ID\" defined in the Portfolio window or the portfolio's internal database ID."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"import-attached-documents-into-fa.html", "body":"transactionId Optional ID of the transaction under which you want to import the document. The transaction ID is the transaction's internal database ID."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"import-attached-documents-into-fa.html", "body":"tradeOrderId Optional ID of the trade order under which you want to import the document. The trade order ID is the trade order's internal database ID."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"import-attached-documents-into-fa.html", "body":"securityId Optional ID of the security under which you want to import the document. The security ID can be either the \"Security code\" defined in the Security window or the security's internal database ID."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"import-attached-documents-into-fa.html", "body":"contractId Optional ID of the contract under which you want to import the document. The contract id is the contract's internal database ID."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"import-attached-documents-into-fa.html", "body":"documentFolder Optional The folder in the FA document library to upload the documents. Enter a path in the string value field, for example: Folder\/form_attachment. Note that this parameter value should not be prefixed with \/."},
{"title":"Import attached documents into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"import-attached-documents-into-fa.html", "body":"documentTag Optional The document tags as a comma-separated list. For example, this field can be used to tag documents for signing."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"import-generated-reports-into-fa.html", "body":"Field name Required \/ Optional Description"},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"import-generated-reports-into-fa.html", "body":"documentName Optional The document name if you want to import only a specific generated report. Otherwise, all generated reports are imported."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"import-generated-reports-into-fa.html", "body":"contactId Optional ID of the contact under which you want to import the document. The contact ID can be either the \"Contact ID\" defined in the Contact window or the contact's internal database ID."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"import-generated-reports-into-fa.html", "body":"portfolioId Optional ID of the portfolio under which you want to import the document. The portfolio ID can be either the \"Portfolio ID\" defined in the Portfolio window or the portfolio's internal database ID."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"import-generated-reports-into-fa.html", "body":"transactionId Optional ID of the transaction under which you want to import the document. The transaction ID is the transaction's internal database ID."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"import-generated-reports-into-fa.html", "body":"tradeOrderId Optional ID of the trade order under which you want to import the document. The trade order ID is the trade order's internal database ID."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"import-generated-reports-into-fa.html", "body":"securityId Optional ID of the security under which you want to import the document. The security ID can be either the \"Security code\" defined in the Security window or the security's internal database ID."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"import-generated-reports-into-fa.html", "body":"contractId Optional ID of the contract under which you want to import the document. The contract id is the contract's internal database ID."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"import-generated-reports-into-fa.html", "body":"documentFolder Optional The folder in the FA document library to upload the documents. Enter a path in the string value field, for example: Folder\/report. Note that this parameter value should not be prefixed with \/."},
{"title":"Import generated reports into FA", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"import-generated-reports-into-fa.html", "body":"documentTag Optional The document tags as a comma-separated list. For example, this field can be used to tag documents for signing."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"Name Required \/ Optional Description"},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"url Required URL to access the API. If request parameters are used, embed them to the url as well."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"authUrl Optional, but required for OAuth 2.0 URL of the authentication service if OAuth 2.0 is used."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"grantType Optional Authentication type: client_credentials : for OAuth 2.0 using the username and password fields.password : for OAuth 2.0 using the clientId, username and password fields.if not defined, then the  username and password fields will be combined, encoded and passed as a header."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"clientId Optional, but required if grantType is password External source's application Client ID."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"username Required Username for the API authentication. If grantType is client_credentials, then username is used as a Client ID. If grantType is password, then username is used as a username."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"password Required Password for the API authentication."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"json Optional Defines the response format: True (default): converts the response to key-value pairs.False: returns the response as a string."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"method Optional The API method to use in the request: POST (default) or GET."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"body Optional with method GET Required with method POST Request body to send in the API call. For example, in GraphQL, the body would be structured as follows: { “query”:”<graphql query here>”}."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"variableFilter Optional Comma-separated list of keys from the API response that you want to filter. If you define a key with * at the end, then all key-value pairs in the response containing the defined key are returned. Without *, the exact match will be returned. If you want to rename a key, define the following: Old key=New key, then the key is renamed with the value given after the = sign."},
{"title":"Fetch information from an external source using APIs", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"fetch-information-from-an-external-source-using-apis.html", "body":"variableName Optional The prefix of the key names in the API response. Example: <Variable name>-<Key name>. If not specified, then Variable name is set to \"api\"."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"send-emails-from-a-workflow.html", "body":"Field Description"},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"send-emails-from-a-workflow.html", "body":"Type Encryption type – SSL\/TLS or NET."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"send-emails-from-a-workflow.html", "body":"Protocol Email protocol, for example, smtp. "},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"send-emails-from-a-workflow.html", "body":"Host Mail server address."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"send-emails-from-a-workflow.html", "body":"Port The port number the mail server uses."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"send-emails-from-a-workflow.html", "body":"Default sender email address Email address used for sending emails."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"send-emails-from-a-workflow.html", "body":"STARTTLS Checkbox, checked if using the StartTLS process."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"send-emails-from-a-workflow.html", "body":"TLS Checkbox, checked if using the TLS process."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"send-emails-from-a-workflow.html", "body":"SMTP authentication Checkbox, checked if authentication with user name and password is required."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"send-emails-from-a-workflow.html", "body":"User name User name to log into the mail server if authentication is required."},
{"title":"Send emails from a workflow", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"send-emails-from-a-workflow.html", "body":"Password Password to log into the mail server if authentication is required."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"Name Required \/ Optional Description"},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"consumerKey Required Roaring username."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"consumerSecret Required Roaring password."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"countryCode Required The population register used to fetch the person's name and address. Supported values: SE, FI, NO and DK."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"personId Required The person's social security number."},
{"title":"Get a person's address and run PEP and sanctions checks", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"get-a-person-s-address-and-run-pep-and-sanctions-checks.html", "body":"personFullName Optional The person's full name. This value is used to look for information if name is not found in the population register by the person's social security number (personId)."},
{"title":"Import values in standard FA fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-standard-fa-fields", "body":"Value to be imported FA code Property name syntax"},
{"title":"Import values in standard FA fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-standard-fa-fields", "body":"Contact name c.name import.c_name"},
{"title":"Import values in standard FA fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-standard-fa-fields", "body":"Portfolio name p.name import.p_name"},
{"title":"Import values in standard FA fields", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-standard-fa-fields", "body":"Contact ID c.contactId import.c_contactId"},
{"title":"Import values in custom profile data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-custom-profile-data", "body":"Section Profile attribute key Property name syntax"},
{"title":"Import values in custom profile data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-custom-profile-data", "body":"Contact kyc.experience import.c_profileAttribute_contact_kyc_experience"},
{"title":"Import values in custom profile data", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"define-form-components-to-import-data-in-fa.html#import-values-in-custom-profile-data", "body":"Portfolio tax.country import.p_profileAttribute_portfolio_tax_country"},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Field Description"},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Configuration set key A unique key that defines Flowable launcher."},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Configuration set name The label used for the button that starts Flowable launcher in FA Back."},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Configuration set namespace The object and section where Flowable launcher is available. Example: if you use the value contacts, you will be able to run Flowable launcher in the \"Contacts\" section on the selected contacts."},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Event key Event key of the Flowable process. The event key is used to link Flowable launcher to your Flowable process."},
{"title":"Configure Flowable launcher", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"expose-a-process.html#configure-flowable-launcher", "body":"Grouping A setting that defines how the Flowable launcher result is grouped when sending data to the Flowable process. You have the following options: Portfolio: The result is grouped per portfolio.Contact: The result is grouped per contact.No grouping: The data is not grouped. Example: You run Flowable launcher on trade orders and you select the grouping per portfolio. Then you go to the Trade orders view, select trade orders, and launch your workflow. Let's assume that you selected trade orders from two portfolios. Flowable launcher will group the data in two sets: the trade orders of the first portfolio and the trade orders of the second portfolio. Flowable launcher will then send each set to a separate Flowable process."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"expose-a-process.html#configure-your-flowable-process", "body":"Field Availability in grouping Description"},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"expose-a-process.html#configure-your-flowable-process", "body":"ids No groupingContactPortfolio List of the IDs of the selected items on which the Flowable launcher is run. For example: to run Flowable launcher on certain trade orders you will set the Configuration set namespace to tradeOrders, then ids will contain the list of the trade order IDs."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"expose-a-process.html#configure-your-flowable-process", "body":"[empty] contactId Contact Database ID of the contact."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"expose-a-process.html#configure-your-flowable-process", "body":"contactContactId Contact ID of the contact defined in the Contact window."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"expose-a-process.html#configure-your-flowable-process", "body":"contactName Contact Full name of the contact."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"expose-a-process.html#configure-your-flowable-process", "body":"portfolioId Portfolio Portfolio ID."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"expose-a-process.html#configure-your-flowable-process", "body":"portfolioShortName Portfolio Short name of the portfolio."},
{"title":"Configure your Flowable process", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"expose-a-process.html#configure-your-flowable-process", "body":"portfolioName Portfolio Portfolio name."},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"Component Data type Notes \/ Example Examples"},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"Header String   <vaadin-label caption=\"Header\"><\/vaadin-label>   "},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"TextField String <vaadin-text-field id=\"isinCode\" caption=\"ISIN\"><\/vaadin-text-field>   "},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"TextField String   <vaadin-combo-box caption=\"Identity\" icon=\"fonticon:\/\/Vaadin-Icons\/e72f\" description=\"Explanation of the field.\" id=\"Identity\">\n<option item=\"1\" enabled=\"false\">Known<\/option>\n<option item=\"2\" enabled=\"false\">Unknown<\/option>\n<\/vaadin-combo-box>   "},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"DateField String <vaadin-date-field id=\"vaadin.date.field\" caption=\"Date field\" date-format=\"yyyy-MM-dd\"\/>   "},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"RadioButtonGroup String <vaadin-radio-button-group id=\"Citizen\" caption=\"Swedish citizen\">\n    <option item=\"Yes\">Yes<\/option>\n    <option item=\"No\">No<\/option>\n<\/vaadin-radio-button-group>   "},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"Checkbox Boolean <vaadin-check-box id=\"ETF\" caption=\"ETF\"\/>   "},
{"title":"Standard components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"components-available-in-a-profile.html#idm46709274816240", "body":"Combobox String <vaadin-combo-box caption=\"Combobox\" id=\"Combo\" data-item-type=\"java.lang.String\">\n       <option item=\"Privateperson\">Private Person<\/option>\n       <option item=\"Company\">Company<\/option>\n<\/vaadin-combo-box>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"Component Namespace Data type Notes \/ Example Examples"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"DesignIntegerField com.fasolutions.vaadin.components Integer Simple whole-number field <fa-design-integer-field caption=\"Integer field\" id=\"x.integerField\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"DesignNumberField com.fasolutions.vaadin.components Double Simple decimal-number field. Supports the decimal-format and locale attributes <fa-design-number-field id=\"x.decimalField\" caption=\"Decimal field\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"TagsField com.fasolutions.vaadin.components Multiselect String Tags field <fa-tags-field id = \"x.tags\" caption=\"Tags test\" tags=\"test1,test2,test3\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"PopulatableCheckBoxGroup com.fasolutions.vaadin.components.populatable Multiselect String <pop-populatable-check-box-group id = \"x.pop7\" caption=\"Populatable checkbox group\" populate=\"Juridical\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"PopulatableComboBox com.fasolutions.vaadin.components.populatable String <pop-populatable-combo-box id = \"x.pop9\" caption=\"Populatable combobox (LightContact)\" populate=\"LightContact\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"PopulatableListSelect com.fasolutions.vaadin.components.populatable Multiselect String <pop-populatable-list-select id = \"x.pop3\" caption=\"Populatable list select\" populate=\"TransactionType\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"PopulatableNativeSelect com.fasolutions.vaadin.components.populatable String <pop-populatable-native-select id = \"x.pop8\" caption=\"Populatable nativeselect\" populate=\"Country\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"PopulatableRadioButtonGroup com.fasolutions.vaadin.components.populatable String <pop-populatable-radio-button-group id = \"x.pop5\" caption=\"Populatable radio button group\" exclude=\"BANKID;PASS\" populate=\"Identity\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"PopulatableTagsField com.fasolutions.vaadin.components.populatable Multiselect String <pop-populatable-tags-field id = \"x.tags2\" caption=\"Populatable tags test\" populate=\"Country\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"PopulatableTwinColSelect com.fasolutions.vaadin.components.populatable Multiselect String <pop-populatable-twin-col-select id = \"x.pop6\" caption=\"Populatable twin col select\" populate=\"Classification\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"CustomPopupDateField fi.fasolutions.app.pfmgmt.component String <custom-custom-popup-date-field id=\"custom.date.field\" caption=\"Custom date field\" date-format=\"yyyy-MM-dd\"\/>   "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"IntegerSpacing com.fasolutions.ext.components Integer <ext-design-integer-field id=\"InvestmentSize\" caption=\"Investment in euro\"><\/ext-design-integer-field> "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"Attribute Description Mandatory \/ Optional Values"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"populate Defines what data component is populated with Mandatory Asset, AssetType, Benchmark, CostType, Country, Exchange, Group, PortfolioGroup, PortfolioType, Language, ClassType, ClassType2, ClassType3, ClassType4, ClassType5, Classification, Classification2, Classification3, ContactSubType, Juridical, TransactionType, Identity, Contact, ContactType, TaxType, Security, SecurityType, SecuritySubType, Settlement, ContactTags, LightPortfolio, PortfolioTags, PortfolioAccountTags, TransactionTags, TradeorderTags, SecurityTags, LightPortfolio"},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"model-getter Is be used to define which attribute value is saved in the data base. E.g. model-getter=”name” to save the name of the selection, which is nice, because that makes the human-readable version easily available in the search views. Optional  "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":22, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"exclude This option can be used to remove specific items from the list. It is given as a semicolon-separated list of identifiers, e.g. contact IDs if populating the component with Contacts or LightContacts. If model-getter is used, then exclude should be a semicolon-separated list of the defined identifiers. Optional  "},
{"title":"Custom components", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":23, "url":"components-available-in-a-profile.html#idm46709274818160", "body":"include This option works like exclude, but the other way around: only the items defined in the semicolon-separated list are populated. Note, that if your list of items includes something that is not found in the database, it will not be added to the list of available selections. Optional  "},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#configuration-75", "body":"Preferences Definition list"},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#configuration-75", "body":" "},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"Method Params Return Description"},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"monthlyData data NavigableMap<LocalDate, IndexedReturnDataDTO> (same as data) Return a dataset similar to data but containing only datapoints on the last day of each month. Note that the change values have not been converted. It is useful when formula should be based on monthly data."},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"weeklyData data NavigableMap<LocalDate, IndexedReturnDataDTO> (same as data) Return a dataset similar to data but containing only datapoints on the same day of each week as the last day in the dataset. Note that the change values have not been converted. It is useful when formula should be based on weekly data."},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"doubleArray data, attributeName double[] Generates a double array out of the given list of IndexedReturnDataDTO object’s attribute. E.g. you can pass \"marketValue\" as an attribute name to generate a double array or market values."},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"secPerformance data SecPerformance (see below) Create SecPerformance (fa-math) initialized with the data from the given GrouppedAnalytics' data."},
{"title":"AnalyticsUtil", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#analyticsutil", "body":"stats double[] data DescriptiveStatistics Creates DescriptiveStatics class from commons-math3 for doing basic statistical analysis on the given data such as mean or percentile. E.g. AnalyticsUtil.stats(data).mean call would return a arithmetic mean of the given dataset (double[])"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":25, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"SecPerformance methods Description"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":26, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double alpha(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":27, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"int alphaClass(double confidence) int _alphaIsNegative = 1; int _alphaIsZero = 2; int _alphaIsPositive = 3;"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":28, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double alphaInterval(double ext, double confidence, boolean isLog, boolean low)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":29, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double appraisalRatio(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":30, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double beta()  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":31, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"int betaClass(double confidence) int _betaGreaterThanOne = 1; int _betaEqualToOne = 2; int _betaLessThanOne = 3; int _betaEqualToZero = 4; int _betaLessThanZero = 5;"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":32, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double betaInterval(double confidence, boolean low)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":33, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double correl()  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":34, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double excessReturns(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":35, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double m2(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":36, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double match()  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":37, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double r2()  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":38, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double sharpe(double ext, boolean retBm, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":39, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double informationRatio(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":40, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double m2(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":41, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double periodReturn(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":42, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double specificVolatility(double ext)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":43, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double totalReturn(boolean retBm, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":44, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double trackingError(double ext)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":45, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double treynor(double ext, boolean retBm, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":46, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double treynorSquare(double ext, boolean isLog)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":47, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double volatility(double ext, boolean retBm)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":48, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double volatilityEwma(double ext, boolean retBm)  "},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":49, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double adjBeta(double adjFactor) Adjustment with adjustment factor = 0.33 suggested by Merril Lynch.Use adjustment factor = 0 to obtain beta.Adjustment factor = 1 returns 1. [1] Bodie, Z., et. al. \"Investments\", 4th ed., p. 295"},
{"title":"SecPerformance", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":50, "url":"how-to-add-a-custom-analytics-column-based-on-a-formula.html#secperformance", "body":"double avgReturns(double ext, boolean retBm, boolean isLog)  "},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"sample-formulas.html", "body":"Name Category Description Formula"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"sample-formulas.html", "body":"Recovery Rate Performance Days until next highest peak in period after a Maximum Drawdown. Return value represented in days. import com.fasolutions.data.dto.analytics.IndexedReturnDataDTO;\nimport java.time.*\ndef orig = new IndexedReturnDataDTO()\norig.setIndexValueLowest(100d);\norig.setIndexValueHighest(100d);\norig.setMaxDrawdown(0d);\ndouble previousIndexedValue = 0.0\ndouble  highAfterMdd = 0.0\nLocalDate mddTroughDate = LocalDate.now()\nLocalDate recoveryDate = LocalDate.now()\nint daysAfterMdd = 0\nif(data){\n    data.each{ date,ird ->\n        if(mddTroughDate == null) mddTroughDate = date\n        if(recoveryDate == null) recoveryDate = date\n        if( ird.getIndexedValue() != 0 ) {\n            if( ird.getIndexedValue() < orig.getIndexValueLowest() ) {\n                orig.setIndexValueLowest( ird.getIndexedValue());\n            }\n            if( ird.getIndexedValue() > orig.getIndexValueHighest() ) {\n                orig.setIndexValueHighest( ird.getIndexedValue());\n            }\n            orig.setDrawdown(ird.getIndexedValue() \/ orig.getIndexValueHighest()  - 1 );\n            if( orig.getDrawdown() < orig.getMaxDrawdown() ){\n                orig.setMaxDrawdown(orig.getDrawdown());\n                mddTroughDate = date\n                daysAfterMdd = 0\n                highAfterMdd = ird.getIndexedValue()\n            } else {\n                if(ird.getIndexedValue() > previousIndexedValue ){\n                    highAfterMdd = ird.getIndexedValue()\n                    daysAfterMdd += 1\n                    recoveryDate = date\n                }\n            } \n        }\n        previousIndexedValue = ird.getIndexedValue()\n    }\n}\nreturn daysAfterMdd\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"sample-formulas.html", "body":"Monthly Volatility Risk Monthly volatility as defined by the standard deviation of monthly observations. import com.fasolutions.analytics.*\nimport com.fasolutions.data.analytics.*\n\ndef monthlyData = AnalyticsUtil.monthlyData(data)\ndef monthlyIndexedValueChanges = [] \ndef prev \ndouble monthlyVolatility = 0.0\nmonthlyData.each { k,v ->\n    if( prev != null ) {\n        monthlyIndexedValueChanges << v.indexedValue \/ prev.indexedValue - 1\n        \n    }\n    prev = v\n}\n\nif(!monthlyIndexedValueChanges?.isEmpty()) monthlyVolatility = AnalyticsUtil.stats(monthlyIndexedValueChanges as double[]).standardDeviation * Math.sqrt(12)\n\nreturn monthlyVolatility\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"sample-formulas.html", "body":"Key Figure Utility Showcase of how to retrieve any key figure from the security object in the context. In this case the “CO2” key figure on date 2018-01-01 Can be used in other formulas by replacing the key and date. import java.time.LocalDate\nimport com.fasolutions.data.dto.analytics.CustomColumnValueDTO\nString returnString = \"\"\nif(security){\n    CustomColumnValueDTO customColumnValue = security.getKeyFigureValue(\"CO2\",LocalDate.of(2018,1,1))\n    if(customColumnValue != null) returnString = customColumnValue.getDefaultValue()\n} \nreturn returnString\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"sample-formulas.html", "body":"Market Value (sec) Basic Market value of position\/group in its local currency. double marketValueSec = 0.0d;\nif(Double.compare( analytics.marketFxRate, 0.0d ) == 0) marketValueSec = analytics.marketValue\nelse marketValueSec = analytics.marketFxRate * analytics.marketValue\nreturn marketValueSec\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"sample-formulas.html", "body":"Custom Total Profit Example For illustrative\/example purposes. Example how to get total profits from the subtree attached to every GrouppedAnalytics with a formula. Note that since the formula sums up values from its children, it only works on group levels! Therefore you need to use the Apply formula also on group level aggregation setting. import com.fasolutions.analytics.GrouppedAnalytics\nimport com.fasolutions.data.dto.analytics.IndexedReturnDataDTO;\nimport java.time.LocalDate\nimport java.util.NavigableMap\n\ndouble profitFromSubtree = 0.0d \/\/value to return = total profits (realized+unrealized+other)\n\n\/\/Sub-tree of underlying GrouppedAnalytics levels wrt current level\nMap<String,GrouppedAnalytics> subGrouppedAnalyticsTree = ga?.subGrouppedAnalyticsTree\n\n\/\/Navigate all underlying groups (e.g. securities)\nsubGrouppedAnalyticsTree?.each{ orderedCode, subGrouppedAnalytics -> \n\n    \/\/Get underlying data for current group and navigate the daily positions\n    NavigableMap<LocalDate,IndexedReturnDataDTO> dataFromGA = subGrouppedAnalytics?.getData()\n    dataFromGA?.each{ date,ird -> \n        profitFromSubtree += ird.dSoldProfit + ird.dValueChange + ird.dProfit \/\/realized+unrealized+other\n    }\n}\nreturn profitFromSubtree\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"sample-formulas.html", "body":"TWR Gross Testing \/ Reconciliation For testing purposes when changes are done to TWR. Can be modified and used in future changes to TWR calculation import com.fasolutions.data.dto.analytics.IndexedReturnDataDTO\nimport java.util.NavigableMap\nimport com.fasolutions.math.var.Tools\nimport java.lang.Math\n\n\ndouble twrGross = 0.0d;\nif (data) {\n    IndexedReturnDataDTO sIrd = ((NavigableMap)data).firstEntry()?.getValue()\n    IndexedReturnDataDTO eIrd = ((NavigableMap)data).lastEntry()?.getValue()\n    double previousIndexedValue = 100.0d;\n    double previousGrossIndexedValue = 100.0d;\n    double previousCostIndexedValue = 100.0d;\n    double grossMarketValueStart = sIrd.getMarketValueStart();\n    \n    data?.each{ date, ird -> \n        double startMarketValue = ird.getMarketValueStart() +  ird.getPosNetCashflow();\n        double baseMarketValue =  Math.abs(startMarketValue);\n        double grossIndexedValueChangeDaily  = 0;\n        double dailyCosts = 0d;\n        \n        \n        if( baseMarketValue != 0 ) {\n            dailyCosts = ird.getdCost() + ird.getdOtherCost() + ird.getdImplicitCost();\n            grossIndexedValueChangeDaily = Tools.change2logYield(dailyCosts, baseMarketValue);\n            if (Double.isInfinite(grossIndexedValueChangeDaily )) {\n                grossIndexedValueChangeDaily  = 0;\n            }\n        }\n        \n        \n        double grossMarketValue = grossMarketValueStart + ird.getdMarketValue() + ird.getdCost() + ird.getdOtherCost() + ird.getdImplicitCost() \/\/ replace implicit with ird.getdTotalExPostSecCosts() to get previous method\n        double dGrossMarketValue = grossMarketValue - grossMarketValueStart\n        double costIndexedValue = previousCostIndexedValue + Tools.logYield2perYield(grossIndexedValueChangeDaily) * previousIndexedValue; \/\/replace previousIndexedValue with 100.0d to get previous method (as of 2020-04-15)\n        double grossIndexedValue = ird.getIndexedValue() + costIndexedValue - 100d ;\n\n        previousIndexedValue = ird.getIndexedValue();\n        previousGrossIndexedValue = grossIndexedValue\n        previousCostIndexedValue = costIndexedValue\n        grossMarketValueStart = grossMarketValue\n        \n        \n    }\n    \n    twrGross = previousGrossIndexedValue \/ 100.0d - 1;\n}\n\n\nreturn twrGross\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"sample-formulas.html", "body":"Options Call Delta Options\/Template Template for calcuating Black-Scholes Option Greeks using Normal distribution from stats library. Can be configured and extended to fetch strike price, rate and\/or price of underlying via other components such as key figures import com.fasolutions.math.stat.Normal\nimport java.time.LocalDate;\nimport java.time.temporal.ChronoUnit\n\n\/\/Components\ndouble price_underlying, strike, time, volatility, rate \/\/input\ndouble d1, d2, p1, p2, pdf1, pdf2 \/\/calcs\ndouble deltac, deltap, gamma, vega \/\/output\n\n\/\/Vars needed\nstrike = 100.0 \/\/could be retrieved with security?.maturityPrice\nprice_underlying = analytics?.marketUnitPrice\nvolatility = analytics?.volAnn\nrate = 0.01 \/\/1 %\n\n\/\/Date range - also needed\nLocalDate fromDate = analytics?.startDate \/\/analytics?.marketUnitPriceDate or endDate\nLocalDate toDate = analytics?.endDate \/\/security?.callDate\n\n\nif(fromDate && toDate) {\n    \/\/Calculate time\n    float years = fromDate?.until(toDate, ChronoUnit.DAYS) \/ 365.2425f\n    time = (double)years\n    \n    \/\/Main params calculation\n    double priceOverStrike = strike != 0.0 ? price_underlying.div(strike) : price_underlying\n    d1 = ( Math.log(priceOverStrike) + time * (rate + Math.pow(volatility,2))?.div(2) )?.div(volatility*Math.sqrt(time))\n    d2 = d1 - volatility*Math.sqrt(time);\n    p1 = Normal.cdf(d1);\n    p2 = Normal.cdf(d2);\n    pdf1 = Normal.pdf(d1);\n    pdf2 = Normal.pdf(d2);\n    \n    \n    \/\/Call\/Put price\n    callprice = price_underlying*Math.exp(time*(rate))*p1 - strike*Math.exp(-rate*time)*p2;\n    \/\/putprice = strike*Math.exp(-rate*time)*Normal.cdf(-d2) - price_underlying*Math.exp(time*(rate))*Normal.cdf(-d1);\n    \n    \/\/Greeks calculation\n    deltac = Math.exp(time*(rate))*p1;\n    \/\/deltap = Math.exp(time*(rate))*(p1-1);\n    \/\/gamma = pdf1*Math.exp(time*(rate))\/(price_underlying*volatility*Math.sqrt(time));\n    \/\/vega = price_underlying*Math.exp(time*(rate))*pdf1*Math.sqrt(time);\n    \n}\n\n\nreturn deltac\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"sample-formulas.html", "body":"Key Figure Utility Showcase of using a key figure in calculation import java.time.LocalDate\nimport com.fasolutions.data.dto.analytics.CustomColumnValueDTO\ndouble delta = 0.0 \/\/value to return\ndouble marketValue = analytics?.marketValue \/\/value to use in calculation\n\n\/\/Assume Delta is some value stored on security level\nCustomColumnValueDTO customColumnValue = security?.getKeyFigureValue(\"Delta\")\nif(customColumnValue != null){\n delta = customColumnValue.getDoubleValue() * marketValue  \/\/use in calc\n}\n\nreturn delta \n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"sample-formulas.html", "body":"TWR (pre 3.8) Reconciliation Showcase of how TWR is calculated for non-future instruments in version before FA 3.8 Can be used to test and reconcile TWR (and was in FA 3.8 testing when method changed) import com.fasolutions.data.dto.analytics.IndexedReturnDataDTO\nimport java.util.NavigableMap\nimport com.fasolutions.math.var.Tools\nimport java.lang.Math\n\n\ndouble twrOrig = 0.0d;\nif (data) {\n    IndexedReturnDataDTO sIrd = ((NavigableMap)data).firstEntry()?.getValue()\n    IndexedReturnDataDTO eIrd = ((NavigableMap)data).lastEntry()?.getValue()\n    double previousIndexedValue = 100.0d;\n    double marketValueStart = sIrd.getMarketValueStart();\n    \n    \n    data?.each{ date, ird -> \n        double startMarketValue = ird.getMarketValueStart() +  ird.getPosNetCashflow();\n        double baseMarketValue =  Math.abs(startMarketValue);\n        double indexedValueChangeDaily = ird.getIndexedValueChange();\n        double dailyTotalProfitAndLoss = ird.getdMarketValue() -ird.getNegNetCashflow() - ird.getPosNetCashflow();\n        \n        if( baseMarketValue != 0 ) {\n            indexedValueChangeDaily = Tools.change2logYield(dailyTotalProfitAndLoss,baseMarketValue);\n        } else {\n            indexedValueChangeDaily = 0;\n        }\n        \n        if (Double.isInfinite(indexedValueChangeDaily)) {\n            indexedValueChangeDaily = 0;\n        }\n        \n        \n        double indexedValue = Tools.logYield2value(indexedValueChangeDaily, previousIndexedValue);\n        previousIndexedValue = indexedValue\n    }\n    \n    twrOrig = previousIndexedValue \/ 100.0d - 1;\n}\n\n\nreturn twrOrig\n"},
{"title":"Sample formulas", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"sample-formulas.html", "body":"Money Weighted Return Performance Money weighted return retrieved from Internal Rate of Return (IRR) and scaled to the holding period. Note that IRR is only calculated when the column is selected or when using \"calculateIrr\": true setting when using Analytics over API. Since this custom column uses IRR, it is also only shown if IRR is calculated. \nimport java.time.LocalDate;\nimport java.time.temporal.ChronoUnit;\n\ndouble mwr = 0.0d\ndouble investmentPeriod = 0.0d;\ndouble daysInYear = 365.0d;\n\n\/\/Start\/End by default position-based\nLocalDate startDate = analytics.startDate\nLocalDate endDate = analytics.endDate\n\nif(startDate && endDate)\n  investmentPeriod = ChronoUnit.DAYS.between(startDate, endDate) \/ daysInYear\n\nif(investmentPeriod > 0)\n    mwr = Math.pow(1+analytics.irr, investmentPeriod) - 1 \/\/(1+IRR)^(t\/365) -1\n\nreturn mwr\n\n"},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#configuration-77", "body":"Preferences Definition list"},
{"title":"Configuration", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-a-custom-analytics-column-based-on-a-key-figure.html#configuration-77", "body":" "},
{"title":"Defining group level aggregation and how to aggregate sub-levels", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#defining-group-level-aggregation-and-how-to-aggregate-sub-levels", "body":" Five options are available: Do not show values on group levels - value shown only on position level and not aggregated to any parent levelCalculate group level as the direct sum of lower levels - any number value from a child level will be summed to the parent level. The parent level will simply be the sum of its children values.Calculate group level as the weighted average of lower levels - any number value from a child level will be then weighted and summed to the parent level, using each corresponding share of parent as its weight. The weight corresponds to the position level \"Share of parent\" columnCalculate group level as the weighted average using the absolute value of the weights - same as above but where the absolute value of the weight is used. This means that negative positions will have positive in weight.Apply formula also on group level - if formula is applicable, use this on all levels instead of aggregating."},
{"title":"Defining group level aggregation and how to aggregate sub-levels", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#defining-group-level-aggregation-and-how-to-aggregate-sub-levels", "body":" Aggregate up only if all children have a value - this means that values are NOT aggregated if ANY child is missing a valueAggregate up with default value 0 if a child doesn't have a value - this means that any missing value is assumed to be zero in the aggregation"},
{"title":"Defining group level aggregation and how to aggregate sub-levels", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#defining-group-level-aggregation-and-how-to-aggregate-sub-levels", "body":" Select how to round values on the group level - if a figure is of Integer type or if a categorized figure is aggregated, this selection defines how to handle rounding of non-existing final values. Default, Round up to nearest value, Round down to nearest value - are all valid selections Round based on normal rounding rules (half up) OR use the nearest category will round according to normal rounding rules, using half up. Example: 1.51 will be rounded to 2 if the aggregated value is an integer Always round up OR use the nearest bigger category will always round up to the next closest category value. For example, 1.51 will be rounded to B (2) if the defined values are 1=A, 2=B Always round down OR use the nearest smaller category will always round down to the next closest category value. For example, 1.51 will be rounded to A (1) if the defined values are 1=A, 2=B"},
{"title":"Adding custom formatting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#adding-custom-formatting", "body":""},
{"title":"Adding custom formatting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#adding-custom-formatting", "body":"Field Description"},
{"title":"Adding custom formatting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#adding-custom-formatting", "body":" Define the format to use - will format numbers according to the specified format. Formatting follows the same logic as defined under Preferences > Content and translations > Date and decimal formats. Format is defined as a string. Examples: \"0.00\" for 2 decimal rounding of numbers, \"#,##.00\", \"0.0%\" for percent, or \"dd.MM.yy\" for Date formatting"},
{"title":"Adding custom formatting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#adding-custom-formatting", "body":" Value type - this field indicates the return type of the column and cannot be overridden. It is useful when writing formulas to check the output, which is done when a formula is saved. For key figures, the key figure type will be saved to this field."},
{"title":"Adding custom formatting", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-add-aggregation-and-formatting-to-a-custom-analytics-column.html#adding-custom-formatting", "body":" Select how to align the column content in tables - right or left available. By default, String types are aligned LEFT and other types to the RIGHT"},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"Parameter Value Description"},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"client_id external-api 'external-api' is the default public client ID from FA."},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"username <username> Your username."},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"password <password> Your password."},
{"title":"Authenticate in GraphQL to get an access token", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"authentication-and-access.html#authenticate-in-graphql-to-get-an-access-token", "body":"instance <instance> FA platform environment used by your organization."},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"Field Parameters Description"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"grouppedAnalytics key (defined in the call parameters) Accesses a specific analysis result set"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"analysis timePeriodCode (defined in the call parameters) Accesses a specific time period analysis"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"groupppedAnalyticsTimePeriod - Returns a list of all time period analyses"},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"grouppedAnalytics - If includeChildren parameter was true, the grouped child levels are returned in this."},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"grouppedAnalyticsByGroup groupCode Returns a specific group. Requires that includeChildren parameter was true."},
{"title":"Accessing the result of an analysis", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"how-to-use-analytics-to-analyze-portfolios.html#accessing-the-result-of-an-analysis", "body":"indexedReturnData - If includeData parameter was true, returns a list of the data time series per day."},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"Parameter Default value Values Description"},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"withoutPositionData false true or false Run analysis based on only portfolio level data. This is faster, if you do not need position level values."},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"parameters     Structure to hold more detailed parameters"},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"pfIds   List of longs List of portfolio ids to analyze"},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"startDate Start date is defined based on the time periods, if omitted Date in format yyyy-MM-dd Start date of the analysis. That is the date since the data is loaded."},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"endDate End date is defined based on the time periods, if omitted Date in format yyyy-MM-dd End date of the analysis. That is the date till the data is loaded."},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"includeDrillDownPositions false true or false Whether to load also positions from the portfolios linked to portfolios' securities. Allows drill down, but is quite heavy."},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"includeOnlyCashAccounts false true or false True = exclude accounts that are marked as non-cash accounts, e.g. accrued fee accounts. false = include all accounts"},
{"title":"Parameters for analytics request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-analytics-request-99", "body":"paramsSet   List of individual analysis definitions (to be explained in the next section) Definition of one or many analyses requested."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":1, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"Parameter Default value Values Description"},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"key “1”, “2”,… Any unique string Key to define an analysis. The key can be used later to reference a result-set of a specific analysis. It is recommended to define a key for each analysis."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"timePeriodCodes   E.g. “GIVEN”, “MONTHS-1”, etc. See the detailed list at Time period codes. Either define “GIVEN” to analyze the whole period or a specific time-period within the given time period."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"grouppedByProperties   E.g. [TYPE,SECURITY] List of types (see the entire list Analytics+ grouping options) to group the analysis by."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"groupCode   Allocation group code Required, if grouppedByProperties == [...,GROUP] or grouppedbyProperties == [...,SECTOR]."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"includeData   true or false Whether to include time series data into the result set."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"includeChildren   true or false Whether to include the hierarchy based on the groups into the result set."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"calculateContribution   true or false Whether to calculate contribution figures. Use only if you are interested in those figures."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"calculateIrr   true or false Whether to calculate IRR. Use only if you are interested in IRR figures."},
{"title":"Parameters for paramsSet", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"parameters-for-analytics-graphql-api-call.html#parameters-for-paramsset", "body":"ignoreBrokenPeriods false true or false Whether to exclude values from the analysis where the results do not fully belong to the time period.  Example: You want to calculate a portfolio TWR for the last 6 months, but the portfolio only existed for the last 3 months. If you set ignoreBrokenPeriods to true, then the result will be null as this configuration will exclude the values which do not fulfill the whole period. If you set ignoreBrokenPeriods to false, then the result will return the TWR. "},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"analytics--grouping-options.html", "body":"Code Description"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"analytics--grouping-options.html", "body":"PORTFOLIO Grouped by parent portfolio. If the list of portfolios contained sub portfolios, those are grouped under the parent portfolio"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"analytics--grouping-options.html", "body":"PORTFOLIO_ALL Each portfolio separately"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"analytics--grouping-options.html", "body":"PORTFOLIO_TYPE Grouped by portfolio type"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"analytics--grouping-options.html", "body":"PORTFOLIO_COUNTRY Grouped by portfolio country"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"analytics--grouping-options.html", "body":"PORTFOLIO_JURIDICAL Grouped by portfolio juridical"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"analytics--grouping-options.html", "body":"PORTFOLIO_CONTACT Grouped by portfolio primary contact"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"analytics--grouping-options.html", "body":"POSITION Grouped by position. Each account is represented as an individual position regardless of currency."},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"analytics--grouping-options.html", "body":"SECURITY Grouped by position's security. Account balances are grouped as currency positions according to the account currency. Unlike with a portfolio and its position, there is no two-way relationship between a portfolio and a security, which should be kept in mind when using multi-level groupings. E.g. [PORTFOLIO, POSITION], [POSITION, PORTFOLIO] and [PORTFOLIO, SECURITY] are valid groupings while [SECURITY, PORTFOLIO] is not."},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"analytics--grouping-options.html", "body":"LINKEDSECURITY Grouped by position's security. If security has a linked security, position is grouped under the linked security."},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"analytics--grouping-options.html", "body":"TYPE Grouped by security type"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"analytics--grouping-options.html", "body":"SUBTYPE Grouped by security sub type"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"analytics--grouping-options.html", "body":"BASETYPE Grouped by security base type"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"analytics--grouping-options.html", "body":"CLASS1 Grouped by security class 1"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"analytics--grouping-options.html", "body":"CLASS2 Grouped by security class 2"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"analytics--grouping-options.html", "body":"CLASS3 Grouped by security class 3"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"analytics--grouping-options.html", "body":"CLASS4 Grouped by security class 4"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"analytics--grouping-options.html", "body":"CLASS5 Grouped by security class 5"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"analytics--grouping-options.html", "body":"COUNTRY Grouped by security country"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"analytics--grouping-options.html", "body":"CURRENCY Grouped by security currency"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":22, "url":"analytics--grouping-options.html", "body":"MARKETPLACE Grouped by security market place"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":23, "url":"analytics--grouping-options.html", "body":"SETTLEMENTPLACE Grouped by security settlement place"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":24, "url":"analytics--grouping-options.html", "body":"TAG NOT SUPPORTED YET"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":25, "url":"analytics--grouping-options.html", "body":"ISSUER Grouped by security issuer"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":26, "url":"analytics--grouping-options.html", "body":"GROUP Grouped by group of a given allocation group. Allocation share is taken into account."},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":27, "url":"analytics--grouping-options.html", "body":"SECTOR Grouped by sector of a given allocation group. Allocation share is taken into account."},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":28, "url":"analytics--grouping-options.html", "body":"ASSET_LIABILITY All positions are of type ASSET, all cash accounts are also ASSET, non-cash accounts are LIABILITY"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":29, "url":"analytics--grouping-options.html", "body":"ASSET_CATEGORY All positions are of type ASSET, all accounts are grouped by account group, if it is missing, the type is OTHER"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":30, "url":"analytics--grouping-options.html", "body":"DRILLDOWN_GROUP_SECURITY Attaches underlying positions if a security has a linked portfolio, and groups them by security"},
{"title":"Analytics+ grouping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":31, "url":"analytics--grouping-options.html", "body":"DRILLDOWN_GROUP_POSITION Attaches underlying positions if a security has a linked portfolio, and groups them by position"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"time-period-codes.html", "body":"2017-08-26 0 1 2 3"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"time-period-codes.html", "body":"DAYS 2017-08-26 - 2017-08-26 2017-08-25 - 2017-08-26 2017-08-24 - 2017-08-26 2017-08-23 - 2017-08-26"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"time-period-codes.html", "body":"DATE 2017-08-26 - 2017-08-26 2017-08-25 - 2017-08-25 2017-08-24 - 2017-08-24 2017-08-23 - 2017-08-23"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"time-period-codes.html", "body":"CALWEEK 2017-08-21 - 2017-08-26 2017-08-14 - 2017-08-20 2017-08-07 - 2017-08-13 2017-07-31 - 2017-08-06"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"time-period-codes.html", "body":"CALMONTHS 2017-09-01 - 2017-08-26 2017-08-01 - 2017-08-26 2017-07-01 - 2017-08-26 2017-06-01 - 2017-08-26"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"time-period-codes.html", "body":"CALMONTH 2017-08-01 - 2017-08-26 2017-07-01 - 2017-07-31 2017-06-01 - 2017-06-30 2017-05-01 - 2017-05-31"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"time-period-codes.html", "body":"MONTHS 2017-08-27 - 2017-08-26 2017-07-27 - 2017-08-26 2017-06-27 - 2017-08-26 2017-05-27 - 2017-08-26"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"time-period-codes.html", "body":"YEARS 2017-08-27 - 2017-08-26 2016-08-27 - 2017-08-26 2015-08-27 - 2017-08-26 2014-08-27 - 2017-08-26"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"time-period-codes.html", "body":"CALYEAR 2017-01-01 - 2017-08-26 2016-01-01 - 2016-12-31 2015-01-01 - 2015-12-31 2014-01-01 - 2014-12-31"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"time-period-codes.html", "body":"CALQUARTER 2017-07-01 - 2017-08-26 2017-04-01 - 2017-06-30 2017-01-01 - 2017-03-31 2016-10-01 - 2016-12-31"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"time-period-codes.html", "body":"CALHALFYEAR 2017-07-01 - 2017-08-26 2017-01-01 - 2017-06-30 2016-07-01 - 2016-12-31 2016-01-01 - 2016-06-30"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"time-period-codes.html", "body":"CALENDYEAR null - 2017-08-26 null - 2016-12-31 null - 2015-12-31 null - 2014-12-31"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"time-period-codes.html", "body":"CALENDMONTH null - 2017-08-26 null - 2017-07-31 null - 2017-06-30 null - 2017-05-31"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"time-period-codes.html", "body":"CALENDQUARTER null - 2017-08-26 null - 2017-06-30 null - 2017-03-31 null - 2016-12-31"},
{"title":"Time period codes", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"time-period-codes.html", "body":"CALYEARMONTH 2017-01-01 - 2017-07-31 2017-01-01 - 2017-06-30 2017-01-01 - 2017-05-31 2017-01-01 - 2017-04-30"},
{"title":"Camel route XML tags", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"create-a-camel-route.html#idm46709273468384", "body":"Tag Description"},
{"title":"Camel route XML tags", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"create-a-camel-route.html#idm46709273468384", "body":"<routes> and <route> The XML-based camel route definition is wrapped in the routes tag. There can be multiple route-tags withings the routes-tag."},
{"title":"Camel route XML tags", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"create-a-camel-route.html#idm46709273468384", "body":"<from> Camel route source directory. The <from> block can contain more parameters inside. "},
{"title":"Camel route XML tags", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"create-a-camel-route.html#idm46709273468384", "body":"<to> Camel route end destination."},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"create-a-camel-route.html#idm46709273468160", "body":"URI parameter Description"},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"create-a-camel-route.html#idm46709273468160", "body":"file:directoryName Source directory."},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"create-a-camel-route.html#idm46709273468160", "body":"antInclude  Include files that contain a certain string in the file name."},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"create-a-camel-route.html#idm46709273468160", "body":"readLock  Ensure that the file is not used or being written to by any other process."},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"create-a-camel-route.html#idm46709273468160", "body":"readLockCheckInterval  Set the interval in milliseconds between attempts to acquire the read lock."},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"create-a-camel-route.html#idm46709273468160", "body":"move Define the directory and the name of the file after it has been processed. "},
{"title":"Endpoint URI parameters", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"create-a-camel-route.html#idm46709273468160", "body":"moveFailed  Define the directory and the name of the file if processing fails."},
{"title":"Available processes and data mapping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"how-to-import-custom-csv-files-to-fa.html#available-processes-and-data-mapping-options", "body":"FA Process Data mapping type Directory for a file to be mapped and processed"},
{"title":"Available processes and data mapping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"how-to-import-custom-csv-files-to-fa.html#available-processes-and-data-mapping-options", "body":"Reconciliation (by transactions date) Data mapping {{back.writable.dir}}\/reconciliation\/standard\/mapped"},
{"title":"Available processes and data mapping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"how-to-import-custom-csv-files-to-fa.html#available-processes-and-data-mapping-options", "body":"Reconciliation (by settlement date) Data mapping {{back.writable.dir}}\/reconciliation\/settlementDate\/mapped\/"},
{"title":"Available processes and data mapping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"how-to-import-custom-csv-files-to-fa.html#available-processes-and-data-mapping-options", "body":"General import Data mapping {{back.writable.dir}}\/fa\/import\/general\/csv-auto\/mapped\/"},
{"title":"Available processes and data mapping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"how-to-import-custom-csv-files-to-fa.html#available-processes-and-data-mapping-options", "body":"Position import Data mapping {{back.writable.dir}}\/positionImport\/mapped\/"},
{"title":"Available processes and data mapping options", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"how-to-import-custom-csv-files-to-fa.html#available-processes-and-data-mapping-options", "body":"Transaction and trade order import Reader format configuration {{back.writable.dir}}\/fa\/import\/general\/csv-auto\/mapped-transactions\/"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"Parameter Type\/Sample Description Return value"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-graphqlUri String URL API base URL for GraphQL calls http:\/\/xyz:8080\/graphql"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-userAccessToken String URL Access token to be used in GraphQL calls "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-apiUri String URL API base URL for REST calls http:\/\/localhost:8080\/rs\/"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-tokenName String API authentication token name for REST calls 1570453402551"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-tokenValue String API authentication token value for REST calls fh1238d2v4lel6vj21pbba6iuieah4ag88e7824s"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-portfolioIdTxt String Portfolio text "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-portfolioId Array of Strings Portfolio IDs This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-portfolioName Array of Strings Name of portfolio(s) "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-portfolioInfos Array of Strings [object Object]"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-contactName Array of Strings Name of contact(s) "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-language String Language code This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-purchaseValueType Long This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-purchaseValueTypeTxt String "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-transactionDateType Long This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-transactionDateTypeTxt String "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-transactionTagsTxt String "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-transactionListingTxt String "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-transactionTypeTxt String "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-sortingDate Long This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":22, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-groupBy Long This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":23, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-group String This needs to be requested if you want to show its UI. IND"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":24, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-groupByTxt String "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":25, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-groupBy2 String This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":26, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-groupTxt String IND : Industry"},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":27, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-transactionListing Long This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":28, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-generateEmptyReport Boolean This needs to be requested if you want to show its UI. "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":29, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-securityTxt String "},
{"title":"Parameters sent always", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":30, "url":"parameters-available-in-a-report.html#parameters-sent-always", "body":"param-securityTypeTxt String "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":2, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"Param & Tag Name Type\/Sample Description Return value"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":3, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-startDate Date This enables the Date-Period selector UI. Oct 1, 2019 12:00:00 AM"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":4, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-endDate Date This enables the Date-Period selector UI. Oct 6, 2019 12:00:00 AM"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":5, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-reportDate Date This enables the Single Date picker. Oct 7, 2019 12:00:00 AM"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":6, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-logoImage Byte[] No UI is available for this parameter. "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":7, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-timePeriod String No UI is available for this parameter. Oct 1, 2019 12:00:00 AM,Oct 6, 2019 12:00:00 AM \/ CALWEEK-1"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":8, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-security Long This enables the Security selector UI. 10529797 (database ID)"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":9, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-securityType String This enables the Type selector UI. 3"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":10, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionTags Set This enables the TextField UI. [ chosen tag ] e.g. \"Settlement - waiting\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":11, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionType Array of Strings This enables the Type selector UI. CADD"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":12, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-purchaseValueType Long This enables the Radio UI selector. 1"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":13, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-groupName String No UI is available for this parameter. "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":14, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-securityName String No UI is available for this parameter. "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":15, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-securityNameType String No UI is available for this parameter. "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":16, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-groupingName String No UI is available for this parameter. "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":17, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-purchaseValueName String No UI is available for this parameter. "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":18, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionListingTxt String No UI is available for this parameter. Selected time period \/ From positions in the time period"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":19, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-purchaseValueTypeTxt String No UI is available for this parameter. Transaction purchase value"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":20, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionDateType Long This enables the Radio UI for date type. (Sent by FA without request but UI is hidden.) 0"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":21, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionDateTypeTxt String No UI is available for this parameter. (Sent by FA without request but UI is hidden.) Transaction date"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":22, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-generateEmptyReport Boolean This enables the Checkbox UI for allowing to print empty report. (Sent by FA without request but UI is hidden.) true\/false"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":23, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-group String This enables the Allocation Group selector UI (Sent by FA without request but UI is hidden.) See Using group parameters IND"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":24, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-contactName Array of Strings No UI is available for this parameter. (Sent by FA without request but UI is hidden.) [ name of contact ] E.g. \"Antti Arvo\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":25, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-portfolioName Array of Strings No UI is available for this parameter.. (Sent by FA without request but UI is hidden.) [ name of portfolio ] E.g. \"Investment portfolio\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":26, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionTypeTxt String No UI is available for this parameter. (Sent by FA without request but UI is hidden.) \"Add Contract\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":27, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionListing String This enables the Transaction Time Period selector UI. (Sent by FA without request but UI is hidden.) 1 or 2"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":28, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-groupBy2 String This enables the Grouping selector UI. (Sent by FA without request but UI is hidden.) See Using group parameters \"PORTFOLIO_CONTACT\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":29, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-groupBy Long This enables the Grouping selector UI. (Sent by FA without request but UI is hidden.) See Using group parameters 3"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":30, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-groupByTxt String No UI is available for this parameter. (Sent by FA without request but UI is hidden.) [ chosen selection ] e.g. \"Risk classification\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":31, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-securityTypeTxt String No UI is available for this parameter. (Sent by FA without request but UI is hidden.) [ chosen security type ] e.g. \"Bond\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":32, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-portfolioIdTxt String No UI is available for this parameter. (Sent by FA without request but UI is hidden.) [ name of contact ] e.g. \"Antti Arvo\" or [ name of portfolio ] e.g. \"Investment portfolio\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":33, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-securityTxt (Securities) String No UI is available for this parameter. (Sent by FA without request but UI is hidden.) [ name of the security ]"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":34, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionTagsTxt String No UI is available for this parameter. (Sent by FA without request but UI is hidden.) [ chosen tag ] e.g. \"Settlement - waiting\""},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":35, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-sortingDate Long This enables the Date Type selector UI for another Date component (Transaction date \/ Settlement date). (Sent by FA without request but UI is hidden.) 0 or 1"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":36, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-portfolioId Array of Strings This enables the Portfolio selector UI field. (Sent by FA without request but UI is hidden.) 10527618 (database ID)"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":37, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-language String The Language selector UI is always enabled. (Sent by FA without request but UI is hidden.) fi_FI"},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":38, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-transactionId Array of Longs This enables the report to be run in the transactions view. "},
{"title":"Parameters sent by request", "document":["FA Developer guide"], "hierarchicalCategories": {"lvl1": ["Document > FA Developer guide"], "lvl0": ["Document"]}, "pos":39, "url":"parameters-available-in-a-report.html#parameters-sent-by-request", "body":"param-tradeOrderId Array of Longs This enables the report to be run in the trade orders view. "},
{"title":"Item types included in the file", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":2, "url":"-extension--sie-export.html#item-types-included-in-the-file", "body":"Item type Description"},
{"title":"Item types included in the file", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"-extension--sie-export.html#item-types-included-in-the-file", "body":"#FLAGGA #PROGRAM #FORMAT #GEN #SIETYP Automatically filled in."},
{"title":"Item types included in the file", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"-extension--sie-export.html#item-types-included-in-the-file", "body":"#FNAMN \"Company name\" from process configurations."},
{"title":"Item types included in the file", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"-extension--sie-export.html#item-types-included-in-the-file", "body":"#KONTO Bookkeeping accounts from the reporeted postings (as defined in \"Account set\" Preferences)."},
{"title":"Item types included in the file", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"-extension--sie-export.html#item-types-included-in-the-file", "body":"#DIM #OBJEKT Dimensions are generated with the codes you defined in process configurations, and the corresponding data is fetched from FA as objects."},
{"title":"Item types included in the file", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"-extension--sie-export.html#item-types-included-in-the-file", "body":"#VER #TRANS Verification item indicates a transaction which postings are reported, and transaction items below it include the actual postings reported."},
{"title":"Key figures", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":3, "url":"portfolio-window.html#key-figures", "body":"Key figure Description"},
{"title":"Key figures", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":4, "url":"portfolio-window.html#key-figures", "body":"Collateral value The collateral value of a portfolio position, calculated by multiplying the market value and collateral ratio of the security."},
{"title":"Key figures", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":5, "url":"portfolio-window.html#key-figures", "body":"Available credit The amount of portfolio credit available for the client to use."},
{"title":"Key figures", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":6, "url":"portfolio-window.html#key-figures", "body":"Used credit The amount of portfolio credit already used by the client."},
{"title":"Key figures", "document":["FA Back reference"], "hierarchicalCategories": {"lvl1": ["Document > FA Back reference"], "lvl0": ["Document"]}, "pos":7, "url":"portfolio-window.html#key-figures", "body":"Portfolio credit The total amount of portfolio credit made available to the client."}]